;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :file "condition.hpp"
      :fsize 490
      :lastmodtime '(21413 1115 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_MUTEX_HPP" variable (:constant-flag t) nil [40 62])
            ("boost/thread/detail/platform.hpp" include (:system-flag t) nil [284 327])
            ("boost/thread/lockable_traits.hpp" include (:system-flag t) nil [562 605])
            ("boost" type
               (:members 
                  ( ("sync" type (:type "namespace") (reparse-symbol namespacesubparts) [628 1156]))                  
                :type "namespace")
                nil [608 1158]))          
      :file "mutex.hpp"
      :pointmax 1167
      :fsize 1166
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((string 509 . 553) (symbol 503 . 508) (punctuation 502 . 503))
      :lexical-table 
        '(("BOOST_THREAD_MUTEX_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_XTIME_WEK070601_HPP" variable (:constant-flag t) nil [290 315])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [317 358]))          
      :file "xtime.hpp"
      :pointmax 2326
      :fsize 2325
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_XTIME_WEK070601_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_THREAD_HPP" variable (:constant-flag t) nil [41 64])
            ("boost/thread/thread_only.hpp" include (:system-flag t) nil [289 328])
            ("boost/thread/detail/thread_group.hpp" include (:system-flag t) nil [329 376]))          
      :file "thread.hpp"
      :pointmax 386
      :fsize 385
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_THREAD_THREAD_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_CONDITION_VARIABLE_HPP" variable (:constant-flag t) nil [53 88])
            ("boost/thread/detail/platform.hpp" include (:system-flag t) nil [324 367]))          
      :file "condition_variable.hpp"
      :pointmax 635
      :fsize 634
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((string 575 . 619) (symbol 569 . 574) (punctuation 568 . 569))
      :lexical-table 
        '(("BOOST_THREAD_CONDITION_VARIABLE_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_EXCEPTIONS_PDM070801_H" variable (:constant-flag t) nil [352 387])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [389 430])
            ("string" include (:system-flag t) nil [734 751])
            ("stdexcept" include (:system-flag t) nil [752 772])
            ("boost/system/system_error.hpp" include (:system-flag t) nil [773 813])
            ("boost/system/error_code.hpp" include (:system-flag t) nil [814 852])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [855 893])
            ("boost" type
               (:members 
                  ( ("system::system_error" variable (:type "int") (reparse-symbol namespacesubparts) [1092 1895])
                    ("system::system_error" variable (:type "int") (reparse-symbol namespacesubparts) [1960 2710])
                    ("thread_exception" variable (:type "int") (reparse-symbol namespacesubparts) [2771 3291])
                    ("thread_exception" variable (:type "int") (reparse-symbol namespacesubparts) [3362 4033])
                    ("thread_exception" variable (:type "int") (reparse-symbol namespacesubparts) [4108 4735])
                    ("thread_exception" variable (:type "int") (reparse-symbol namespacesubparts) [4808 5393])
                    ("thread_exception" variable (:type "int") (reparse-symbol namespacesubparts) [5466 6082]))                  
                :type "namespace")
                nil [895 6085])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [6106 6144]))          
      :file "exceptions.hpp"
      :pointmax 6153
      :fsize 6152
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((PUBLIC 5459 . 5465) (punctuation 5449 . 5450) (symbol 5426 . 5449) (symbol 5405 . 5425) (CLASS 5399 . 5404) (PUBLIC 4801 . 4807) (punctuation 4791 . 4792) (symbol 4768 . 4791) (symbol 4747 . 4767) (CLASS 4741 . 4746) (PUBLIC 4101 . 4107) (punctuation 4091 . 4092) (symbol 4066 . 4091) (symbol 4045 . 4065) (CLASS 4039 . 4044) (PUBLIC 3355 . 3361) (punctuation 3345 . 3346) (symbol 3324 . 3345) (symbol 3303 . 3323) (CLASS 3297 . 3302) (PUBLIC 2764 . 2770) (punctuation 2754 . 2755) (symbol 2744 . 2754) (symbol 2723 . 2743) (CLASS 2717 . 2722) (PUBLIC 1953 . 1959) (punctuation 1943 . 1944) (symbol 1928 . 1943) (symbol 1907 . 1927) (CLASS 1901 . 1906) (PUBLIC 1085 . 1091) (punctuation 1075 . 1076) (symbol 1059 . 1075) (symbol 1038 . 1058) (CLASS 1032 . 1037))
      :lexical-table 
        '(("BOOST_THREAD_EXCEPTIONS_PDM070801_H")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_ONCE_HPP" variable (:constant-flag t) nil [39 60])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [283 324])
            ("boost/thread/detail/platform.hpp" include (:system-flag t) nil [325 368])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [772 810])
            ("boost" type
               (:members 
                  ( ("call_once" function
                       (:template 
                          ( ("Function" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("func" variable (:type ("Function" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [996 1010])
                            ("flag" variable
                               (:reference 1
                                :type ("once_flag" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1010 1026]))                          
                        :typemodifiers ("inline"))
                        (reparse-symbol namespacesubparts) [946 1124]))                  
                :type "namespace")
                nil [812 1126])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [1128 1166]))          
      :file "once.hpp"
      :pointmax 1175
      :fsize 1174
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((string 719 . 763) (symbol 713 . 718) (punctuation 712 . 713))
      :lexical-table 
        '(("BOOST_THREAD_ONCE_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_RECURSIVE_MUTEX_HPP" variable (:constant-flag t) nil [50 82])
            ("boost/thread/detail/platform.hpp" include (:system-flag t) nil [314 357])
            ("boost/thread/lockable_traits.hpp" include (:system-flag t) nil [612 655])
            ("boost" type
               (:members 
                  ( ("sync" type
                       (:members 
                          ( ("is_recursive_mutex_sur_parolle" type
                               (:type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [1352 1357])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1358 1370]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [1330 1372]))                                  
                                :template-specifier 
                                  ( ("recursive_mutex" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1248 1379])
                            ("is_recursive_mutex_sur_parolle" type
                               (:type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [1494 1499])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1500 1512]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [1472 1514]))                                  
                                :template-specifier 
                                  ( ("recursive_timed_mutex" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1384 1521]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [677 1526]))                  
                :type "namespace")
                nil [657 1528]))          
      :file "recursive_mutex.hpp"
      :pointmax 1536
      :fsize 1535
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((string 559 . 603) (symbol 553 . 558) (punctuation 552 . 553))
      :lexical-table 
        '(("BOOST_THREAD_RECURSIVE_MUTEX_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_TSS_HPP" variable (:constant-flag t) nil [38 58])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [257 298])
            ("boost/shared_ptr.hpp" include (:system-flag t) nil [299 330])
            ("boost/thread/detail/thread_heap_alloc.hpp" include (:system-flag t) nil [331 383])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [385 423])
            ("boost" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("tss_cleanup_function" type
                               (:members 
                                  ( ("tss_cleanup_function" function
                                       (:destructor-flag t
                                        :typemodifiers ("virtual")
                                        :type "void")
                                        (reparse-symbol classsubparts) [528 574])
                                    ("()" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :operator-flag t
                                        :typemodifiers ("virtual")
                                        :arguments 
                                          ( ("data" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [624 635]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [600 638]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [478 649])
                            ("set_tss_data" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [703 719])
                                    ("func" variable (:type ("boost::shared_ptr" type
                                         (:template-specifier 
                                            ( ("tss_cleanup_function" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [719 764])
                                    ("tss_data" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [764 779])
                                    ("cleanup_existing" variable (:type "bool") (reparse-symbol arg-sub-list) [779 801]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [685 802])
                            ("get_tss_data" function
                               (:prototype-flag t
                                :pointer 1
                                :arguments 
                                  ( ("key" variable
                                       (:pointer 1
                                        :constant-flag t
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [848 864]))                                  
                                :type "void")
                                (reparse-symbol namespacesubparts) [829 865]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [447 871])
                    ("thread_specific_ptr" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [939 947])
                            ("thread_specific_ptr" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("thread_specific_ptr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [976 997]))                                  
                                :type ("thread_specific_ptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [956 998])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("thread_specific_ptr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1038 1059]))                                  
                                :type ("thread_specific_ptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1007 1060])
                            ("delete_data" type
                               (:superclasses 
                                  ( ("detail::tss_cleanup_function" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("data" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [1169 1180]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1153 1254]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [1070 1265])
                            ("run_custom_cleanup_function" type
                               (:superclasses 
                                  ( ("detail::tss_cleanup_function" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("cleanup_function" function
                                       (:prototype-flag t
                                        :function-pointer t
                                        :arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1407 1410]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1382 1411])
                                    ("run_custom_cleanup_function" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("cleanup_function_" function
                                               (:function-pointer t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [1500 1503]))                                                  
                                                :type "void")
                                                nil nil))                                          
                                        :type ("run_custom_cleanup_function" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [1446 1572])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("data" variable
                                               (:pointer 1
                                                :type "void")
                                                (reparse-symbol arg-sub-list) [1614 1625]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [1598 1710]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [1283 1721])
                            ("cleanup" variable (:type ("boost::shared_ptr" type
                                 (:template-specifier 
                                    ( ("detail::tss_cleanup_function" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1732 1788])
                            ("public" label nil (reparse-symbol classsubparts) [1802 1809])
                            ("element_type" type
                               (:typedef ("T" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [1818 1841])
                            ("thread_specific_ptr" function
                               (:constructor-flag t
                                :type ("thread_specific_ptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1859 1983])
                            ("thread_specific_ptr" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("func_" function
                                       (:function-pointer t
                                        :arguments 
                                          ( ("" variable
                                               (:pointer 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2035 2038]))                                          
                                        :type "void")
                                        nil nil))                                  
                                :type ("thread_specific_ptr" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2001 2248])
                            ("thread_specific_ptr" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [2257 2396])
                            ("get" function
                               (:methodconst-flag t
                                :pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2406 2504])
                            ("->" function
                               (:methodconst-flag t
                                :operator-flag t
                                :pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2513 2580])
                            ("" function
                               (:methodconst-flag t
                                :operator-flag t
                                :function-pointer t
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2589 2656])
                            ("release" function
                               (:pointer 1
                                :type ("T" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2665 2853])
                            ("reset" function
                               (:arguments 
                                  ( ("new_value" variable
                                       (:pointer 1
                                        :default-value "0"
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2873 2887]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [2862 3086]))                          )
                        (reparse-symbol namespacesubparts) [877 3093]))                  
                :type "namespace")
                nil [425 3095])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [3097 3135]))          
      :file "tss.hpp"
      :pointmax 3144
      :fsize 3143
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((EXPLICIT 1992 . 2000) (EXPLICIT 1437 . 1445) (EXPLICIT 1437 . 1445) (symbol 811 . 828) (symbol 667 . 684))
      :lexical-table 
        '(("BOOST_THREAD_TSS_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_TIME_HPP" variable (:constant-flag t) nil [39 60])
            ("boost/date_time/time_clock.hpp" include (:system-flag t) nil [265 306])
            ("boost/date_time/microsec_time_clock.hpp" include (:system-flag t) nil [307 357])
            ("boost/date_time/posix_time/posix_time_types.hpp" include (:system-flag t) nil [358 416])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [418 456])
            ("boost" type
               (:members 
                  ( ("system_time" type
                       (:typedef ("boost::posix_time::ptime" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [480 525])
                    ("get_system_time" function
                       (:typemodifiers ("inline")
                        :type ("system_time" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [535 914])
                    ("detail" type
                       (:members 
                          ( ("get_system_time_sentinel" function
                               (:typemodifiers ("inline")
                                :type ("system_time" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [951 1078])
                            ("get_milliseconds_until" function
                               (:typemodifiers ("inline")
                                :arguments 
                                  ( ("target_time" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("system_time" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1132 1163]))                                  
                                :type "unsigned long")
                                (reparse-symbol namespacesubparts) [1088 1528]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [920 1535]))                  
                :type "namespace")
                nil [458 1542])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [1544 1582]))          
      :file "thread_time.hpp"
      :pointmax 1591
      :fsize 1590
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_THREAD_TIME_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_LOCKS_HPP" variable (:constant-flag t) nil [288 310])
            ("boost/thread/lock_algorithms.hpp" include (:system-flag t) nil [312 355])
            ("boost/thread/lock_types.hpp" include (:system-flag t) nil [356 394])
            ("boost/thread/lock_guard.hpp" include (:system-flag t) nil [395 433])
            ("boost/thread/lockable_traits.hpp" include (:system-flag t) nil [434 477])
            ("boost/thread/lock_options.hpp" include (:system-flag t) nil [478 518]))          
      :file "locks.hpp"
      :pointmax 527
      :fsize 526
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_THREAD_LOCKS_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_SHARED_MUTEX_HPP" variable (:constant-flag t) nil [47 76])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [358 399])
            ("boost/thread/lockable_traits.hpp" include (:system-flag t) nil [819 862])
            ("boost" type
               (:members 
                  ( ("sync" type (:type "namespace") (reparse-symbol namespacesubparts) [884 1195]))                  
                :type "namespace")
                nil [864 1197]))          
      :file "shared_mutex.hpp"
      :pointmax 1206
      :fsize 1205
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((string 766 . 810) (symbol 760 . 765) (punctuation 759 . 760))
      :lexical-table 
        '(("BOOST_THREAD_SHARED_MUTEX_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_BARRIER_JDM030602_HPP" variable (:constant-flag t) nil [305 332])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [334 375])
            ("boost/thread/detail/delete.hpp" include (:system-flag t) nil [376 417])
            ("boost/throw_exception.hpp" include (:system-flag t) nil [419 455])
            ("boost/thread/mutex.hpp" include (:system-flag t) nil [456 489])
            ("boost/thread/lock_types.hpp" include (:system-flag t) nil [490 528])
            ("boost/thread/condition_variable.hpp" include (:system-flag t) nil [529 575])
            ("string" include (:system-flag t) nil [576 593])
            ("stdexcept" include (:system-flag t) nil [594 614])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [616 654])
            ("boost" type
               (:members 
                  ( ("barrier" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [703 710])
                            ("barrier" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("count" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [772 791]))                                  
                                :type ("barrier" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [764 1041])
                            ("wait" function (:type "bool") (reparse-symbol classsubparts) [1051 1487])
                            ("private" label nil (reparse-symbol classsubparts) [1493 1501])
                            ("m_mutex" variable (:type ("mutex" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1510 1524])
                            ("m_cond" variable (:type ("condition_variable" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1533 1559])
                            ("m_threshold" variable (:type "unsigned int") (reparse-symbol classsubparts) [1568 1593])
                            ("m_count" variable (:type "unsigned int") (reparse-symbol classsubparts) [1602 1623])
                            ("m_generation" variable (:type "unsigned int") (reparse-symbol classsubparts) [1632 1658]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [679 1665]))                  
                :type "namespace")
                nil [656 1668])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [1691 1729]))          
      :file "barrier.hpp"
      :pointmax 1738
      :fsize 1737
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 743 . 754) (symbol 719 . 743))
      :lexical-table 
        '(("BOOST_BARRIER_JDM030602_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_FUTURE_HPP" variable (:constant-flag t) nil [300 323])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [325 366])
            ("boost/detail/scoped_enum_emulation.hpp" include (:system-flag t) nil [545 594])
            ("stdexcept" include (:system-flag t) nil [595 615])
            ("boost/thread/detail/move.hpp" include (:system-flag t) nil [616 655])
            ("boost/thread/detail/async_func.hpp" include (:system-flag t) nil [656 701])
            ("boost/thread/thread_time.hpp" include (:system-flag t) nil [702 741])
            ("boost/thread/mutex.hpp" include (:system-flag t) nil [742 775])
            ("boost/thread/condition_variable.hpp" include (:system-flag t) nil [776 822])
            ("boost/thread/lock_algorithms.hpp" include (:system-flag t) nil [823 866])
            ("boost/thread/lock_types.hpp" include (:system-flag t) nil [867 905])
            ("boost/exception_ptr.hpp" include (:system-flag t) nil [906 940])
            ("boost/shared_ptr.hpp" include (:system-flag t) nil [941 972])
            ("boost/scoped_ptr.hpp" include (:system-flag t) nil [973 1004])
            ("boost/type_traits/is_fundamental.hpp" include (:system-flag t) nil [1005 1052])
            ("boost/thread/detail/is_convertible.hpp" include (:system-flag t) nil [1053 1102])
            ("boost/type_traits/remove_reference.hpp" include (:system-flag t) nil [1103 1152])
            ("boost/type_traits/remove_cv.hpp" include (:system-flag t) nil [1153 1195])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [1196 1223])
            ("boost/config.hpp" include (:system-flag t) nil [1224 1251])
            ("boost/throw_exception.hpp" include (:system-flag t) nil [1252 1288])
            ("algorithm" include (:system-flag t) nil [1289 1309])
            ("boost/function.hpp" include (:system-flag t) nil [1310 1339])
            ("boost/bind.hpp" include (:system-flag t) nil [1340 1365])
            ("boost/ref.hpp" include (:system-flag t) nil [1366 1390])
            ("boost/scoped_array.hpp" include (:system-flag t) nil [1391 1424])
            ("boost/enable_shared_from_this.hpp" include (:system-flag t) nil [1425 1469])
            ("boost/utility/enable_if.hpp" include (:system-flag t) nil [1470 1508])
            ("list" include (:system-flag t) nil [1509 1524])
            ("boost/next_prior.hpp" include (:system-flag t) nil [1525 1556])
            ("vector" include (:system-flag t) nil [1557 1574])
            ("boost/thread/future_error_code.hpp" include (:system-flag t) nil [1576 1621])
            ("boost/utility/result_of.hpp" include (:system-flag t) nil [1811 1849])
            ("boost/thread/thread_only.hpp" include (:system-flag t) nil [1850 1889])
            ("BOOST_THREAD_FUTURE" variable (:constant-flag t) nil [1981 2000])
            ("boost" type
               (:members 
                  ( ("BOOST_SCOPED_ENUM_DECLARE_BEGIN" function
                       (:arguments 
                          ( ("" variable (:type ("launch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2098 2105]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2066 2195])
                    ("BOOST_SCOPED_ENUM_DECLARE_BEGIN" function
                       (:arguments 
                          ( ("" variable (:type ("future_status" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2300 2314]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [2268 2365])
                    ("std::logic_error" variable (:type "int") (reparse-symbol namespacesubparts) [2471 2742])
                    ("future_error" variable (:type "int") (reparse-symbol namespacesubparts) [2812 2964])
                    ("future_error" variable (:type "int") (reparse-symbol namespacesubparts) [3027 3178])
                    ("future_error" variable (:type "int") (reparse-symbol namespacesubparts) [3251 3422])
                    ("future_error" variable (:type "int") (reparse-symbol namespacesubparts) [3496 3669])
                    ("future_error" variable (:type "int") (reparse-symbol namespacesubparts) [3739 3905])
                    ("future_error" variable (:type "int") (reparse-symbol namespacesubparts) [3973 4138])
                    ("promise_moved" type
                       (:superclasses 
                          ( ("future_error" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :members 
                          ( ("public" label nil (reparse-symbol classsubparts) [4235 4242])
                            ("promise_moved" function
                               (:constructor-flag t
                                :type ("promise_moved" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4261 4375]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [4152 4390])
                    ("future_state" type
                       (:members 
                          ( ("state" type
                               (:members 
                                  ( ("uninitialized" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4446 4460])
                                    ("waiting" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4461 4469])
                                    ("ready" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4470 4476])
                                    ("moved" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4477 4483])
                                    ("deferred" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [4484 4494]))                                  
                                :type "enum")
                                (reparse-symbol namespacesubparts) [4433 4495]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [4396 4501])
                    ("detail" type
                       (:members 
                          ( ("relocker" type
                               (:members 
                                  ( ("lock_" variable (:type ("boost::unique_lock" type
                                         (:template-specifier 
                                            ( ("boost::mutex" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [4827 4867])
                                    ("unlocked_" variable (:type "bool") (reparse-symbol classsubparts) [4880 4896])
                                    ("relocker" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("lk" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [4919 4956]))                                          
                                        :type ("relocker" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [4910 5075])
                                    ("relocker" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [5088 5204])
                                    ("lock" function (:type "void") (reparse-symbol classsubparts) [5217 5354])
                                    ("private" label nil (reparse-symbol classsubparts) [5363 5371])
                                    ("=" function
                                       (:prototype-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("relocker" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5404 5420]))                                          
                                        :type ("relocker" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5384 5421]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [4789 5432])
                            ("future_object_base" type
                               (:superclasses 
                                  ( ("enable_shared_from_this" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("exception" variable (:type ("boost::exception_ptr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5537 5568])
                                    ("done" variable (:type "bool") (reparse-symbol classsubparts) [5581 5591])
                                    ("is_deferred_" variable (:type "bool") (reparse-symbol classsubparts) [5604 5622])
                                    ("policy_" variable (:type ("launch" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5635 5650])
                                    ("is_constructed" variable (:type "bool") (reparse-symbol classsubparts) [5663 5683])
                                    ("mutex" variable (:type ("boost::mutex" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5696 5715])
                                    ("waiters" variable (:type ("boost::condition_variable" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5728 5762])
                                    ("waiter_list" type
                                       (:typedef ("std::list" type
                                             (:template-specifier 
                                                ( ("boost::condition_variable_any" type (:pointer 1) nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [5775 5837])
                                    ("external_waiters" variable (:type ("waiter_list" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5850 5879])
                                    ("callback" variable (:type "int") (reparse-symbol classsubparts) [5916 5925])
                                    ("thread_was_interrupted" variable (:type "bool") (reparse-symbol classsubparts) [5988 6016])
                                    ("continuation_ptr_type" type
                                       (:typedef ("shared_ptr" type
                                             (:template-specifier 
                                                ( ("void" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [6172 6219])
                                    ("continuation_ptr" variable (:type ("continuation_ptr_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6239 6278])
                                    ("launch_continuation" function
                                       (:typemodifiers ("virtual")
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [6382 6416]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [6349 6444])
                                    ("future_object_base" function
                                       (:constructor-flag t
                                        :type ("future_object_base" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [6466 7084])
                                    ("future_object_base" function
                                       (:destructor-flag t
                                        :typemodifiers ("virtual")
                                        :type "void")
                                        (reparse-symbol classsubparts) [7097 7141])
                                    ("set_deferred" function (:type "void") (reparse-symbol classsubparts) [7155 7288])
                                    ("set_async" function (:type "void") (reparse-symbol classsubparts) [7301 7429])
                                    ("set_launch_policy" function
                                       (:arguments 
                                          ( ("policy" variable (:type ("launch" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7465 7479]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [7442 7539])
                                    ("register_external_waiter" function
                                       (:arguments 
                                          ( ("cv" variable
                                               (:reference 1
                                                :type ("boost::condition_variable_any" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7600 7634]))                                          
                                        :type ("waiter_list::iterator" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7553 7835])
                                    ("remove_external_waiter" function
                                       (:arguments 
                                          ( ("it" variable (:type ("waiter_list::iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7877 7902]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [7849 8035])
                                    ("do_continuation" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [8471 8505]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [8450 8533])
                                    ("mark_finished_internal" function
                                       (:arguments 
                                          ( ("lock" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [8911 8950]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [8883 9301])
                                    ("make_ready" function (:type "void") (reparse-symbol classsubparts) [9314 9463])
                                    ("do_callback" function
                                       (:arguments 
                                          ( ("lock" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [9494 9533]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [9477 9785])
                                    ("wait_internal" function
                                       (:arguments 
                                          ( ("lock" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [9819 9858])
                                            ("rethrow" variable
                                               (:default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [9859 9876]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [9800 10725])
                                    ("wait" function
                                       (:arguments 
                                          ( ("rethrow" variable
                                               (:default-value "true"
                                                :type "bool")
                                                (reparse-symbol arg-sub-list) [10748 10765]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [10738 10902])
                                    ("mark_exceptional_finish_internal" function
                                       (:arguments 
                                          ( ("e" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("boost::exception_ptr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [12277 12307])
                                            ("lock" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [12308 12347]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [12239 12450])
                                    ("mark_exceptional_finish" function (:type "void") (reparse-symbol classsubparts) [12463 12667])
                                    ("set_exception_at_thread_exit" function
                                       (:arguments 
                                          ( ("e" variable (:type ("exception_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13382 13398]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [13348 13764])
                                    ("has_value" function (:type "bool") (reparse-symbol classsubparts) [13777 14045])
                                    ("has_value" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [14073 14101]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [14058 14292])
                                    ("has_exception" function (:type "bool") (reparse-symbol classsubparts) [14305 14580])
                                    ("has_exception" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [14612 14639]))                                          
                                        :type "bool")
                                        (reparse-symbol classsubparts) [14593 14833])
                                    ("set_wait_callback" function
                                       (:template 
                                          ( ("F" type (:type "class") nil nil)
                                            ("U" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("f" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15137 15141])
                                            ("u" variable
                                               (:pointer 1
                                                :type ("U" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [15141 15146]))                                          )
                                        (reparse-symbol classsubparts) [15070 15291])
                                    ("execute" function
                                       (:typemodifiers ("virtual")
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [15325 15359]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [15304 15362])
                                    ("private" label nil (reparse-symbol classsubparts) [15372 15380])
                                    ("future_object_base" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("future_object_base" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [15412 15438]))                                          
                                        :type ("future_object_base" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [15393 15439])
                                    ("=" function
                                       (:prototype-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("future_object_base" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [15482 15508]))                                          
                                        :type ("future_object_base" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [15452 15509]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [5442 15520])
                            ("future_traits" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("storage_type" type
                                       (:typedef ("boost::scoped_ptr" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [15600 15642])
                                    ("dummy" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol classsubparts) [15653 15666])
                                    ("source_reference_type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15726 15757])
                                    ("rvalue_source_type" variable (:type "int") (reparse-symbol classsubparts) [15926 15945])
                                    ("move_dest_type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [16074 16099])
                                    ("source_reference_type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16640 16665])
                                    ("rvalue_source_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16808 16832])
                                    ("move_dest_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16968 16988])
                                    ("shared_future_get_result_type" variable
                                       (:constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [17018 17057])
                                    ("init" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("storage" variable
                                               (:reference 1
                                                :type ("storage_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17088 17110])
                                            ("t" variable (:type ("source_reference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17110 17134]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [17071 17203])
                                    ("init" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("storage" variable
                                               (:reference 1
                                                :type ("storage_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17234 17256])
                                            ("t" variable (:type ("rvalue_source_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17256 17277]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [17217 17496])
                                    ("cleanup" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("storage" variable
                                               (:reference 1
                                                :type ("storage_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17530 17552]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [17510 17613]))                                  )
                                (reparse-symbol namespacesubparts) [15530 17624])
                            ("future_traits" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("storage_type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :pointer 1
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [17710 17734])
                                    ("source_reference_type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17755 17780])
                                    ("move_dest_type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17859 17877])
                                    ("shared_future_get_result_type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [17898 17931])
                                    ("init" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("storage" variable
                                               (:reference 1
                                                :type ("storage_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17962 17984])
                                            ("t" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [17984 17989]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [17945 18045])
                                    ("cleanup" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("storage" variable
                                               (:reference 1
                                                :type ("storage_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [18079 18101]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [18059 18156]))                                  
                                :template-specifier 
                                  ( ("T" type (:reference 1) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [17634 18167])
                            ("future_traits" type
                               (:type "struct"
                                :members 
                                  ( ("storage_type" type
                                       (:typedef ("bool")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [18245 18271])
                                    ("move_dest_type" type
                                       (:typedef ("void")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [18284 18312])
                                    ("shared_future_get_result_type" type
                                       (:typedef ("void")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [18325 18368])
                                    ("init" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("storage" variable
                                               (:reference 1
                                                :type ("storage_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [18399 18421]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [18382 18479])
                                    ("cleanup" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("storage" variable
                                               (:reference 1
                                                :type ("storage_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [18513 18535]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [18493 18594]))                                  
                                :template-specifier 
                                  ( ("void" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [18177 18606])
                            ("future_object" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("storage_type" variable (:type ("storage_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18809 18835])
                                    ("source_reference_type" variable (:type ("source_reference_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18883 18927])
                                    ("rvalue_source_type" variable (:type ("rvalue_source_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18975 19013])
                                    ("move_dest_type" variable (:type ("move_dest_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19061 19091])
                                    ("shared_future_get_result_type" variable (:type ("shared_future_get_result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19139 19199])
                                    ("result" variable (:type ("storage_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19213 19233])
                                    ("future_object" function
                                       (:constructor-flag t
                                        :type ("future_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [19247 19304])
                                    ("future_object" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [19318 19349])
                                    ("mark_finished_with_result_internal" function
                                       (:arguments 
                                          ( ("result_" variable (:type ("source_reference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19403 19433])
                                            ("lock" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [19434 19473]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [19363 19609])
                                    ("mark_finished_with_result_internal" function
                                       (:arguments 
                                          ( ("result_" variable (:type ("rvalue_source_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19663 19690])
                                            ("lock" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [19691 19730]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [19623 20035])
                                    ("mark_finished_with_result" function
                                       (:arguments 
                                          ( ("result_" variable (:type ("source_reference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20080 20110]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [20049 20273])
                                    ("mark_finished_with_result" function
                                       (:arguments 
                                          ( ("result_" variable (:type ("rvalue_source_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20318 20345]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [20287 20683])
                                    ("get" function
                                       (:typemodifiers ("virtual")
                                        :type ("move_dest_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [20698 20823])
                                    ("get_sh" function (:type ("shared_future_get_result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20837 20959])
                                    ("get_state" function (:type ("future_state::state" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21033 21371])
                                    ("set_value_at_thread_exit" function
                                       (:arguments 
                                          ( ("result_" variable (:type ("source_reference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21479 21509]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [21449 21961])
                                    ("set_value_at_thread_exit" function
                                       (:arguments 
                                          ( ("result_" variable (:type ("rvalue_source_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22080 22107]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [22050 22572])
                                    ("private" label nil (reparse-symbol classsubparts) [22583 22591])
                                    ("future_object" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("future_object" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [22618 22639]))                                          
                                        :type ("future_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [22604 22640])
                                    ("=" function
                                       (:prototype-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("future_object" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [22678 22699]))                                          
                                        :type ("future_object" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [22653 22700]))                                  
                                :superclasses 
                                  ( ("detail::future_object_base" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [18662 22711])
                            ("future_object" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("storage_type" variable (:type ("storage_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22873 22899])
                                    ("source_reference_type" variable (:type ("source_reference_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22948 22992])
                                    ("move_dest_type" variable (:type ("move_dest_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23130 23160])
                                    ("shared_future_get_result_type" variable (:type ("shared_future_get_result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23209 23269])
                                    ("result" variable
                                       (:pointer 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [23283 23293])
                                    ("future_object" function
                                       (:constructor-flag t
                                        :type ("future_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [23307 23364])
                                    ("future_object" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [23378 23422])
                                    ("mark_finished_with_result_internal" function
                                       (:arguments 
                                          ( ("result_" variable (:type ("source_reference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23476 23506])
                                            ("lock" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [23507 23546]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [23436 23712])
                                    ("mark_finished_with_result" function
                                       (:arguments 
                                          ( ("result_" variable (:type ("source_reference_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [24052 24082]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [24021 24239])
                                    ("get" function (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24526 24669])
                                    ("get_sh" function (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24683 24856])
                                    ("get_state" function (:type ("future_state::state" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24930 25268])
                                    ("set_value_at_thread_exit" function
                                       (:arguments 
                                          ( ("result_" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25312 25323]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [25282 25730])
                                    ("private" label nil (reparse-symbol classsubparts) [26233 26241])
                                    ("future_object" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("future_object" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26268 26289]))                                          
                                        :type ("future_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [26254 26290])
                                    ("=" function
                                       (:prototype-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("future_object" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26328 26349]))                                          
                                        :type ("future_object" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [26303 26350]))                                  
                                :superclasses 
                                  ( ("detail::future_object_base" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("T" type (:reference 1) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [22721 26361])
                            ("future_object" type
                               (:type "struct"
                                :members 
                                  ( ("shared_future_get_result_type" type
                                       (:typedef ("void")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [26477 26520])
                                    ("future_object" function
                                       (:constructor-flag t
                                        :type ("future_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [26534 26564])
                                    ("mark_finished_with_result_internal" function
                                       (:arguments 
                                          ( ("lock" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [26618 26657]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [26578 26731])
                                    ("mark_finished_with_result" function (:type "void") (reparse-symbol classsubparts) [26745 26925])
                                    ("get" function (:type "void") (reparse-symbol classsubparts) [26939 27007])
                                    ("get_sh" function (:type "void") (reparse-symbol classsubparts) [27020 27085])
                                    ("get_state" function (:type ("future_state::state" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27158 27496])
                                    ("set_value_at_thread_exit" function (:type "void") (reparse-symbol classsubparts) [27509 27890])
                                    ("private" label nil (reparse-symbol classsubparts) [27899 27907])
                                    ("future_object" function
                                       (:prototype-flag t
                                        :constructor-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("future_object" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27934 27955]))                                          
                                        :type ("future_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [27920 27956])
                                    ("=" function
                                       (:prototype-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("future_object" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27994 28015]))                                          
                                        :type ("future_object" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [27969 28016]))                                  
                                :superclasses 
                                  ( ("detail::future_object_base" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("void" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [26371 28027])
                            ("future_async_object" type
                               (:template 
                                  ( ("Rp" type (:type "class") nil nil)
                                    ("Fp" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("base_type" type
                                       (:typedef ("future_object" type
                                             (:template-specifier 
                                                ( ("Rp" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [28246 28282])
                                    ("move_dest_type" type
                                       (:typedef ("base_type::move_dest_type" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [28293 28351])
                                    ("thr_" variable (:type ("boost::thread" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28363 28382])
                                    ("public" label nil (reparse-symbol classsubparts) [28392 28399])
                                    ("future_async_object" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28439 28463])
                                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28464 28466]))                                          
                                        :type ("future_async_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [28419 28596])
                                    ("future_async_object" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [28608 28700])
                                    ("get" function (:type ("move_dest_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [28712 29185])
                                    ("run" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("that" variable
                                               (:pointer 1
                                                :type ("future_async_object" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [29212 29238])
                                            ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29239 29263])
                                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29264 29266]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [29196 29654]))                                  
                                :superclasses 
                                  ( ("future_object" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [28137 29665])
                            ("future_async_object" type
                               (:template 
                                  ( ("Fp" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("base_type" type
                                       (:typedef ("future_object" type
                                             (:template-specifier 
                                                ( ("void" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [29790 29828])
                                    ("thr_" variable (:type ("boost::thread" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29839 29858])
                                    ("public" label nil (reparse-symbol classsubparts) [29868 29875])
                                    ("future_async_object" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29915 29939])
                                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29940 29942]))                                          
                                        :type ("future_async_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [29895 30072])
                                    ("future_async_object" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [30084 30176])
                                    ("run" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("that" variable
                                               (:pointer 1
                                                :type ("future_async_object" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [30204 30230])
                                            ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30231 30255])
                                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30256 30258]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [30188 30662]))                                  
                                :superclasses 
                                  ( ("future_object" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("void" type nil nil nil)
                                    ("Fp" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [29675 30673])
                            ("future_async_object" type
                               (:template 
                                  ( ("Rp" type (:type "class") nil nil)
                                    ("Fp" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("base_type" type
                                       (:typedef ("future_object" type
                                             (:template-specifier 
                                                ( ("Rp" type (:reference 1) nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [30802 30839])
                                    ("move_dest_type" type
                                       (:typedef ("base_type::move_dest_type" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [30850 30908])
                                    ("thr_" variable (:type ("boost::thread" type (:type "class") nil nil)) (reparse-symbol classsubparts) [30920 30939])
                                    ("public" label nil (reparse-symbol classsubparts) [30949 30956])
                                    ("future_async_object" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30996 31020])
                                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31021 31023]))                                          
                                        :type ("future_async_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [30976 31153])
                                    ("future_async_object" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [31165 31257])
                                    ("get" function (:type ("move_dest_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [31269 31685])
                                    ("run" function
                                       (:typemodifiers ("static")
                                        :arguments 
                                          ( ("that" variable
                                               (:pointer 1
                                                :type ("future_async_object" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [31712 31738])
                                            ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31739 31763])
                                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31764 31766]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [31696 32154]))                                  
                                :superclasses 
                                  ( ("future_object" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("Rp" type (:reference 1) nil nil)
                                    ("Fp" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [30683 32165])
                            ("future_deferred_object" type
                               (:template 
                                  ( ("Rp" type (:type "class") nil nil)
                                    ("Fp" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("base_type" type
                                       (:typedef ("future_object" type
                                             (:template-specifier 
                                                ( ("Rp" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [32392 32428])
                                    ("func_" variable (:type ("Fp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [32439 32448])
                                    ("public" label nil (reparse-symbol classsubparts) [32458 32465])
                                    ("future_deferred_object" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32508 32532])
                                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32533 32535]))                                          
                                        :type ("future_deferred_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [32485 32634])
                                    ("execute" function
                                       (:typemodifiers ("virtual")
                                        :arguments 
                                          ( ("lck" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [32667 32705]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [32646 32965]))                                  
                                :superclasses 
                                  ( ("future_object" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [32280 32976])
                            ("future_deferred_object" type
                               (:template 
                                  ( ("Rp" type (:type "class") nil nil)
                                    ("Fp" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("base_type" type
                                       (:typedef ("future_object" type
                                             (:template-specifier 
                                                ( ("Rp" type (:reference 1) nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [33106 33143])
                                    ("func_" variable (:type ("Fp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33154 33163])
                                    ("public" label nil (reparse-symbol classsubparts) [33173 33180])
                                    ("future_deferred_object" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33223 33247])
                                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33248 33250]))                                          
                                        :type ("future_deferred_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [33200 33349])
                                    ("execute" function
                                       (:typemodifiers ("virtual")
                                        :arguments 
                                          ( ("lck" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [33382 33420]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [33361 33680]))                                  
                                :superclasses 
                                  ( ("future_object" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("Rp" type (:reference 1) nil nil)
                                    ("Fp" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [32985 33691])
                            ("future_deferred_object" type
                               (:template 
                                  ( ("Fp" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("base_type" type
                                       (:typedef ("future_object" type
                                             (:template-specifier 
                                                ( ("void" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [33811 33849])
                                    ("func_" variable (:type ("Fp" type (:type "class") nil nil)) (reparse-symbol classsubparts) [33860 33869])
                                    ("public" label nil (reparse-symbol classsubparts) [33879 33886])
                                    ("future_deferred_object" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33929 33953])
                                            ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33954 33956]))                                          
                                        :type ("future_deferred_object" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [33906 34055])
                                    ("execute" function
                                       (:typemodifiers ("virtual")
                                        :arguments 
                                          ( ("lck" variable
                                               (:reference 1
                                                :type ("boost::unique_lock" type
                                                     (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [34088 34126]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [34067 34400]))                                  
                                :superclasses 
                                  ( ("future_object" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("void" type nil nil nil)
                                    ("Fp" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [33701 34411])
                            ("future_waiter" type
                               (:members 
                                  ( ("registered_waiter" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol classsubparts) [34790 34815])
                                    ("count_type" type
                                       (:typedef ("std::vector::size_type" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [34828 34875])
                                    ("registered_waiter" type
                                       (:members 
                                          ( ("future_" variable (:type ("boost::shared_ptr" type
                                                 (:template-specifier 
                                                    ( ("detail::future_object_base" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [34944 34998])
                                            ("wait_iterator" variable (:type ("detail::future_object_base::waiter_list::iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35015 35079])
                                            ("index" variable (:type ("count_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35096 35113])
                                            ("registered_waiter" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("a_future" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("boost::shared_ptr" type
                                                             (:template-specifier 
                                                                ( ("detail::future_object_base" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [35149 35211])
                                                    ("wait_iterator_" variable (:type ("detail::future_object_base::waiter_list::iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35246 35311])
                                                    ("index_" variable (:type ("count_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [35346 35364]))                                                  
                                                :type ("registered_waiter" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [35131 35466]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [34889 35481])
                                    ("all_futures_lock" type
                                       (:members 
                                          ( ("count_type_portable" type
                                               (:typedef ("count_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [35637 35676])
                                            ("count" variable (:type ("count_type_portable" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35703 35729])
                                            ("locks" variable (:type ("boost::scoped_array" type
                                                 (:template-specifier 
                                                    ( ("boost::unique_lock" type (:template-specifier 
                                                        ( ("boost::mutex" type nil nil nil))                                                        ) nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [35749 35810])
                                            ("all_futures_lock" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("futures" variable
                                                       (:reference 1
                                                        :type ("std::vector" type
                                                             (:template-specifier 
                                                                ( ("registered_waiter" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [35845 35885]))                                                  
                                                :type ("all_futures_lock" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [35828 36428])
                                            ("lock" function (:type "void") (reparse-symbol classsubparts) [36446 36557])
                                            ("unlock" function (:type "void") (reparse-symbol classsubparts) [36575 36772]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [35495 36787])
                                    ("cv" variable (:type ("boost::condition_variable_any" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36801 36834])
                                    ("futures" variable (:type ("std::vector" type
                                         (:template-specifier 
                                            ( ("registered_waiter" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol classsubparts) [36847 36886])
                                    ("future_count" variable (:type ("count_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36899 36923])
                                    ("public" label nil (reparse-symbol classsubparts) [36933 36940])
                                    ("future_waiter" function
                                       (:constructor-flag t
                                        :type ("future_waiter" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [36953 37016])
                                    ("add" function
                                       (:template 
                                          ( ("F" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("f" variable
                                               (:reference 1
                                                :type ("F" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [37072 37077]))                                          )
                                        (reparse-symbol classsubparts) [37030 37325])
                                    ("wait" function (:type ("count_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37339 37786])
                                    ("future_waiter" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [37800 38027]))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [34748 38039]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [4507 38046])
                    ("unique_future" type
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [38052 38104])
                    ("shared_future" type
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [38110 38156])
                    ("is_future_type" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("BOOST_STATIC_CONSTANT" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [38245 38250])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38251 38262]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [38223 38264]))                          )
                        (reparse-symbol namespacesubparts) [38162 38271])
                    ("is_future_type" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("BOOST_STATIC_CONSTANT" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [38385 38390])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38391 38401]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [38363 38403]))                          
                        :template-specifier 
                          ( ("unique_future" type (:template-specifier 
                              ( ("T" type nil nil nil))                              ) nil nil))                          )
                        (reparse-symbol namespacesubparts) [38277 38410])
                    ("is_future_type" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("BOOST_STATIC_CONSTANT" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [38518 38523])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38524 38534]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [38496 38536]))                          
                        :template-specifier 
                          ( ("shared_future" type (:template-specifier 
                              ( ("T" type nil nil nil))                              ) nil nil))                          )
                        (reparse-symbol namespacesubparts) [38416 38543])
                    ("wait_for_all" function
                       (:template 
                          ( ("Iterator" type (:type "class") nil nil))                          
                        :type ("boost::disable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("begin" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38658 38673])
                            ("end" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [38673 38686]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [38549 38806])
                    ("wait_for_all" function
                       (:template 
                          ( ("F1" type (:type "class") nil nil)
                            ("F2" type (:type "class") nil nil))                          
                        :type ("boost::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("f1" variable
                               (:reference 1
                                :type ("F1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [38920 38927])
                            ("f2" variable
                               (:reference 1
                                :type ("F2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [38927 38934]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [38812 38984])
                    ("wait_for_all" function
                       (:template 
                          ( ("F1" type (:type "class") nil nil)
                            ("F2" type (:type "class") nil nil)
                            ("F3" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("f1" variable
                               (:reference 1
                                :type ("F1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39058 39065])
                            ("f2" variable
                               (:reference 1
                                :type ("F2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39065 39072])
                            ("f3" variable
                               (:reference 1
                                :type ("F3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39072 39079]))                          )
                        (reparse-symbol namespacesubparts) [38990 39148])
                    ("wait_for_all" function
                       (:template 
                          ( ("F1" type (:type "class") nil nil)
                            ("F2" type (:type "class") nil nil)
                            ("F3" type (:type "class") nil nil)
                            ("F4" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("f1" variable
                               (:reference 1
                                :type ("F1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39234 39241])
                            ("f2" variable
                               (:reference 1
                                :type ("F2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39241 39248])
                            ("f3" variable
                               (:reference 1
                                :type ("F3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39248 39255])
                            ("f4" variable
                               (:reference 1
                                :type ("F4" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39255 39262]))                          )
                        (reparse-symbol namespacesubparts) [39154 39350])
                    ("wait_for_all" function
                       (:template 
                          ( ("F1" type (:type "class") nil nil)
                            ("F2" type (:type "class") nil nil)
                            ("F3" type (:type "class") nil nil)
                            ("F4" type (:type "class") nil nil)
                            ("F5" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("f1" variable
                               (:reference 1
                                :type ("F1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39448 39455])
                            ("f2" variable
                               (:reference 1
                                :type ("F2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39455 39462])
                            ("f3" variable
                               (:reference 1
                                :type ("F3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39462 39469])
                            ("f4" variable
                               (:reference 1
                                :type ("F4" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39469 39476])
                            ("f5" variable
                               (:reference 1
                                :type ("F5" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [39476 39483]))                          )
                        (reparse-symbol namespacesubparts) [39356 39590])
                    ("wait_for_any" function
                       (:template 
                          ( ("Iterator" type (:type "class") nil nil))                          
                        :type ("boost::disable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("begin" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39709 39724])
                            ("end" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39724 39737]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [39596 39997])
                    ("wait_for_any" function
                       (:template 
                          ( ("F1" type (:type "class") nil nil)
                            ("F2" type (:type "class") nil nil))                          
                        :type ("boost::enable_if::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("f1" variable
                               (:reference 1
                                :type ("F1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40115 40122])
                            ("f2" variable
                               (:reference 1
                                :type ("F2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40122 40129]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [40003 40257])
                    ("wait_for_any" function
                       (:template 
                          ( ("F1" type (:type "class") nil nil)
                            ("F2" type (:type "class") nil nil)
                            ("F3" type (:type "class") nil nil))                          
                        :type "unsigned int"
                        :arguments 
                          ( ("f1" variable
                               (:reference 1
                                :type ("F1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40335 40342])
                            ("f2" variable
                               (:reference 1
                                :type ("F2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40342 40349])
                            ("f3" variable
                               (:reference 1
                                :type ("F3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40349 40356]))                          )
                        (reparse-symbol namespacesubparts) [40263 40508])
                    ("wait_for_any" function
                       (:template 
                          ( ("F1" type (:type "class") nil nil)
                            ("F2" type (:type "class") nil nil)
                            ("F3" type (:type "class") nil nil)
                            ("F4" type (:type "class") nil nil))                          
                        :type "unsigned int"
                        :arguments 
                          ( ("f1" variable
                               (:reference 1
                                :type ("F1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40598 40605])
                            ("f2" variable
                               (:reference 1
                                :type ("F2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40605 40612])
                            ("f3" variable
                               (:reference 1
                                :type ("F3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40612 40619])
                            ("f4" variable
                               (:reference 1
                                :type ("F4" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40619 40626]))                          )
                        (reparse-symbol namespacesubparts) [40514 40802])
                    ("wait_for_any" function
                       (:template 
                          ( ("F1" type (:type "class") nil nil)
                            ("F2" type (:type "class") nil nil)
                            ("F3" type (:type "class") nil nil)
                            ("F4" type (:type "class") nil nil)
                            ("F5" type (:type "class") nil nil))                          
                        :type "unsigned int"
                        :arguments 
                          ( ("f1" variable
                               (:reference 1
                                :type ("F1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40904 40911])
                            ("f2" variable
                               (:reference 1
                                :type ("F2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40911 40918])
                            ("f3" variable
                               (:reference 1
                                :type ("F3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40918 40925])
                            ("f4" variable
                               (:reference 1
                                :type ("F4" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40925 40932])
                            ("f5" variable
                               (:reference 1
                                :type ("F5" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [40932 40939]))                          )
                        (reparse-symbol namespacesubparts) [40808 41139])
                    ("promise" type
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [41145 41185])
                    ("packaged_task" type
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [41191 41237])
                    ("detail" type
                       (:members 
                          ( ("base_future" type (:type "class") (reparse-symbol namespacesubparts) [41357 41436])
                            ("basic_future" type
                               (:template 
                                  ( ("R" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("protected" label nil (reparse-symbol classsubparts) [41587 41597])
                                    ("future_ptr" type
                                       (:typedef ("boost::shared_ptr" type
                                             (:template-specifier 
                                                ( ("detail::future_object" type (:template-specifier 
                                                    ( ("R" type nil nil nil))                                                    ) nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [41607 41671])
                                    ("future_" variable (:type ("future_ptr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [41681 41700])
                                    ("basic_future" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a_future" variable (:type ("future_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41723 41743]))                                          
                                        :type ("basic_future" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [41710 41792])
                                    ("BOOST_NOEXCEPT" variable (:type "int") (reparse-symbol classsubparts) [41898 41913])
                                    ("public" label nil (reparse-symbol classsubparts) [41921 41928])
                                    ("state" type
                                       (:typedef ("future_state::state" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [41937 41971])
                                    ("basic_future" function
                                       (:constructor-flag t
                                        :type ("basic_future" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [42024 42052])
                                    ("basic_future" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [42061 42079])
                                    ("future_" function
                                       (:arguments 
                                          ( ("" variable (:type ("BOOST_THREAD_RV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42175 42197])
                                            ("" variable (:type ("future_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42198 42206]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [42167 42278])
                                    ("wait" function
                                       (:methodconst-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [43547 43735]))                                  
                                :superclasses 
                                  ( ("base_future" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [41505 44830]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [41243 44837])
                    ("detail" type
                       (:members 
                          ( ("make_future_async_object" function
                               (:template 
                                  ( ("Rp" type (:type "class") nil nil)
                                    ("Fp" type (:type "class") nil nil))                                  
                                :type ("unique_future" type
                                     (:template-specifier 
                                        ( ("Rp" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45145 45169])
                                    ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45170 45172]))                                  
                                :prototype-flag t)
                                (reparse-symbol namespacesubparts) [45050 45173])
                            ("make_future_deferred_object" function
                               (:template 
                                  ( ("Rp" type (:type "class") nil nil)
                                    ("Fp" type (:type "class") nil nil))                                  
                                :type ("unique_future" type
                                     (:template-specifier 
                                        ( ("Rp" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45281 45305])
                                    ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45306 45308]))                                  
                                :prototype-flag t)
                                (reparse-symbol namespacesubparts) [45183 45309]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [44942 45822])
                    ("unique_future" type
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [45923 45931])
                            ("base_type" type
                               (:typedef ("detail::basic_future" type
                                     (:template-specifier 
                                        ( ("R" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [45940 45982])
                            ("future_ptr" type
                               (:typedef ("base_type::future_ptr" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [45991 46041])
                            ("shared_future" friend nil (reparse-symbol classsubparts) [46051 46077])
                            ("promise" friend nil (reparse-symbol classsubparts) [46090 46110])
                            ("packaged_task" friend nil (reparse-symbol classsubparts) [46553 46579])
                            ("detail" friend nil (reparse-symbol classsubparts) [46599 46618])
                            ("future_waiter" variable (:type "int") (reparse-symbol classsubparts) [46620 46634])
                            ("make_future_async_object" function
                               (:template 
                                  ( ("Rp" type (:type "class") nil nil)
                                    ("Fp" type (:type "class") nil nil))                                  
                                :type ("unique_future" type
                                     (:template-specifier 
                                        ( ("Rp" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46754 46778])
                                    ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46779 46781]))                                  
                                :parent "detail"
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [46644 46782])
                            ("make_future_deferred_object" function
                               (:template 
                                  ( ("Rp" type (:type "class") nil nil)
                                    ("Fp" type (:type "class") nil nil))                                  
                                :type ("unique_future" type
                                     (:template-specifier 
                                        ( ("Rp" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_FWD_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46905 46929])
                                    ("" variable (:type ("f" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [46930 46932]))                                  
                                :parent "detail"
                                :prototype-flag t)
                                (reparse-symbol classsubparts) [46792 46933])
                            ("move_dest_type" type
                               (:typedef ("detail::future_traits::move_dest_type" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [47425 47498])
                            ("unique_future" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("a_future" variable (:type ("future_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47528 47548]))                                  
                                :type ("unique_future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [47508 47599])
                            ("public" label nil (reparse-symbol classsubparts) [47605 47612])
                            ("state" type
                               (:typedef ("future_state::state" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [47676 47710])
                            ("unique_future" function
                               (:constructor-flag t
                                :type ("BOOST_CONSTEXPR" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [47720 47760])
                            ("unique_future" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [47770 47795])
                            ("base_type" function
                               (:arguments 
                                  ( ("" variable (:type ("boost::move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [47907 47967]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [47897 47988])
                            ("share" function (:type ("shared_future" type
                                 (:template-specifier 
                                    ( ("R" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [48249 48350])
                            ("swap" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("unique_future" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [48370 48397]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [48360 48473])
                            ("set_async" function (:type "void") (reparse-symbol classsubparts) [48576 48650])
                            ("set_deferred" function (:type "void") (reparse-symbol classsubparts) [48752 48832])
                            ("get" function (:type ("move_dest_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [48874 49256]))                          
                        :superclasses 
                          ( ("detail::basic_future" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [45828 50100])
                    ("shared_future" type
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("base_type" type
                               (:typedef ("detail::basic_future" type
                                     (:template-specifier 
                                        ( ("R" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [50289 50331])
                            ("future_ptr" type
                               (:typedef ("base_type::future_ptr" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [50340 50390])
                            ("detail" friend nil (reparse-symbol classsubparts) [50400 50419])
                            ("future_waiter" variable (:type "int") (reparse-symbol classsubparts) [50421 50435])
                            ("promise" friend nil (reparse-symbol classsubparts) [50444 50464])
                            ("packaged_task" friend nil (reparse-symbol classsubparts) [50633 50659])
                            ("shared_future" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("a_future" variable (:type ("future_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [50693 50713]))                                  
                                :type ("shared_future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [50679 50755])
                            ("public" label nil (reparse-symbol classsubparts) [50761 50768])
                            ("shared_future" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("shared_future" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50836 50863]))                                  
                                :type ("shared_future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [50822 50900])
                            ("state" type
                               (:typedef ("future_state::state" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [50910 50944])
                            ("shared_future" function
                               (:constructor-flag t
                                :type ("BOOST_CONSTEXPR" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [50954 50996])
                            ("shared_future" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [51006 51033])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("shared_future" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51068 51095]))                                  
                                :type ("shared_future" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [51043 51187])
                            ("base_type" function
                               (:arguments 
                                  ( ("" variable (:type ("boost::move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51287 51347]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [51277 51420])
                            ("base_type" function
                               (:arguments 
                                  ( ("" variable (:type ("boost::move" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [51531 51591]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [51521 51612])
                            ("get" function
                               (:typemodifiers ("typename")
                                :type ("detail::future_object::shared_future_get_result_type" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [52443 52701]))                          
                        :superclasses 
                          ( ("detail::basic_future" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol namespacesubparts) [50195 52709])
                    ("detail" type
                       (:members 
                          ( ("future_" function
                               (:arguments 
                                  ( ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53003 53009])
                                    ("" variable (:type ("future_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [53009 53017]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [52995 53033]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [52798 53039])
                    ("promise" type
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("future_ptr" type
                               (:typedef ("boost::shared_ptr" type
                                     (:template-specifier 
                                        ( ("detail::future_object" type (:template-specifier 
                                            ( ("R" type nil nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [53099 53163])
                            ("future_" variable (:type ("future_ptr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [53173 53192])
                            ("future_obtained" variable (:type "bool") (reparse-symbol classsubparts) [53201 53222])
                            ("lazy_init" function (:type "void") (reparse-symbol classsubparts) [53232 53616])
                            ("public" label nil (reparse-symbol classsubparts) [53622 53629])
                            ("promise" function
                               (:constructor-flag t
                                :type ("promise" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [54155 54347])
                            ("promise" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [54357 54720])
                            ("future_" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_RV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54831 54851])
                                    ("" variable (:type ("future_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [54852 54860]))                                  
                                :type ("promise" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [54823 55040])
                            ("swap" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("promise" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [55405 55420]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [55395 55543])
                            ("get_future" function (:type ("unique_future" type
                                 (:template-specifier 
                                    ( ("R" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [55581 55995])
                            ("set_value" function
                               (:arguments 
                                  ( ("r" variable
                                       (:typemodifiers ("typename")
                                        :type ("detail::future_traits::source_reference_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56020 56079]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [56005 56384])
                            ("set_value" function
                               (:arguments 
                                  ( ("r" variable
                                       (:typemodifiers ("typename")
                                        :type ("detail::future_traits::rvalue_source_type" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [56444 56500]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [56429 57019])
                            ("set_exception" function
                               (:arguments 
                                  ( ("p" variable (:type ("boost::exception_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57048 57071]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [57029 57374])
                            ("set_value_at_thread_exit" function
                               (:arguments 
                                  ( ("r" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("R" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [57471 57482]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [57441 57661])
                            ("set_value_at_thread_exit" function
                               (:arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_RV_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57701 57723])
                                    ("" variable (:type ("r" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57724 57726]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [57671 57918])
                            ("set_exception_at_thread_exit" function
                               (:arguments 
                                  ( ("e" variable (:type ("exception_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [57961 57977]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [57927 58160])
                            ("set_wait_callback" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("f" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [58222 58226]))                                  )
                                (reparse-symbol classsubparts) [58170 58319]))                          )
                        (reparse-symbol namespacesubparts) [53045 58327])
                    ("promise" type
                       (:template 
                          ( ("R" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("future_ptr" type
                               (:typedef ("boost::shared_ptr" type
                                     (:template-specifier 
                                        ( ("detail::future_object" type (:template-specifier 
                                            ( ("R" type (:reference 1) nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [58391 58456])
                            ("future_" variable (:type ("future_ptr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [58466 58485])
                            ("future_obtained" variable (:type "bool") (reparse-symbol classsubparts) [58494 58515])
                            ("lazy_init" function (:type "void") (reparse-symbol classsubparts) [58525 58912])
                            ("public" label nil (reparse-symbol classsubparts) [58918 58925])
                            ("promise" function
                               (:constructor-flag t
                                :type ("promise" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [59453 59646])
                            ("promise" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [59656 60019])
                            ("future_" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_RV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60130 60150])
                                    ("" variable (:type ("future_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [60151 60159]))                                  
                                :type ("promise" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [60122 60339])
                            ("swap" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("promise" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [60704 60719]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [60694 60842])
                            ("get_future" function (:type ("unique_future" type
                                 (:template-specifier 
                                    ( ("R" type (:reference 1) nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [60880 61296])
                            ("set_value" function
                               (:arguments 
                                  ( ("r" variable
                                       (:reference 1
                                        :type ("R" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [61321 61326]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [61306 61631])
                            ("set_exception" function
                               (:arguments 
                                  ( ("p" variable (:type ("boost::exception_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [61660 61683]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [61641 61986])
                            ("set_value_at_thread_exit" function
                               (:arguments 
                                  ( ("r" variable
                                       (:reference 1
                                        :type ("R" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [62083 62088]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [62053 62267])
                            ("set_exception_at_thread_exit" function
                               (:arguments 
                                  ( ("e" variable (:type ("exception_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62311 62327]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [62277 62510])
                            ("set_wait_callback" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("f" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [62572 62576]))                                  )
                                (reparse-symbol classsubparts) [62520 62669]))                          
                        :template-specifier 
                          ( ("R" type (:reference 1) nil nil))                          )
                        (reparse-symbol namespacesubparts) [58333 62677])
                    ("promise" type
                       (:type "class"
                        :members 
                          ( ("future_ptr" type
                               (:typedef ("boost::shared_ptr" type
                                     (:template-specifier 
                                        ( ("detail::future_object" type (:template-specifier 
                                            ( ("void" type nil nil nil))                                            ) nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [62732 62799])
                            ("future_" variable (:type ("future_ptr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [62809 62828])
                            ("future_obtained" variable (:type "bool") (reparse-symbol classsubparts) [62837 62858])
                            ("lazy_init" function (:type "void") (reparse-symbol classsubparts) [62868 63161])
                            ("public" label nil (reparse-symbol classsubparts) [63166 63173])
                            ("promise" function
                               (:constructor-flag t
                                :type ("promise" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [63706 63899])
                            ("promise" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [63909 64272])
                            ("future_" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_RV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64383 64403])
                                    ("" variable (:type ("future_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [64404 64412]))                                  
                                :type ("promise" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [64375 64683])
                            ("swap" function
                               (:arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("promise" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [65049 65064]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [65039 65187])
                            ("get_future" function (:type ("unique_future" type
                                 (:template-specifier 
                                    ( ("void" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [65225 65645])
                            ("set_value" function (:type "void") (reparse-symbol classsubparts) [65655 65973])
                            ("set_exception" function
                               (:arguments 
                                  ( ("p" variable (:type ("boost::exception_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66002 66025]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [65983 66327])
                            ("set_value_at_thread_exit" function (:type "void") (reparse-symbol classsubparts) [66394 66603])
                            ("set_exception_at_thread_exit" function
                               (:arguments 
                                  ( ("e" variable (:type ("exception_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66647 66663]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [66613 66846])
                            ("set_wait_callback" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("f" variable (:type ("F" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [66908 66912]))                                  )
                                (reparse-symbol classsubparts) [66856 67005]))                          
                        :template-specifier 
                          ( ("void" type nil nil nil))                          )
                        (reparse-symbol namespacesubparts) [62682 67013])
                    ("detail" type
                       (:members 
                          ( ("task_base" type
                               (:template 
                                  ( ("R" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("started" variable (:type "bool") (reparse-symbol classsubparts) [67776 67789])
                                    ("task_base" function
                                       (:constructor-flag t
                                        :type ("task_base" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [67803 67861])
                                    ("reset" function (:type "void") (reparse-symbol classsubparts) [67875 67944])
                                    ("do_run" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type "void")
                                        (reparse-symbol classsubparts) [68207 68231])
                                    ("run" function (:type "void") (reparse-symbol classsubparts) [68244 68782])
                                    ("do_apply" function
                                       (:pure-virtual-flag t
                                        :prototype-flag t
                                        :typemodifiers ("virtual")
                                        :type "void")
                                        (reparse-symbol classsubparts) [69050 69076])
                                    ("apply" function (:type "void") (reparse-symbol classsubparts) [69089 69633])
                                    ("owner_destroyed" function (:type "void") (reparse-symbol classsubparts) [69647 69974]))                                  
                                :superclasses 
                                  ( ("detail::future_object" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [67665 69986]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [67312 122451]))                  
                :type "namespace")
                nil [2023 122451]))          
      :file "future.hpp"
      :pointmax 122451
      :fsize 122452
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 70542 . 122451) (punctuation 70525 . 70526) (symbol 70524 . 70525) (punctuation 70523 . 70524) (symbol 70514 . 70523) (punctuation 70500 . 70501) (symbol 70489 . 70500) (STRUCT 70482 . 70488) (punctuation 108122 . 108123) (close-paren 108121 . 108122) (open-paren 108120 . 108121) (symbol 108115 . 108120) (punctuation 108114 . 108115) (close-paren 108113 . 108114) (open-paren 108112 . 108113) (symbol 108102 . 108112) (punctuation 108101 . 108102) (symbol 108100 . 108101) (RETURN 108093 . 108099) (punctuation 108087 . 108088) (close-paren 108086 . 108087) (symbol 108084 . 108086) (open-paren 108083 . 108084) (symbol 108070 . 108083) (punctuation 108069 . 108070) (symbol 108068 . 108069) (close-paren 108040 . 108041) (symbol 108038 . 108040) (symbol 108024 . 108037) (open-paren 108023 . 108024) (symbol 107993 . 108023) (punctuation 107991 . 107992) (symbol 107990 . 107991) (punctuation 107989 . 107990) (symbol 107976 . 107989) (punctuation 107972 . 107973) (symbol 107971 . 107972) (TYPENAME 107962 . 107970) (punctuation 107961 . 107962) (TEMPLATE 107952 . 107960) (punctuation 107836 . 107837) (close-paren 107835 . 107836) (semantic-list 107833 . 107835) (symbol 107828 . 107833) (punctuation 107827 . 107828) (semantic-list 107825 . 107827) (symbol 107815 . 107825) (punctuation 107814 . 107815) (symbol 107813 . 107814) (open-paren 107812 . 107813) (symbol 107788 . 107812) (RETURN 107781 . 107787) (close-paren 107750 . 107751) (open-paren 107749 . 107750) (symbol 107725 . 107749) (punctuation 107723 . 107724) (VOID 107719 . 107723) (punctuation 107718 . 107719) (symbol 107705 . 107718) (INLINE 107698 . 107704) (punctuation 107688 . 107689) (close-paren 107687 . 107688) (open-paren 107686 . 107687) (symbol 107681 . 107686) (punctuation 107680 . 107681) (close-paren 107679 . 107680) (open-paren 107678 . 107679) (symbol 107668 . 107678) (punctuation 107667 . 107668) (symbol 107666 . 107667) (RETURN 107659 . 107665) (punctuation 107653 . 107654) (close-paren 107652 . 107653) (semantic-list 107645 . 107652) (punctuation 107644 . 107645) (symbol 107643 . 107644) (punctuation 107642 . 107643) (symbol 107635 . 107642) (punctuation 107634 . 107635) (punctuation 107633 . 107634) (symbol 107628 . 107633) (open-paren 107627 . 107628) (symbol 107618 . 107627) (punctuation 107617 . 107618) (symbol 107616 . 107617) (punctuation 107565 . 107566) (punctuation 107564 . 107565) (punctuation 107563 . 107564) (symbol 107562 . 107563) (punctuation 107561 . 107562) (symbol 107556 . 107561) (TYPENAME 107547 . 107555) (TYPEDEF 107539 . 107546) (close-paren 107529 . 107530) (symbol 107524 . 107529) (close-paren 107522 . 107523) (symbol 107521 . 107522) (open-paren 107520 . 107521) (symbol 107500 . 107520) (open-paren 107499 . 107500) (symbol 107475 . 107499) (punctuation 107473 . 107474) (symbol 107469 . 107473) (punctuation 107468 . 107469) (punctuation 107467 . 107468) (punctuation 107466 . 107467) (symbol 107465 . 107466) (punctuation 107464 . 107465) (symbol 107459 . 107464) (TYPENAME 107450 . 107458) (punctuation 107449 . 107450) (symbol 107436 . 107449) (punctuation 107432 . 107433) (symbol 107431 . 107432) (TYPENAME 107422 . 107430) (punctuation 107421 . 107422) (TEMPLATE 107412 . 107420) (punctuation 107302 . 107303) (close-paren 107301 . 107302) (semantic-list 107299 . 107301) (symbol 107294 . 107299) (punctuation 107293 . 107294) (semantic-list 107291 . 107293) (symbol 107281 . 107291) (punctuation 107280 . 107281) (symbol 107279 . 107280) (open-paren 107278 . 107279) (symbol 107254 . 107278) (RETURN 107247 . 107253) (close-paren 107216 . 107217) (open-paren 107215 . 107216) (symbol 107197 . 107215) (punctuation 107195 . 107196) (VOID 107191 . 107195) (punctuation 107190 . 107191) (symbol 107177 . 107190) (INLINE 107170 . 107176) (punctuation 107160 . 107161) (close-paren 107159 . 107160) (semantic-list 107157 . 107159) (symbol 107152 . 107157) (punctuation 107151 . 107152) (semantic-list 107149 . 107151) (symbol 107139 . 107149) (punctuation 107138 . 107139) (symbol 107137 . 107138) (open-paren 107136 . 107137) (symbol 107112 . 107136) (RETURN 107105 . 107111) (punctuation 107099 . 107100) (close-paren 107098 . 107099) (semantic-list 107091 . 107098) (punctuation 107090 . 107091) (symbol 107089 . 107090) (punctuation 107088 . 107089) (symbol 107081 . 107088) (punctuation 107080 . 107081) (punctuation 107079 . 107080) (symbol 107074 . 107079) (open-paren 107073 . 107074) (symbol 107064 . 107073) (punctuation 107063 . 107064) (symbol 107062 . 107063) (punctuation 107011 . 107012) (punctuation 107010 . 107011) (punctuation 107009 . 107010) (symbol 107008 . 107009) (punctuation 107007 . 107008) (symbol 107002 . 107007) (TYPENAME 106993 . 107001) (TYPEDEF 106985 . 106992) (close-paren 106975 . 106976) (symbol 106970 . 106975) (close-paren 106968 . 106969) (symbol 106967 . 106968) (open-paren 106966 . 106967) (symbol 106946 . 106966) (open-paren 106945 . 106946) (symbol 106927 . 106945) (punctuation 106925 . 106926) (symbol 106921 . 106925) (punctuation 106920 . 106921) (punctuation 106919 . 106920) (punctuation 106918 . 106919) (symbol 106917 . 106918) (punctuation 106916 . 106917) (symbol 106911 . 106916) (TYPENAME 106902 . 106910) (punctuation 106901 . 106902) (symbol 106888 . 106901) (punctuation 106884 . 106885) (symbol 106883 . 106884) (TYPENAME 106874 . 106882) (punctuation 106873 . 106874) (TEMPLATE 106864 . 106872) (punctuation 106373 . 106374) (close-paren 106372 . 106373) (semantic-list 106370 . 106372) (symbol 106360 . 106370) (punctuation 106359 . 106360) (symbol 106358 . 106359) (open-paren 106357 . 106358) (symbol 106333 . 106357) (RETURN 106326 . 106332) (punctuation 106320 . 106321) (close-paren 106319 . 106320) (symbol 106317 . 106319) (open-paren 106316 . 106317) (symbol 106303 . 106316) (punctuation 106302 . 106303) (symbol 106301 . 106302) (close-paren 106273 . 106274) (symbol 106271 . 106273) (symbol 106257 . 106270) (open-paren 106256 . 106257) (symbol 106233 . 106256) (punctuation 106231 . 106232) (symbol 106230 . 106231) (punctuation 106229 . 106230) (symbol "unique_future" 106210 . 106229) (punctuation 106206 . 106207) (symbol 106205 . 106206) (TYPENAME 106196 . 106204) (punctuation 106195 . 106196) (TEMPLATE 106186 . 106194) (punctuation 105879 . 105880) (close-paren 105878 . 105879) (semantic-list 105876 . 105878) (symbol 105866 . 105876) (punctuation 105865 . 105866) (symbol 105864 . 105865) (open-paren 105863 . 105864) (symbol 105839 . 105863) (RETURN 105832 . 105838) (punctuation 105826 . 105827) (close-paren 105825 . 105826) (semantic-list 105818 . 105825) (punctuation 105817 . 105818) (symbol 105816 . 105817) (punctuation 105815 . 105816) (symbol 105808 . 105815) (punctuation 105807 . 105808) (punctuation 105806 . 105807) (symbol 105801 . 105806) (open-paren 105800 . 105801) (symbol 105791 . 105800) (punctuation 105790 . 105791) (symbol 105789 . 105790) (punctuation 105738 . 105739) (punctuation 105737 . 105738) (punctuation 105736 . 105737) (symbol 105735 . 105736) (punctuation 105734 . 105735) (symbol 105729 . 105734) (TYPENAME 105720 . 105728) (TYPEDEF 105712 . 105719) (close-paren 105702 . 105703) (symbol 105697 . 105702) (close-paren 105695 . 105696) (symbol 105694 . 105695) (open-paren 105693 . 105694) (symbol 105673 . 105693) (open-paren 105672 . 105673) (symbol 105655 . 105672) (punctuation 105653 . 105654) (symbol 105649 . 105653) (punctuation 105648 . 105649) (punctuation 105647 . 105648) (punctuation 105646 . 105647) (symbol 105645 . 105646) (punctuation 105644 . 105645) (symbol 105639 . 105644) (TYPENAME 105630 . 105638) (punctuation 105629 . 105630) (symbol "unique_future" 105610 . 105629) (punctuation 105606 . 105607) (symbol 105605 . 105606) (TYPENAME 105596 . 105604) (punctuation 105595 . 105596) (TEMPLATE 105586 . 105594) (punctuation 105291 . 105292) (close-paren 105290 . 105291) (semantic-list 105288 . 105290) (symbol 105278 . 105288) (punctuation 105277 . 105278) (symbol 105276 . 105277) (open-paren 105275 . 105276) (symbol 105251 . 105275) (RETURN 105244 . 105250) (punctuation 105238 . 105239) (close-paren 105237 . 105238) (semantic-list 105230 . 105237) (punctuation 105229 . 105230) (symbol 105228 . 105229) (punctuation 105227 . 105228) (symbol 105220 . 105227) (punctuation 105219 . 105220) (punctuation 105218 . 105219) (symbol 105213 . 105218) (open-paren 105212 . 105213) (symbol 105203 . 105212) (punctuation 105202 . 105203) (symbol 105201 . 105202) (punctuation 105150 . 105151) (punctuation 105149 . 105150) (punctuation 105148 . 105149) (symbol 105147 . 105148) (punctuation 105146 . 105147) (symbol 105141 . 105146) (TYPENAME 105132 . 105140) (TYPEDEF 105124 . 105131) (close-paren 105114 . 105115) (symbol 105109 . 105114) (close-paren 105107 . 105108) (symbol 105106 . 105107) (open-paren 105105 . 105106) (symbol 105085 . 105105) (open-paren 105084 . 105085) (symbol 105073 . 105084) (punctuation 105071 . 105072) (symbol 105067 . 105071) (punctuation 105066 . 105067) (punctuation 105065 . 105066) (punctuation 105064 . 105065) (symbol 105063 . 105064) (punctuation 105062 . 105063) (symbol 105057 . 105062) (TYPENAME 105048 . 105056) (punctuation 105047 . 105048) (symbol "unique_future" 105028 . 105047) (punctuation 105024 . 105025) (symbol 105023 . 105024) (TYPENAME 105014 . 105022) (punctuation 105013 . 105014) (TEMPLATE 105004 . 105012) (punctuation 104887 . 104888) (close-paren 104886 . 104887) (semantic-list 104843 . 104886) (symbol 104838 . 104843) (semantic-list 104882 . 104885) (semantic-list 104850 . 104863) (open-paren 104837 . 104838) (symbol 104813 . 104837) (RETURN 104806 . 104812) (close-paren 104790 . 104791) (symbol 104789 . 104790) (close-paren 104787 . 104788) (symbol 104786 . 104787) (open-paren 104785 . 104786) (symbol 104766 . 104785) (open-paren 104765 . 104766) (symbol 104760 . 104765) (punctuation 104754 . 104755) (symbol 104750 . 104754) (punctuation 104749 . 104750) (punctuation 104748 . 104749) (punctuation 104747 . 104748) (close-paren 104746 . 104747) (open-paren 104745 . 104746) (symbol 104744 . 104745) (punctuation 104743 . 104744) (symbol 104734 . 104743) (punctuation 104733 . 104734) (punctuation 104732 . 104733) (symbol 104727 . 104732) (TYPENAME 104718 . 104726) (punctuation 104717 . 104718) (symbol "unique_future" 104698 . 104717) (punctuation 104692 . 104693) (symbol 104691 . 104692) (CLASS 104685 . 104690) (punctuation 104684 . 104685) (TEMPLATE 104675 . 104683) (punctuation 103140 . 103141) (punctuation 103139 . 103140) (RETURN 103132 . 103138) (ELSE 103049 . 103053) (punctuation 102824 . 102825) (punctuation 102823 . 102824) (RETURN 102816 . 102822) (close-paren 102317 . 102318) (semantic-list 102299 . 102317) (INT 102296 . 102299) (punctuation 102294 . 102295) (semantic-list 102285 . 102293) (INT 102282 . 102285) (open-paren 102281 . 102282) (IF 102278 . 102280) (ELSE 102273 . 102277) (punctuation 102229 . 102230) (punctuation 102228 . 102229) (RETURN 102221 . 102227) (punctuation 102191 . 102192) (semantic-list 102172 . 102191) (symbol 102166 . 102172) (semantic-list 102185 . 102189) (punctuation 102165 . 102166) (punctuation 102164 . 102165) (symbol 102159 . 102164) (semantic-list 102185 . 102189) (punctuation 101911 . 101912) (symbol 101908 . 101911) (semantic-list 101834 . 101837) (close-paren 101376 . 101377) (semantic-list 101361 . 101376) (INT 101358 . 101361) (punctuation 101356 . 101357) (semantic-list 101347 . 101355) (INT 101344 . 101347) (open-paren 101343 . 101344) (IF 101340 . 101342) (punctuation 101259 . 101260) (punctuation 101258 . 101259) (punctuation 101257 . 101258) (close-paren 101256 . 101257) (open-paren 101255 . 101256) (symbol 101251 . 101255) (punctuation 101250 . 101251) (punctuation 101249 . 101250) (punctuation 101248 . 101249) (symbol 101247 . 101248) (punctuation 101246 . 101247) (symbol 101241 . 101246) (TYPENAME 101232 . 101240) (punctuation 101231 . 101232) (symbol 101222 . 101231) (punctuation 101221 . 101222) (punctuation 101220 . 101221) (symbol 101215 . 101220) (TYPENAME 101206 . 101214) (TYPEDEF 101198 . 101205) (close-paren 101176 . 101177) (symbol 101175 . 101176) (close-paren 101172 . 101173) (symbol 101171 . 101172) (open-paren 101170 . 101171) (symbol 101150 . 101170) (punctuation 101148 . 101149) (symbol 101142 . 101148) (symbol 101135 . 101141) (open-paren 101134 . 101135) (symbol 101129 . 101134) (punctuation 101119 . 101120) (symbol 101115 . 101119) (punctuation 101114 . 101115) (punctuation 101113 . 101114) (punctuation 101112 . 101113) (close-paren 101111 . 101112) (open-paren 101110 . 101111) (symbol 101106 . 101110) (punctuation 101105 . 101106) (punctuation 101104 . 101105) (punctuation 101103 . 101104) (symbol 101102 . 101103) (punctuation 101101 . 101102) (symbol 101096 . 101101) (TYPENAME 101087 . 101095) (punctuation 101086 . 101087) (symbol 101077 . 101086) (punctuation 101076 . 101077) (punctuation 101075 . 101076) (symbol 101070 . 101075) (TYPENAME 101061 . 101069) (punctuation 101060 . 101061) (symbol "unique_future" 101041 . 101060) (punctuation 101031 . 101032) (symbol 101030 . 101031) (CLASS 101024 . 101029) (punctuation 101023 . 101024) (TEMPLATE 101014 . 101022) (RETURN 97312 . 97318) (semantic-list 97280 . 97303) (NEW 97249 . 97252) (close-paren 97182 . 97183) (symbol 97181 . 97182) (semantic-list 97176 . 97180) (symbol 97156 . 97176) (open-paren 97155 . 97156) (symbol 97131 . 97155) (punctuation 97125 . 97126) (symbol 97123 . 97125) (punctuation 97122 . 97123) (symbol "unique_future" 97103 . 97122) (punctuation 97097 . 97098) (symbol 97095 . 97097) (CLASS 97089 . 97094) (punctuation 97087 . 97088) (symbol 97085 . 97087) (CLASS 97079 . 97084) (punctuation 97078 . 97079) (TEMPLATE 97069 . 97077) (RETURN 96917 . 96923) (semantic-list 96885 . 96908) (NEW 96851 . 96854) (close-paren 96781 . 96782) (symbol 96780 . 96781) (semantic-list 96775 . 96779) (symbol 96755 . 96775) (open-paren 96754 . 96755) (symbol 96727 . 96754) (punctuation 96721 . 96722) (symbol 96719 . 96721) (punctuation 96718 . 96719) (symbol "unique_future" 96699 . 96718) (punctuation 96693 . 96694) (symbol 96691 . 96693) (CLASS 96685 . 96690) (punctuation 96683 . 96684) (symbol 96681 . 96683) (CLASS 96675 . 96680) (punctuation 96674 . 96675) (TEMPLATE 96665 . 96673) (symbol 96539 . 96545) (NAMESPACE 96529 . 96538) (symbol 96495 . 96523) (punctuation 96493 . 96494) (symbol 96492 . 96493) (punctuation 96491 . 96492) (symbol 96478 . 96491) (close-paren 96476 . 96477) (symbol 96475 . 96476) (open-paren 96474 . 96475) (symbol 96446 . 96474) (punctuation 96216 . 96217) (punctuation 96172 . 96173) (punctuation 96171 . 96172) (symbol 96167 . 96171) (close-paren 96143 . 96144) (symbol 96142 . 96143) (symbol 96140 . 96141) (open-paren 96139 . 96140) (symbol 96122 . 96139) (VOID 96117 . 96121) (punctuation 96107 . 96108) (symbol 96106 . 96107) (TYPENAME 96097 . 96105) (punctuation 96096 . 96097) (TEMPLATE 96088 . 96096) (punctuation 96053 . 96054) (punctuation 96052 . 96053) (symbol 96048 . 96052) (semantic-list 96033 . 96035) (semantic-list 95949 . 95968) (IF 95946 . 95948) (semantic-list 95870 . 95935) (semantic-list 95852 . 95859) (IF 95850 . 95852) (close-paren 95828 . 95829) (open-paren 95827 . 95828) (symbol 95802 . 95827) (VOID 95797 . 95801) (punctuation 95771 . 95772) (punctuation 95770 . 95771) (symbol 95766 . 95770) (semantic-list 95684 . 95753) (semantic-list 95664 . 95671) (IF 95662 . 95664) (close-paren 95638 . 95639) (open-paren 95637 . 95638) (close-paren 95636 . 95637) (open-paren 95635 . 95636) (OPERATOR 95627 . 95635) (VOID 95622 . 95626) (semantic-list 94733 . 94816) (ELSE 94716 . 94720) (semantic-list 94597 . 94703) (semantic-list 94566 . 94584) (IF 94564 . 94566) (ELSE 94559 . 94563) (semantic-list 94477 . 94546) (semantic-list 94457 . 94464) (IF 94455 . 94457) (close-paren 94430 . 94431) (open-paren 94429 . 94430) (symbol 94419 . 94429) (punctuation 94417 . 94418) (symbol 94416 . 94417) (punctuation 94415 . 94416) (symbol "unique_future" 94396 . 94415) (punctuation 94347 . 94348) (number 94346 . 94347) (punctuation 94345 . 94346) (punctuation 94344 . 94345) (semantic-list 94342 . 94344) (symbol 94339 . 94342) (punctuation 94338 . 94339) (symbol 94334 . 94338) (RETURN 94327 . 94333) (symbol 94292 . 94306) (CONST 94286 . 94291) (close-paren 94284 . 94285) (open-paren 94283 . 94284) (symbol 94278 . 94283) (BOOL 94273 . 94277) (punctuation 94236 . 94237) (punctuation 94185 . 94186) (punctuation 94174 . 94175) (symbol 94170 . 94174) (symbol 94133 . 94147) (close-paren 94131 . 94132) (symbol 94126 . 94131) (punctuation 94124 . 94125) (symbol 94111 . 94124) (open-paren 94110 . 94111) (symbol 94106 . 94110) (VOID 94101 . 94105) (punctuation 94037 . 94038) (punctuation 94036 . 94037) (symbol 94032 . 94036) (semantic-list 93994 . 94017) (THROW 93952 . 93957) (semantic-list 93925 . 93935) (IF 93922 . 93924) (close-paren 93898 . 93899) (open-paren 93897 . 93898) (symbol 93892 . 93897) (VOID 93887 . 93891) (RETURN 93854 . 93860) (semantic-list 93707 . 93714) (symbol 93559 . 93573) (close-paren 93557 . 93558) (symbol 93552 . 93557) (semantic-list 93536 . 93551) (symbol 93517 . 93536) (open-paren 93516 . 93517) (punctuation 93515 . 93516) (OPERATOR 93507 . 93515) (punctuation 93505 . 93506) (symbol 93492 . 93505) (punctuation 93450 . 93451) (semantic-list 93443 . 93450) (symbol 93428 . 93443) (punctuation 93408 . 93409) (semantic-list 93401 . 93408) (punctuation 93380 . 93381) (symbol 93376 . 93380) (close-paren 93352 . 93353) (symbol 93337 . 93352) (punctuation 93336 . 93337) (semantic-list 93329 . 93336) (symbol 93314 . 93329) (open-paren 93313 . 93314) (symbol 93298 . 93313) (punctuation 93284 . 93285) (symbol 93269 . 93283) (close-paren 93267 . 93268) (symbol 93262 . 93267) (semantic-list 93246 . 93261) (symbol 93227 . 93246) (open-paren 93226 . 93227) (symbol 93213 . 93226) (semantic-list 93115 . 93171) (semantic-list 93096 . 93102) (IF 93094 . 93096) (close-paren 93070 . 93071) (open-paren 93069 . 93070) (symbol 93056 . 93069) (punctuation 93055 . 93056) (punctuation 87394 . 87395) (punctuation 87393 . 87394) (punctuation 87392 . 87393) (symbol 87388 . 87392) (punctuation 87387 . 87388) (punctuation 87386 . 87387) (punctuation 87385 . 87386) (symbol 87384 . 87385) (punctuation 87383 . 87384) (symbol 87367 . 87383) (TYPENAME 87358 . 87366) (punctuation 87357 . 87358) (symbol 87348 . 87357) (TYPENAME 87339 . 87347) (TYPEDEF 87331 . 87338) (close-paren 87309 . 87310) (number 87295 . 87296) (punctuation 87294 . 87295) (symbol 87290 . 87294) (punctuation 87289 . 87290) (punctuation 87288 . 87289) (punctuation 87287 . 87288) (punctuation 87285 . 87286) (symbol 87280 . 87285) (punctuation 87278 . 87279) (punctuation 87277 . 87278) (symbol 87264 . 87277) (punctuation 87262 . 87263) (symbol 87258 . 87262) (punctuation 87257 . 87258) (punctuation 87256 . 87257) (punctuation 87255 . 87256) (symbol 87254 . 87255) (punctuation 87253 . 87254) (symbol 87248 . 87253) (TYPENAME 87239 . 87247) (punctuation 87238 . 87239) (symbol 87231 . 87238) (punctuation 87230 . 87231) (symbol 87220 . 87230) (TYPENAME 87211 . 87219) (punctuation 87209 . 87210) (symbol 87195 . 87196) (semantic-list 87191 . 87194) (symbol 87171 . 87191) (open-paren 87170 . 87171) (symbol 87157 . 87170) (EXPLICIT 87148 . 87156) (punctuation 87138 . 87139) (symbol 87137 . 87138) (CLASS 87131 . 87136) (punctuation 87130 . 87131) (TEMPLATE 87121 . 87129) (close-paren 85951 . 85952) (symbol 85946 . 85951) (open-paren 85945 . 85946) (symbol 85930 . 85945) (punctuation 85916 . 85917) (close-paren 85915 . 85916) (open-paren 85914 . 85915) (symbol 85901 . 85914) (close-paren 85890 . 85891) (symbol 85877 . 85890) (open-paren 85876 . 85877) (symbol 85851 . 85876) (symbol 85602 . 85615) (CLASS 85596 . 85601) (punctuation 85590 . 85591) (symbol 85589 . 85590) (TYPENAME 85580 . 85588) (punctuation 85579 . 85580) (TEMPLATE 85571 . 85579) (punctuation 85003 . 85004) (punctuation 83194 . 83195) (VOID 83190 . 83194) (punctuation 83189 . 83190) (symbol 83180 . 83189) (punctuation 83168 . 83169) (punctuation 83167 . 83168) (VOID 83163 . 83167) (punctuation 83162 . 83163) (close-paren 83161 . 83162) (open-paren 83160 . 83161) (close-paren 83159 . 83160) (punctuation 83158 . 83159) (open-paren 83157 . 83158) (VOID 83152 . 83156) (punctuation 83151 . 83152) (symbol 83140 . 83151) (STRUCT 83133 . 83139) (punctuation 83123 . 83124) (punctuation 83122 . 83123) (TEMPLATE 83114 . 83122) (punctuation 82736 . 82737) (semantic-list 81064 . 81067) (punctuation 80840 . 80841) (VOID 80836 . 80840) (punctuation 80835 . 80836) (symbol 80826 . 80835) (punctuation 80814 . 80815) (punctuation 80813 . 80814) (VOID 80809 . 80813) (punctuation 80808 . 80809) (symbol 80807 . 80808) (punctuation 80806 . 80807) (symbol 80795 . 80806) (STRUCT 80788 . 80794) (punctuation 80778 . 80779) (symbol 80777 . 80778) (TYPENAME 80768 . 80776) (punctuation 80767 . 80768) (TEMPLATE 80759 . 80767) (punctuation 75124 . 75125) (semantic-list 73354 . 73357) (punctuation 73130 . 73131) (punctuation 73129 . 73130) (symbol 73128 . 73129) (punctuation 73127 . 73128) (symbol 73118 . 73127) (punctuation 73104 . 73105) (punctuation 73103 . 73104) (punctuation 73102 . 73103) (symbol 73101 . 73102) (punctuation 73100 . 73101) (symbol 73099 . 73100) (punctuation 73098 . 73099) (symbol 73087 . 73098) (STRUCT 73080 . 73086) (punctuation 73070 . 73071) (symbol 73069 . 73070) (TYPENAME 73060 . 73068) (punctuation 73058 . 73059) (symbol 73057 . 73058) (TYPENAME 73048 . 73056) (punctuation 73047 . 73048) (TEMPLATE 73039 . 73047) (punctuation 72648 . 72649) (semantic-list 70749 . 70752) (punctuation 108122 . 108123) (close-paren 108121 . 108122) (open-paren 108120 . 108121) (symbol 108115 . 108120) (punctuation 108114 . 108115) (close-paren 108113 . 108114) (open-paren 108112 . 108113) (symbol 108102 . 108112) (punctuation 108101 . 108102) (symbol 108100 . 108101) (RETURN 108093 . 108099) (punctuation 108087 . 108088) (close-paren 108086 . 108087) (symbol 108084 . 108086) (open-paren 108083 . 108084) (symbol 108070 . 108083) (punctuation 108069 . 108070) (symbol 108068 . 108069) (close-paren 108040 . 108041) (symbol 108038 . 108040) (symbol 108024 . 108037) (open-paren 108023 . 108024) (symbol 107993 . 108023) (punctuation 107991 . 107992) (symbol 107990 . 107991) (punctuation 107989 . 107990) (symbol 107976 . 107989) (punctuation 107972 . 107973) (symbol 107971 . 107972) (TYPENAME 107962 . 107970) (punctuation 107961 . 107962) (TEMPLATE 107952 . 107960) (punctuation 107836 . 107837) (close-paren 107835 . 107836) (semantic-list 107833 . 107835) (symbol 107828 . 107833) (punctuation 107827 . 107828) (semantic-list 107825 . 107827) (symbol 107815 . 107825) (punctuation 107814 . 107815) (symbol 107813 . 107814) (open-paren 107812 . 107813) (symbol 107788 . 107812) (RETURN 107781 . 107787) (close-paren 107750 . 107751) (open-paren 107749 . 107750) (symbol 107725 . 107749) (punctuation 107723 . 107724) (VOID 107719 . 107723) (punctuation 107718 . 107719) (symbol 107705 . 107718) (INLINE 107698 . 107704) (punctuation 107688 . 107689) (close-paren 107687 . 107688) (open-paren 107686 . 107687) (symbol 107681 . 107686) (punctuation 107680 . 107681) (close-paren 107679 . 107680) (open-paren 107678 . 107679) (symbol 107668 . 107678) (punctuation 107667 . 107668) (symbol 107666 . 107667) (RETURN 107659 . 107665) (punctuation 107653 . 107654) (close-paren 107652 . 107653) (semantic-list 107645 . 107652) (punctuation 107644 . 107645) (symbol 107643 . 107644) (punctuation 107642 . 107643) (symbol 107635 . 107642) (punctuation 107634 . 107635) (punctuation 107633 . 107634) (symbol 107628 . 107633) (open-paren 107627 . 107628) (symbol 107618 . 107627) (punctuation 107617 . 107618) (symbol 107616 . 107617) (punctuation 107565 . 107566) (punctuation 107564 . 107565) (punctuation 107563 . 107564) (symbol 107562 . 107563) (punctuation 107561 . 107562) (symbol 107556 . 107561) (TYPENAME 107547 . 107555) (TYPEDEF 107539 . 107546) (close-paren 107529 . 107530) (symbol 107524 . 107529) (close-paren 107522 . 107523) (symbol 107521 . 107522) (open-paren 107520 . 107521) (symbol 107500 . 107520) (open-paren 107499 . 107500) (symbol 107475 . 107499) (punctuation 107473 . 107474) (symbol 107469 . 107473) (punctuation 107468 . 107469) (punctuation 107467 . 107468) (punctuation 107466 . 107467) (symbol 107465 . 107466) (punctuation 107464 . 107465) (symbol 107459 . 107464) (TYPENAME 107450 . 107458) (punctuation 107449 . 107450) (symbol 107436 . 107449) (punctuation 107432 . 107433) (symbol 107431 . 107432) (TYPENAME 107422 . 107430) (punctuation 107421 . 107422) (TEMPLATE 107412 . 107420) (punctuation 107302 . 107303) (close-paren 107301 . 107302) (semantic-list 107299 . 107301) (symbol 107294 . 107299) (punctuation 107293 . 107294) (semantic-list 107291 . 107293) (symbol 107281 . 107291) (punctuation 107280 . 107281) (symbol 107279 . 107280) (open-paren 107278 . 107279) (symbol 107254 . 107278) (RETURN 107247 . 107253) (close-paren 107216 . 107217) (open-paren 107215 . 107216) (symbol 107197 . 107215) (punctuation 107195 . 107196) (VOID 107191 . 107195) (punctuation 107190 . 107191) (symbol 107177 . 107190) (INLINE 107170 . 107176) (punctuation 107160 . 107161) (close-paren 107159 . 107160) (semantic-list 107157 . 107159) (symbol 107152 . 107157) (punctuation 107151 . 107152) (semantic-list 107149 . 107151) (symbol 107139 . 107149) (punctuation 107138 . 107139) (symbol 107137 . 107138) (open-paren 107136 . 107137) (symbol 107112 . 107136) (RETURN 107105 . 107111) (punctuation 107099 . 107100) (close-paren 107098 . 107099) (semantic-list 107091 . 107098) (punctuation 107090 . 107091) (symbol 107089 . 107090) (punctuation 107088 . 107089) (symbol 107081 . 107088) (punctuation 107080 . 107081) (punctuation 107079 . 107080) (symbol 107074 . 107079) (open-paren 107073 . 107074) (symbol 107064 . 107073) (punctuation 107063 . 107064) (symbol 107062 . 107063) (punctuation 107011 . 107012) (punctuation 107010 . 107011) (punctuation 107009 . 107010) (symbol 107008 . 107009) (punctuation 107007 . 107008) (symbol 107002 . 107007) (TYPENAME 106993 . 107001) (TYPEDEF 106985 . 106992) (close-paren 106975 . 106976) (symbol 106970 . 106975) (close-paren 106968 . 106969) (symbol 106967 . 106968) (open-paren 106966 . 106967) (symbol 106946 . 106966) (open-paren 106945 . 106946) (symbol 106927 . 106945) (punctuation 106925 . 106926) (symbol 106921 . 106925) (punctuation 106920 . 106921) (punctuation 106919 . 106920) (punctuation 106918 . 106919) (symbol 106917 . 106918) (punctuation 106916 . 106917) (symbol 106911 . 106916) (TYPENAME 106902 . 106910) (punctuation 106901 . 106902) (symbol 106888 . 106901) (punctuation 106884 . 106885) (symbol 106883 . 106884) (TYPENAME 106874 . 106882) (punctuation 106873 . 106874) (TEMPLATE 106864 . 106872) (punctuation 106373 . 106374) (close-paren 106372 . 106373) (semantic-list 106370 . 106372) (symbol 106360 . 106370) (punctuation 106359 . 106360) (symbol 106358 . 106359) (open-paren 106357 . 106358) (symbol 106333 . 106357) (RETURN 106326 . 106332) (punctuation 106320 . 106321) (close-paren 106319 . 106320) (symbol 106317 . 106319) (open-paren 106316 . 106317) (symbol 106303 . 106316) (punctuation 106302 . 106303) (symbol 106301 . 106302) (close-paren 106273 . 106274) (symbol 106271 . 106273) (symbol 106257 . 106270) (open-paren 106256 . 106257) (symbol 106233 . 106256) (punctuation 106231 . 106232) (symbol 106230 . 106231) (punctuation 106229 . 106230) (symbol "unique_future" 106210 . 106229) (punctuation 106206 . 106207) (symbol 106205 . 106206) (TYPENAME 106196 . 106204) (punctuation 106195 . 106196) (TEMPLATE 106186 . 106194) (punctuation 105879 . 105880) (close-paren 105878 . 105879) (semantic-list 105876 . 105878) (symbol 105866 . 105876) (punctuation 105865 . 105866) (symbol 105864 . 105865) (open-paren 105863 . 105864) (symbol 105839 . 105863) (RETURN 105832 . 105838) (punctuation 105826 . 105827) (close-paren 105825 . 105826) (semantic-list 105818 . 105825) (punctuation 105817 . 105818) (symbol 105816 . 105817) (punctuation 105815 . 105816) (symbol 105808 . 105815) (punctuation 105807 . 105808) (punctuation 105806 . 105807) (symbol 105801 . 105806) (open-paren 105800 . 105801) (symbol 105791 . 105800) (punctuation 105790 . 105791) (symbol 105789 . 105790) (punctuation 105738 . 105739) (punctuation 105737 . 105738) (punctuation 105736 . 105737) (symbol 105735 . 105736) (punctuation 105734 . 105735) (symbol 105729 . 105734) (TYPENAME 105720 . 105728) (TYPEDEF 105712 . 105719) (close-paren 105702 . 105703) (symbol 105697 . 105702) (close-paren 105695 . 105696) (symbol 105694 . 105695) (open-paren 105693 . 105694) (symbol 105673 . 105693) (open-paren 105672 . 105673) (symbol 105655 . 105672) (punctuation 105653 . 105654) (symbol 105649 . 105653) (punctuation 105648 . 105649) (punctuation 105647 . 105648) (punctuation 105646 . 105647) (symbol 105645 . 105646) (punctuation 105644 . 105645) (symbol 105639 . 105644) (TYPENAME 105630 . 105638) (punctuation 105629 . 105630) (symbol "unique_future" 105610 . 105629) (punctuation 105606 . 105607) (symbol 105605 . 105606) (TYPENAME 105596 . 105604) (punctuation 105595 . 105596) (TEMPLATE 105586 . 105594) (punctuation 105291 . 105292) (close-paren 105290 . 105291) (semantic-list 105288 . 105290) (symbol 105278 . 105288) (punctuation 105277 . 105278) (symbol 105276 . 105277) (open-paren 105275 . 105276) (symbol 105251 . 105275) (RETURN 105244 . 105250) (punctuation 105238 . 105239) (close-paren 105237 . 105238) (semantic-list 105230 . 105237) (punctuation 105229 . 105230) (symbol 105228 . 105229) (punctuation 105227 . 105228) (symbol 105220 . 105227) (punctuation 105219 . 105220) (punctuation 105218 . 105219) (symbol 105213 . 105218) (open-paren 105212 . 105213) (symbol 105203 . 105212) (punctuation 105202 . 105203) (symbol 105201 . 105202) (punctuation 105150 . 105151) (punctuation 105149 . 105150) (punctuation 105148 . 105149) (symbol 105147 . 105148) (punctuation 105146 . 105147) (symbol 105141 . 105146) (TYPENAME 105132 . 105140) (TYPEDEF 105124 . 105131) (close-paren 105114 . 105115) (symbol 105109 . 105114) (close-paren 105107 . 105108) (symbol 105106 . 105107) (open-paren 105105 . 105106) (symbol 105085 . 105105) (open-paren 105084 . 105085) (symbol 105073 . 105084) (punctuation 105071 . 105072) (symbol 105067 . 105071) (punctuation 105066 . 105067) (punctuation 105065 . 105066) (punctuation 105064 . 105065) (symbol 105063 . 105064) (punctuation 105062 . 105063) (symbol 105057 . 105062) (TYPENAME 105048 . 105056) (punctuation 105047 . 105048) (symbol "unique_future" 105028 . 105047) (punctuation 105024 . 105025) (symbol 105023 . 105024) (TYPENAME 105014 . 105022) (punctuation 105013 . 105014) (TEMPLATE 105004 . 105012) (punctuation 104887 . 104888) (close-paren 104886 . 104887) (semantic-list 104843 . 104886) (symbol 104838 . 104843) (semantic-list 104882 . 104885) (semantic-list 104850 . 104863) (open-paren 104837 . 104838) (symbol 104813 . 104837) (RETURN 104806 . 104812) (close-paren 104790 . 104791) (symbol 104789 . 104790) (close-paren 104787 . 104788) (symbol 104786 . 104787) (open-paren 104785 . 104786) (symbol 104766 . 104785) (open-paren 104765 . 104766) (symbol 104760 . 104765) (punctuation 104754 . 104755) (symbol 104750 . 104754) (punctuation 104749 . 104750) (punctuation 104748 . 104749) (punctuation 104747 . 104748) (close-paren 104746 . 104747) (open-paren 104745 . 104746) (symbol 104744 . 104745) (punctuation 104743 . 104744) (symbol 104734 . 104743) (punctuation 104733 . 104734) (punctuation 104732 . 104733) (symbol 104727 . 104732) (TYPENAME 104718 . 104726) (punctuation 104717 . 104718) (symbol "unique_future" 104698 . 104717) (punctuation 104692 . 104693) (symbol 104691 . 104692) (CLASS 104685 . 104690) (punctuation 104684 . 104685) (TEMPLATE 104675 . 104683) (punctuation 103140 . 103141) (punctuation 103139 . 103140) (RETURN 103132 . 103138) (ELSE 103049 . 103053) (punctuation 102824 . 102825) (punctuation 102823 . 102824) (RETURN 102816 . 102822) (close-paren 102317 . 102318) (semantic-list 102299 . 102317) (INT 102296 . 102299) (punctuation 102294 . 102295) (semantic-list 102285 . 102293) (INT 102282 . 102285) (open-paren 102281 . 102282) (IF 102278 . 102280) (ELSE 102273 . 102277) (punctuation 102229 . 102230) (punctuation 102228 . 102229) (RETURN 102221 . 102227) (punctuation 102191 . 102192) (semantic-list 102172 . 102191) (symbol 102166 . 102172) (semantic-list 102185 . 102189) (punctuation 102165 . 102166) (punctuation 102164 . 102165) (symbol 102159 . 102164) (semantic-list 102185 . 102189) (punctuation 101911 . 101912) (symbol 101908 . 101911) (semantic-list 101834 . 101837) (close-paren 101376 . 101377) (semantic-list 101361 . 101376) (INT 101358 . 101361) (punctuation 101356 . 101357) (semantic-list 101347 . 101355) (INT 101344 . 101347) (open-paren 101343 . 101344) (IF 101340 . 101342) (punctuation 101259 . 101260) (punctuation 101258 . 101259) (punctuation 101257 . 101258) (close-paren 101256 . 101257) (open-paren 101255 . 101256) (symbol 101251 . 101255) (punctuation 101250 . 101251) (punctuation 101249 . 101250) (punctuation 101248 . 101249) (symbol 101247 . 101248) (punctuation 101246 . 101247) (symbol 101241 . 101246) (TYPENAME 101232 . 101240) (punctuation 101231 . 101232) (symbol 101222 . 101231) (punctuation 101221 . 101222) (punctuation 101220 . 101221) (symbol 101215 . 101220) (TYPENAME 101206 . 101214) (TYPEDEF 101198 . 101205) (close-paren 101176 . 101177) (symbol 101175 . 101176) (close-paren 101172 . 101173) (symbol 101171 . 101172) (open-paren 101170 . 101171) (symbol 101150 . 101170) (punctuation 101148 . 101149) (symbol 101142 . 101148) (symbol 101135 . 101141) (open-paren 101134 . 101135) (symbol 101129 . 101134) (punctuation 101119 . 101120) (symbol 101115 . 101119) (punctuation 101114 . 101115) (punctuation 101113 . 101114) (punctuation 101112 . 101113) (close-paren 101111 . 101112) (open-paren 101110 . 101111) (symbol 101106 . 101110) (punctuation 101105 . 101106) (punctuation 101104 . 101105) (punctuation 101103 . 101104) (symbol 101102 . 101103) (punctuation 101101 . 101102) (symbol 101096 . 101101) (TYPENAME 101087 . 101095) (punctuation 101086 . 101087) (symbol 101077 . 101086) (punctuation 101076 . 101077) (punctuation 101075 . 101076) (symbol 101070 . 101075) (TYPENAME 101061 . 101069) (punctuation 101060 . 101061) (symbol "unique_future" 101041 . 101060) (punctuation 101031 . 101032) (symbol 101030 . 101031) (CLASS 101024 . 101029) (punctuation 101023 . 101024) (TEMPLATE 101014 . 101022) (RETURN 97312 . 97318) (semantic-list 97280 . 97303) (NEW 97249 . 97252) (close-paren 97182 . 97183) (symbol 97181 . 97182) (semantic-list 97176 . 97180) (symbol 97156 . 97176) (open-paren 97155 . 97156) (symbol 97131 . 97155) (punctuation 97125 . 97126) (symbol 97123 . 97125) (punctuation 97122 . 97123) (symbol "unique_future" 97103 . 97122) (punctuation 97097 . 97098) (symbol 97095 . 97097) (CLASS 97089 . 97094) (punctuation 97087 . 97088) (symbol 97085 . 97087) (CLASS 97079 . 97084) (punctuation 97078 . 97079) (TEMPLATE 97069 . 97077) (RETURN 96917 . 96923) (semantic-list 96885 . 96908) (NEW 96851 . 96854) (close-paren 96781 . 96782) (symbol 96780 . 96781) (semantic-list 96775 . 96779) (symbol 96755 . 96775) (open-paren 96754 . 96755) (symbol 96727 . 96754) (punctuation 96721 . 96722) (symbol 96719 . 96721) (punctuation 96718 . 96719) (symbol "unique_future" 96699 . 96718) (punctuation 96693 . 96694) (symbol 96691 . 96693) (CLASS 96685 . 96690) (punctuation 96683 . 96684) (symbol 96681 . 96683) (CLASS 96675 . 96680) (punctuation 96674 . 96675) (TEMPLATE 96665 . 96673) (symbol 96539 . 96545) (NAMESPACE 96529 . 96538) (symbol 96495 . 96523) (punctuation 96493 . 96494) (symbol 96492 . 96493) (punctuation 96491 . 96492) (symbol 96478 . 96491) (close-paren 96476 . 96477) (symbol 96475 . 96476) (open-paren 96474 . 96475) (symbol 96446 . 96474) (punctuation 96216 . 96217) (punctuation 96172 . 96173) (punctuation 96171 . 96172) (symbol 96167 . 96171) (close-paren 96143 . 96144) (symbol 96142 . 96143) (symbol 96140 . 96141) (open-paren 96139 . 96140) (symbol 96122 . 96139) (VOID 96117 . 96121) (punctuation 96107 . 96108) (symbol 96106 . 96107) (TYPENAME 96097 . 96105) (punctuation 96096 . 96097) (TEMPLATE 96088 . 96096) (punctuation 96053 . 96054) (punctuation 96052 . 96053) (symbol 96048 . 96052) (semantic-list 96033 . 96035) (semantic-list 95949 . 95968) (IF 95946 . 95948) (semantic-list 95870 . 95935) (semantic-list 95852 . 95859) (IF 95850 . 95852) (close-paren 95828 . 95829) (open-paren 95827 . 95828) (symbol 95802 . 95827) (VOID 95797 . 95801) (punctuation 95771 . 95772) (punctuation 95770 . 95771) (symbol 95766 . 95770) (semantic-list 95684 . 95753) (semantic-list 95664 . 95671) (IF 95662 . 95664) (close-paren 95638 . 95639) (open-paren 95637 . 95638) (close-paren 95636 . 95637) (open-paren 95635 . 95636) (OPERATOR 95627 . 95635) (VOID 95622 . 95626) (semantic-list 94733 . 94816) (ELSE 94716 . 94720) (semantic-list 94597 . 94703) (semantic-list 94566 . 94584) (IF 94564 . 94566) (ELSE 94559 . 94563) (semantic-list 94477 . 94546) (semantic-list 94457 . 94464) (IF 94455 . 94457) (close-paren 94430 . 94431) (open-paren 94429 . 94430) (symbol 94419 . 94429) (punctuation 94417 . 94418) (symbol 94416 . 94417) (punctuation 94415 . 94416) (symbol "unique_future" 94396 . 94415) (punctuation 94347 . 94348) (number 94346 . 94347) (punctuation 94345 . 94346) (punctuation 94344 . 94345) (semantic-list 94342 . 94344) (symbol 94339 . 94342) (punctuation 94338 . 94339) (symbol 94334 . 94338) (RETURN 94327 . 94333) (symbol 94292 . 94306) (CONST 94286 . 94291) (close-paren 94284 . 94285) (open-paren 94283 . 94284) (symbol 94278 . 94283) (BOOL 94273 . 94277) (punctuation 94236 . 94237) (punctuation 94185 . 94186) (punctuation 94174 . 94175) (symbol 94170 . 94174) (symbol 94133 . 94147) (close-paren 94131 . 94132) (symbol 94126 . 94131) (punctuation 94124 . 94125) (symbol 94111 . 94124) (open-paren 94110 . 94111) (symbol 94106 . 94110) (VOID 94101 . 94105) (punctuation 94037 . 94038) (punctuation 94036 . 94037) (symbol 94032 . 94036) (semantic-list 93994 . 94017) (THROW 93952 . 93957) (semantic-list 93925 . 93935) (IF 93922 . 93924) (close-paren 93898 . 93899) (open-paren 93897 . 93898) (symbol 93892 . 93897) (VOID 93887 . 93891) (RETURN 93854 . 93860) (semantic-list 93707 . 93714) (symbol 93559 . 93573) (close-paren 93557 . 93558) (symbol 93552 . 93557) (semantic-list 93536 . 93551) (symbol 93517 . 93536) (open-paren 93516 . 93517) (punctuation 93515 . 93516) (OPERATOR 93507 . 93515) (punctuation 93505 . 93506) (symbol 93492 . 93505) (punctuation 93450 . 93451) (semantic-list 93443 . 93450) (symbol 93428 . 93443) (punctuation 93408 . 93409) (semantic-list 93401 . 93408) (punctuation 93380 . 93381) (symbol 93376 . 93380) (close-paren 93352 . 93353) (symbol 93337 . 93352) (punctuation 93336 . 93337) (semantic-list 93329 . 93336) (symbol 93314 . 93329) (open-paren 93313 . 93314) (symbol 93298 . 93313) (punctuation 93284 . 93285) (symbol 93269 . 93283) (close-paren 93267 . 93268) (symbol 93262 . 93267) (semantic-list 93246 . 93261) (symbol 93227 . 93246) (open-paren 93226 . 93227) (symbol 93213 . 93226) (semantic-list 93115 . 93171) (semantic-list 93096 . 93102) (IF 93094 . 93096) (close-paren 93070 . 93071) (open-paren 93069 . 93070) (symbol 93056 . 93069) (punctuation 93055 . 93056) (punctuation 87394 . 87395) (punctuation 87393 . 87394) (punctuation 87392 . 87393) (symbol 87388 . 87392) (punctuation 87387 . 87388) (punctuation 87386 . 87387) (punctuation 87385 . 87386) (symbol 87384 . 87385) (punctuation 87383 . 87384) (symbol 87367 . 87383) (TYPENAME 87358 . 87366) (punctuation 87357 . 87358) (symbol 87348 . 87357) (TYPENAME 87339 . 87347) (TYPEDEF 87331 . 87338) (close-paren 87309 . 87310) (number 87295 . 87296) (punctuation 87294 . 87295) (symbol 87290 . 87294) (punctuation 87289 . 87290) (punctuation 87288 . 87289) (punctuation 87287 . 87288) (punctuation 87285 . 87286) (symbol 87280 . 87285) (punctuation 87278 . 87279) (punctuation 87277 . 87278) (symbol 87264 . 87277) (punctuation 87262 . 87263) (symbol 87258 . 87262) (punctuation 87257 . 87258) (punctuation 87256 . 87257) (punctuation 87255 . 87256) (symbol 87254 . 87255) (punctuation 87253 . 87254) (symbol 87248 . 87253) (TYPENAME 87239 . 87247) (punctuation 87238 . 87239) (symbol 87231 . 87238) (punctuation 87230 . 87231) (symbol 87220 . 87230) (TYPENAME 87211 . 87219) (punctuation 87209 . 87210) (symbol 87195 . 87196) (semantic-list 87191 . 87194) (symbol 87171 . 87191) (open-paren 87170 . 87171) (symbol 87157 . 87170) (EXPLICIT 87148 . 87156) (punctuation 87138 . 87139) (symbol 87137 . 87138) (CLASS 87131 . 87136) (punctuation 87130 . 87131) (TEMPLATE 87121 . 87129) (close-paren 85951 . 85952) (symbol 85946 . 85951) (open-paren 85945 . 85946) (symbol 85930 . 85945) (punctuation 85916 . 85917) (close-paren 85915 . 85916) (open-paren 85914 . 85915) (symbol 85901 . 85914) (close-paren 85890 . 85891) (symbol 85877 . 85890) (open-paren 85876 . 85877) (symbol 85851 . 85876) (symbol 85602 . 85615) (CLASS 85596 . 85601) (punctuation 85590 . 85591) (symbol 85589 . 85590) (TYPENAME 85580 . 85588) (punctuation 85579 . 85580) (TEMPLATE 85571 . 85579) (punctuation 85003 . 85004) (punctuation 83194 . 83195) (VOID 83190 . 83194) (punctuation 83189 . 83190) (symbol 83180 . 83189) (punctuation 83168 . 83169) (punctuation 83167 . 83168) (VOID 83163 . 83167) (punctuation 83162 . 83163) (close-paren 83161 . 83162) (open-paren 83160 . 83161) (close-paren 83159 . 83160) (punctuation 83158 . 83159) (open-paren 83157 . 83158) (VOID 83152 . 83156) (punctuation 83151 . 83152) (symbol 83140 . 83151) (STRUCT 83133 . 83139) (punctuation 83123 . 83124) (punctuation 83122 . 83123) (TEMPLATE 83114 . 83122) (punctuation 82736 . 82737) (semantic-list 81064 . 81067) (punctuation 80840 . 80841) (VOID 80836 . 80840) (punctuation 80835 . 80836) (symbol 80826 . 80835) (punctuation 80814 . 80815) (punctuation 80813 . 80814) (VOID 80809 . 80813) (punctuation 80808 . 80809) (symbol 80807 . 80808) (punctuation 80806 . 80807) (symbol 80795 . 80806) (STRUCT 80788 . 80794) (punctuation 80778 . 80779) (symbol 80777 . 80778) (TYPENAME 80768 . 80776) (punctuation 80767 . 80768) (TEMPLATE 80759 . 80767) (punctuation 75124 . 75125) (semantic-list 73354 . 73357) (punctuation 73130 . 73131) (punctuation 73129 . 73130) (symbol 73128 . 73129) (punctuation 73127 . 73128) (symbol 73118 . 73127) (punctuation 73104 . 73105) (punctuation 73103 . 73104) (punctuation 73102 . 73103) (symbol 73101 . 73102) (punctuation 73100 . 73101) (symbol 73099 . 73100) (punctuation 73098 . 73099) (symbol 73087 . 73098) (STRUCT 73080 . 73086) (punctuation 73070 . 73071) (symbol 73069 . 73070) (TYPENAME 73060 . 73068) (punctuation 73058 . 73059) (symbol 73057 . 73058) (TYPENAME 73048 . 73056) (punctuation 73047 . 73048) (TEMPLATE 73039 . 73047) (punctuation 72648 . 72649) (semantic-list 70749 . 70752) (punctuation 70472 . 70473) (symbol 70471 . 70472) (TYPENAME 70462 . 70470) (punctuation 70460 . 70461) (symbol 70459 . 70460) (TYPENAME 70450 . 70458) (punctuation 70449 . 70450) (TEMPLATE 70441 . 70449) (punctuation 108122 . 108123) (close-paren 108121 . 108122) (open-paren 108120 . 108121) (symbol 108115 . 108120) (punctuation 108114 . 108115) (close-paren 108113 . 108114) (open-paren 108112 . 108113) (symbol 108102 . 108112) (punctuation 108101 . 108102) (symbol 108100 . 108101) (RETURN 108093 . 108099) (punctuation 108087 . 108088) (close-paren 108086 . 108087) (symbol 108084 . 108086) (open-paren 108083 . 108084) (symbol 108070 . 108083) (punctuation 108069 . 108070) (symbol 108068 . 108069) (close-paren 108040 . 108041) (symbol 108038 . 108040) (symbol 108024 . 108037) (open-paren 108023 . 108024) (symbol 107993 . 108023) (punctuation 107991 . 107992) (symbol 107990 . 107991) (punctuation 107989 . 107990) (symbol 107976 . 107989) (punctuation 107972 . 107973) (symbol 107971 . 107972) (TYPENAME 107962 . 107970) (punctuation 107961 . 107962) (TEMPLATE 107952 . 107960) (punctuation 107836 . 107837) (close-paren 107835 . 107836) (semantic-list 107833 . 107835) (symbol 107828 . 107833) (punctuation 107827 . 107828) (semantic-list 107825 . 107827) (symbol 107815 . 107825) (punctuation 107814 . 107815) (symbol 107813 . 107814) (open-paren 107812 . 107813) (symbol 107788 . 107812) (RETURN 107781 . 107787) (close-paren 107750 . 107751) (open-paren 107749 . 107750) (symbol 107725 . 107749) (punctuation 107723 . 107724) (VOID 107719 . 107723) (punctuation 107718 . 107719) (symbol 107705 . 107718) (INLINE 107698 . 107704) (punctuation 107688 . 107689) (close-paren 107687 . 107688) (open-paren 107686 . 107687) (symbol 107681 . 107686) (punctuation 107680 . 107681) (close-paren 107679 . 107680) (open-paren 107678 . 107679) (symbol 107668 . 107678) (punctuation 107667 . 107668) (symbol 107666 . 107667) (RETURN 107659 . 107665) (punctuation 107653 . 107654) (close-paren 107652 . 107653) (semantic-list 107645 . 107652) (punctuation 107644 . 107645) (symbol 107643 . 107644) (punctuation 107642 . 107643) (symbol 107635 . 107642) (punctuation 107634 . 107635) (punctuation 107633 . 107634) (symbol 107628 . 107633) (open-paren 107627 . 107628) (symbol 107618 . 107627) (punctuation 107617 . 107618) (symbol 107616 . 107617) (punctuation 107565 . 107566) (punctuation 107564 . 107565) (punctuation 107563 . 107564) (symbol 107562 . 107563) (punctuation 107561 . 107562) (symbol 107556 . 107561) (TYPENAME 107547 . 107555) (TYPEDEF 107539 . 107546) (close-paren 107529 . 107530) (symbol 107524 . 107529) (close-paren 107522 . 107523) (symbol 107521 . 107522) (open-paren 107520 . 107521) (symbol 107500 . 107520) (open-paren 107499 . 107500) (symbol 107475 . 107499) (punctuation 107473 . 107474) (symbol 107469 . 107473) (punctuation 107468 . 107469) (punctuation 107467 . 107468) (punctuation 107466 . 107467) (symbol 107465 . 107466) (punctuation 107464 . 107465) (symbol 107459 . 107464) (TYPENAME 107450 . 107458) (punctuation 107449 . 107450) (symbol 107436 . 107449) (punctuation 107432 . 107433) (symbol 107431 . 107432) (TYPENAME 107422 . 107430) (punctuation 107421 . 107422) (TEMPLATE 107412 . 107420) (punctuation 107302 . 107303) (close-paren 107301 . 107302) (semantic-list 107299 . 107301) (symbol 107294 . 107299) (punctuation 107293 . 107294) (semantic-list 107291 . 107293) (symbol 107281 . 107291) (punctuation 107280 . 107281) (symbol 107279 . 107280) (open-paren 107278 . 107279) (symbol 107254 . 107278) (RETURN 107247 . 107253) (close-paren 107216 . 107217) (open-paren 107215 . 107216) (symbol 107197 . 107215) (punctuation 107195 . 107196) (VOID 107191 . 107195) (punctuation 107190 . 107191) (symbol 107177 . 107190) (INLINE 107170 . 107176) (punctuation 107160 . 107161) (close-paren 107159 . 107160) (semantic-list 107157 . 107159) (symbol 107152 . 107157) (punctuation 107151 . 107152) (semantic-list 107149 . 107151) (symbol 107139 . 107149) (punctuation 107138 . 107139) (symbol 107137 . 107138) (open-paren 107136 . 107137) (symbol 107112 . 107136) (RETURN 107105 . 107111) (punctuation 107099 . 107100) (close-paren 107098 . 107099) (semantic-list 107091 . 107098) (punctuation 107090 . 107091) (symbol 107089 . 107090) (punctuation 107088 . 107089) (symbol 107081 . 107088) (punctuation 107080 . 107081) (punctuation 107079 . 107080) (symbol 107074 . 107079) (open-paren 107073 . 107074) (symbol 107064 . 107073) (punctuation 107063 . 107064) (symbol 107062 . 107063) (punctuation 107011 . 107012) (punctuation 107010 . 107011) (punctuation 107009 . 107010) (symbol 107008 . 107009) (punctuation 107007 . 107008) (symbol 107002 . 107007) (TYPENAME 106993 . 107001) (TYPEDEF 106985 . 106992) (close-paren 106975 . 106976) (symbol 106970 . 106975) (close-paren 106968 . 106969) (symbol 106967 . 106968) (open-paren 106966 . 106967) (symbol 106946 . 106966) (open-paren 106945 . 106946) (symbol 106927 . 106945) (punctuation 106925 . 106926) (symbol 106921 . 106925) (punctuation 106920 . 106921) (punctuation 106919 . 106920) (punctuation 106918 . 106919) (symbol 106917 . 106918) (punctuation 106916 . 106917) (symbol 106911 . 106916) (TYPENAME 106902 . 106910) (punctuation 106901 . 106902) (symbol 106888 . 106901) (punctuation 106884 . 106885) (symbol 106883 . 106884) (TYPENAME 106874 . 106882) (punctuation 106873 . 106874) (TEMPLATE 106864 . 106872) (punctuation 106373 . 106374) (close-paren 106372 . 106373) (semantic-list 106370 . 106372) (symbol 106360 . 106370) (punctuation 106359 . 106360) (symbol 106358 . 106359) (open-paren 106357 . 106358) (symbol 106333 . 106357) (RETURN 106326 . 106332) (punctuation 106320 . 106321) (close-paren 106319 . 106320) (symbol 106317 . 106319) (open-paren 106316 . 106317) (symbol 106303 . 106316) (punctuation 106302 . 106303) (symbol 106301 . 106302) (close-paren 106273 . 106274) (symbol 106271 . 106273) (symbol 106257 . 106270) (open-paren 106256 . 106257) (symbol 106233 . 106256) (punctuation 106231 . 106232) (symbol 106230 . 106231) (punctuation 106229 . 106230) (symbol "unique_future" 106210 . 106229) (punctuation 106206 . 106207) (symbol 106205 . 106206) (TYPENAME 106196 . 106204) (punctuation 106195 . 106196) (TEMPLATE 106186 . 106194) (punctuation 105879 . 105880) (close-paren 105878 . 105879) (semantic-list 105876 . 105878) (symbol 105866 . 105876) (punctuation 105865 . 105866) (symbol 105864 . 105865) (open-paren 105863 . 105864) (symbol 105839 . 105863) (RETURN 105832 . 105838) (punctuation 105826 . 105827) (close-paren 105825 . 105826) (semantic-list 105818 . 105825) (punctuation 105817 . 105818) (symbol 105816 . 105817) (punctuation 105815 . 105816) (symbol 105808 . 105815) (punctuation 105807 . 105808) (punctuation 105806 . 105807) (symbol 105801 . 105806) (open-paren 105800 . 105801) (symbol 105791 . 105800) (punctuation 105790 . 105791) (symbol 105789 . 105790) (punctuation 105738 . 105739) (punctuation 105737 . 105738) (punctuation 105736 . 105737) (symbol 105735 . 105736) (punctuation 105734 . 105735) (symbol 105729 . 105734) (TYPENAME 105720 . 105728) (TYPEDEF 105712 . 105719) (close-paren 105702 . 105703) (symbol 105697 . 105702) (close-paren 105695 . 105696) (symbol 105694 . 105695) (open-paren 105693 . 105694) (symbol 105673 . 105693) (open-paren 105672 . 105673) (symbol 105655 . 105672) (punctuation 105653 . 105654) (symbol 105649 . 105653) (punctuation 105648 . 105649) (punctuation 105647 . 105648) (punctuation 105646 . 105647) (symbol 105645 . 105646) (punctuation 105644 . 105645) (symbol 105639 . 105644) (TYPENAME 105630 . 105638) (punctuation 105629 . 105630) (symbol "unique_future" 105610 . 105629) (punctuation 105606 . 105607) (symbol 105605 . 105606) (TYPENAME 105596 . 105604) (punctuation 105595 . 105596) (TEMPLATE 105586 . 105594) (punctuation 105291 . 105292) (close-paren 105290 . 105291) (semantic-list 105288 . 105290) (symbol 105278 . 105288) (punctuation 105277 . 105278) (symbol 105276 . 105277) (open-paren 105275 . 105276) (symbol 105251 . 105275) (RETURN 105244 . 105250) (punctuation 105238 . 105239) (close-paren 105237 . 105238) (semantic-list 105230 . 105237) (punctuation 105229 . 105230) (symbol 105228 . 105229) (punctuation 105227 . 105228) (symbol 105220 . 105227) (punctuation 105219 . 105220) (punctuation 105218 . 105219) (symbol 105213 . 105218) (open-paren 105212 . 105213) (symbol 105203 . 105212) (punctuation 105202 . 105203) (symbol 105201 . 105202) (punctuation 105150 . 105151) (punctuation 105149 . 105150) (punctuation 105148 . 105149) (symbol 105147 . 105148) (punctuation 105146 . 105147) (symbol 105141 . 105146) (TYPENAME 105132 . 105140) (TYPEDEF 105124 . 105131) (close-paren 105114 . 105115) (symbol 105109 . 105114) (close-paren 105107 . 105108) (symbol 105106 . 105107) (open-paren 105105 . 105106) (symbol 105085 . 105105) (open-paren 105084 . 105085) (symbol 105073 . 105084) (punctuation 105071 . 105072) (symbol 105067 . 105071) (punctuation 105066 . 105067) (punctuation 105065 . 105066) (punctuation 105064 . 105065) (symbol 105063 . 105064) (punctuation 105062 . 105063) (symbol 105057 . 105062) (TYPENAME 105048 . 105056) (punctuation 105047 . 105048) (symbol "unique_future" 105028 . 105047) (punctuation 105024 . 105025) (symbol 105023 . 105024) (TYPENAME 105014 . 105022) (punctuation 105013 . 105014) (TEMPLATE 105004 . 105012) (punctuation 104887 . 104888) (close-paren 104886 . 104887) (semantic-list 104843 . 104886) (symbol 104838 . 104843) (semantic-list 104882 . 104885) (semantic-list 104850 . 104863) (open-paren 104837 . 104838) (symbol 104813 . 104837) (RETURN 104806 . 104812) (close-paren 104790 . 104791) (symbol 104789 . 104790) (close-paren 104787 . 104788) (symbol 104786 . 104787) (open-paren 104785 . 104786) (symbol 104766 . 104785) (open-paren 104765 . 104766) (symbol 104760 . 104765) (punctuation 104754 . 104755) (symbol 104750 . 104754) (punctuation 104749 . 104750) (punctuation 104748 . 104749) (punctuation 104747 . 104748) (close-paren 104746 . 104747) (open-paren 104745 . 104746) (symbol 104744 . 104745) (punctuation 104743 . 104744) (symbol 104734 . 104743) (punctuation 104733 . 104734) (punctuation 104732 . 104733) (symbol 104727 . 104732) (TYPENAME 104718 . 104726) (punctuation 104717 . 104718) (symbol "unique_future" 104698 . 104717) (punctuation 104692 . 104693) (symbol 104691 . 104692) (CLASS 104685 . 104690) (punctuation 104684 . 104685) (TEMPLATE 104675 . 104683) (punctuation 103140 . 103141) (punctuation 103139 . 103140) (RETURN 103132 . 103138) (ELSE 103049 . 103053) (punctuation 102824 . 102825) (punctuation 102823 . 102824) (RETURN 102816 . 102822) (close-paren 102317 . 102318) (semantic-list 102299 . 102317) (INT 102296 . 102299) (punctuation 102294 . 102295) (semantic-list 102285 . 102293) (INT 102282 . 102285) (open-paren 102281 . 102282) (IF 102278 . 102280) (ELSE 102273 . 102277) (punctuation 102229 . 102230) (punctuation 102228 . 102229) (RETURN 102221 . 102227) (punctuation 102191 . 102192) (semantic-list 102172 . 102191) (symbol 102166 . 102172) (semantic-list 102185 . 102189) (punctuation 102165 . 102166) (punctuation 102164 . 102165) (symbol 102159 . 102164) (semantic-list 102185 . 102189) (punctuation 101911 . 101912) (symbol 101908 . 101911) (semantic-list 101834 . 101837) (close-paren 101376 . 101377) (semantic-list 101361 . 101376) (INT 101358 . 101361) (punctuation 101356 . 101357) (semantic-list 101347 . 101355) (INT 101344 . 101347) (open-paren 101343 . 101344) (IF 101340 . 101342) (punctuation 101259 . 101260) (punctuation 101258 . 101259) (punctuation 101257 . 101258) (close-paren 101256 . 101257) (open-paren 101255 . 101256) (symbol 101251 . 101255) (punctuation 101250 . 101251) (punctuation 101249 . 101250) (punctuation 101248 . 101249) (symbol 101247 . 101248) (punctuation 101246 . 101247) (symbol 101241 . 101246) (TYPENAME 101232 . 101240) (punctuation 101231 . 101232) (symbol 101222 . 101231) (punctuation 101221 . 101222) (punctuation 101220 . 101221) (symbol 101215 . 101220) (TYPENAME 101206 . 101214) (TYPEDEF 101198 . 101205) (close-paren 101176 . 101177) (symbol 101175 . 101176) (close-paren 101172 . 101173) (symbol 101171 . 101172) (open-paren 101170 . 101171) (symbol 101150 . 101170) (punctuation 101148 . 101149) (symbol 101142 . 101148) (symbol 101135 . 101141) (open-paren 101134 . 101135) (symbol 101129 . 101134) (punctuation 101119 . 101120) (symbol 101115 . 101119) (punctuation 101114 . 101115) (punctuation 101113 . 101114) (punctuation 101112 . 101113) (close-paren 101111 . 101112) (open-paren 101110 . 101111) (symbol 101106 . 101110) (punctuation 101105 . 101106) (punctuation 101104 . 101105) (punctuation 101103 . 101104) (symbol 101102 . 101103) (punctuation 101101 . 101102) (symbol 101096 . 101101) (TYPENAME 101087 . 101095) (punctuation 101086 . 101087) (symbol 101077 . 101086) (punctuation 101076 . 101077) (punctuation 101075 . 101076) (symbol 101070 . 101075) (TYPENAME 101061 . 101069) (punctuation 101060 . 101061) (symbol "unique_future" 101041 . 101060) (punctuation 101031 . 101032) (symbol 101030 . 101031) (CLASS 101024 . 101029) (punctuation 101023 . 101024) (TEMPLATE 101014 . 101022) (RETURN 97312 . 97318) (semantic-list 97280 . 97303) (NEW 97249 . 97252) (close-paren 97182 . 97183) (symbol 97181 . 97182) (semantic-list 97176 . 97180) (symbol 97156 . 97176) (open-paren 97155 . 97156) (symbol 97131 . 97155) (punctuation 97125 . 97126) (symbol 97123 . 97125) (punctuation 97122 . 97123) (symbol "unique_future" 97103 . 97122) (punctuation 97097 . 97098) (symbol 97095 . 97097) (CLASS 97089 . 97094) (punctuation 97087 . 97088) (symbol 97085 . 97087) (CLASS 97079 . 97084) (punctuation 97078 . 97079) (TEMPLATE 97069 . 97077) (RETURN 96917 . 96923) (semantic-list 96885 . 96908) (NEW 96851 . 96854) (close-paren 96781 . 96782) (symbol 96780 . 96781) (semantic-list 96775 . 96779) (symbol 96755 . 96775) (open-paren 96754 . 96755) (symbol 96727 . 96754) (punctuation 96721 . 96722) (symbol 96719 . 96721) (punctuation 96718 . 96719) (symbol "unique_future" 96699 . 96718) (punctuation 96693 . 96694) (symbol 96691 . 96693) (CLASS 96685 . 96690) (punctuation 96683 . 96684) (symbol 96681 . 96683) (CLASS 96675 . 96680) (punctuation 96674 . 96675) (TEMPLATE 96665 . 96673) (symbol 96539 . 96545) (NAMESPACE 96529 . 96538) (symbol 96495 . 96523) (punctuation 96493 . 96494) (symbol 96492 . 96493) (punctuation 96491 . 96492) (symbol 96478 . 96491) (close-paren 96476 . 96477) (symbol 96475 . 96476) (open-paren 96474 . 96475) (symbol 96446 . 96474) (punctuation 96216 . 96217) (punctuation 96172 . 96173) (punctuation 96171 . 96172) (symbol 96167 . 96171) (close-paren 96143 . 96144) (symbol 96142 . 96143) (symbol 96140 . 96141) (open-paren 96139 . 96140) (symbol 96122 . 96139) (VOID 96117 . 96121) (punctuation 96107 . 96108) (symbol 96106 . 96107) (TYPENAME 96097 . 96105) (punctuation 96096 . 96097) (TEMPLATE 96088 . 96096) (punctuation 96053 . 96054) (punctuation 96052 . 96053) (symbol 96048 . 96052) (semantic-list 96033 . 96035) (semantic-list 95949 . 95968) (IF 95946 . 95948) (semantic-list 95870 . 95935) (semantic-list 95852 . 95859) (IF 95850 . 95852) (close-paren 95828 . 95829) (open-paren 95827 . 95828) (symbol 95802 . 95827) (VOID 95797 . 95801) (punctuation 95771 . 95772) (punctuation 95770 . 95771) (symbol 95766 . 95770) (semantic-list 95684 . 95753) (semantic-list 95664 . 95671) (IF 95662 . 95664) (close-paren 95638 . 95639) (open-paren 95637 . 95638) (close-paren 95636 . 95637) (open-paren 95635 . 95636) (OPERATOR 95627 . 95635) (VOID 95622 . 95626) (semantic-list 94733 . 94816) (ELSE 94716 . 94720) (semantic-list 94597 . 94703) (semantic-list 94566 . 94584) (IF 94564 . 94566) (ELSE 94559 . 94563) (semantic-list 94477 . 94546) (semantic-list 94457 . 94464) (IF 94455 . 94457) (close-paren 94430 . 94431) (open-paren 94429 . 94430) (symbol 94419 . 94429) (punctuation 94417 . 94418) (symbol 94416 . 94417) (punctuation 94415 . 94416) (symbol "unique_future" 94396 . 94415) (punctuation 94347 . 94348) (number 94346 . 94347) (punctuation 94345 . 94346) (punctuation 94344 . 94345) (semantic-list 94342 . 94344) (symbol 94339 . 94342) (punctuation 94338 . 94339) (symbol 94334 . 94338) (RETURN 94327 . 94333) (symbol 94292 . 94306) (CONST 94286 . 94291) (close-paren 94284 . 94285) (open-paren 94283 . 94284) (symbol 94278 . 94283) (BOOL 94273 . 94277) (punctuation 94236 . 94237) (punctuation 94185 . 94186) (punctuation 94174 . 94175) (symbol 94170 . 94174) (symbol 94133 . 94147) (close-paren 94131 . 94132) (symbol 94126 . 94131) (punctuation 94124 . 94125) (symbol 94111 . 94124) (open-paren 94110 . 94111) (symbol 94106 . 94110) (VOID 94101 . 94105) (punctuation 94037 . 94038) (punctuation 94036 . 94037) (symbol 94032 . 94036) (semantic-list 93994 . 94017) (THROW 93952 . 93957) (semantic-list 93925 . 93935) (IF 93922 . 93924) (close-paren 93898 . 93899) (open-paren 93897 . 93898) (symbol 93892 . 93897) (VOID 93887 . 93891) (RETURN 93854 . 93860) (semantic-list 93707 . 93714) (symbol 93559 . 93573) (close-paren 93557 . 93558) (symbol 93552 . 93557) (semantic-list 93536 . 93551) (symbol 93517 . 93536) (open-paren 93516 . 93517) (punctuation 93515 . 93516) (OPERATOR 93507 . 93515) (punctuation 93505 . 93506) (symbol 93492 . 93505) (punctuation 93450 . 93451) (semantic-list 93443 . 93450) (symbol 93428 . 93443) (punctuation 93408 . 93409) (semantic-list 93401 . 93408) (punctuation 93380 . 93381) (symbol 93376 . 93380) (close-paren 93352 . 93353) (symbol 93337 . 93352) (punctuation 93336 . 93337) (semantic-list 93329 . 93336) (symbol 93314 . 93329) (open-paren 93313 . 93314) (symbol 93298 . 93313) (punctuation 93284 . 93285) (symbol 93269 . 93283) (close-paren 93267 . 93268) (symbol 93262 . 93267) (semantic-list 93246 . 93261) (symbol 93227 . 93246) (open-paren 93226 . 93227) (symbol 93213 . 93226) (semantic-list 93115 . 93171) (semantic-list 93096 . 93102) (IF 93094 . 93096) (close-paren 93070 . 93071) (open-paren 93069 . 93070) (symbol 93056 . 93069) (punctuation 93055 . 93056) (punctuation 87394 . 87395) (punctuation 87393 . 87394) (punctuation 87392 . 87393) (symbol 87388 . 87392) (punctuation 87387 . 87388) (punctuation 87386 . 87387) (punctuation 87385 . 87386) (symbol 87384 . 87385) (punctuation 87383 . 87384) (symbol 87367 . 87383) (TYPENAME 87358 . 87366) (punctuation 87357 . 87358) (symbol 87348 . 87357) (TYPENAME 87339 . 87347) (TYPEDEF 87331 . 87338) (close-paren 87309 . 87310) (number 87295 . 87296) (punctuation 87294 . 87295) (symbol 87290 . 87294) (punctuation 87289 . 87290) (punctuation 87288 . 87289) (punctuation 87287 . 87288) (punctuation 87285 . 87286) (symbol 87280 . 87285) (punctuation 87278 . 87279) (punctuation 87277 . 87278) (symbol 87264 . 87277) (punctuation 87262 . 87263) (symbol 87258 . 87262) (punctuation 87257 . 87258) (punctuation 87256 . 87257) (punctuation 87255 . 87256) (symbol 87254 . 87255) (punctuation 87253 . 87254) (symbol 87248 . 87253) (TYPENAME 87239 . 87247) (punctuation 87238 . 87239) (symbol 87231 . 87238) (punctuation 87230 . 87231) (symbol 87220 . 87230) (TYPENAME 87211 . 87219) (punctuation 87209 . 87210) (symbol 87195 . 87196) (semantic-list 87191 . 87194) (symbol 87171 . 87191) (open-paren 87170 . 87171) (symbol 87157 . 87170) (EXPLICIT 87148 . 87156) (punctuation 87138 . 87139) (symbol 87137 . 87138) (CLASS 87131 . 87136) (punctuation 87130 . 87131) (TEMPLATE 87121 . 87129) (close-paren 85951 . 85952) (symbol 85946 . 85951) (open-paren 85945 . 85946) (symbol 85930 . 85945) (punctuation 85916 . 85917) (close-paren 85915 . 85916) (open-paren 85914 . 85915) (symbol 85901 . 85914) (close-paren 85890 . 85891) (symbol 85877 . 85890) (open-paren 85876 . 85877) (symbol 85851 . 85876) (symbol 85602 . 85615) (CLASS 85596 . 85601) (punctuation 85590 . 85591) (symbol 85589 . 85590) (TYPENAME 85580 . 85588) (punctuation 85579 . 85580) (TEMPLATE 85571 . 85579) (punctuation 85003 . 85004) (punctuation 83194 . 83195) (VOID 83190 . 83194) (punctuation 83189 . 83190) (symbol 83180 . 83189) (punctuation 83168 . 83169) (punctuation 83167 . 83168) (VOID 83163 . 83167) (punctuation 83162 . 83163) (close-paren 83161 . 83162) (open-paren 83160 . 83161) (close-paren 83159 . 83160) (punctuation 83158 . 83159) (open-paren 83157 . 83158) (VOID 83152 . 83156) (punctuation 83151 . 83152) (symbol 83140 . 83151) (STRUCT 83133 . 83139) (punctuation 83123 . 83124) (punctuation 83122 . 83123) (TEMPLATE 83114 . 83122) (punctuation 82736 . 82737) (semantic-list 81064 . 81067) (punctuation 80840 . 80841) (VOID 80836 . 80840) (punctuation 80835 . 80836) (symbol 80826 . 80835) (punctuation 80814 . 80815) (punctuation 80813 . 80814) (VOID 80809 . 80813) (punctuation 80808 . 80809) (symbol 80807 . 80808) (punctuation 80806 . 80807) (symbol 80795 . 80806) (STRUCT 80788 . 80794) (punctuation 80778 . 80779) (symbol 80777 . 80778) (TYPENAME 80768 . 80776) (punctuation 80767 . 80768) (TEMPLATE 80759 . 80767) (punctuation 75124 . 75125) (semantic-list 73354 . 73357) (punctuation 73130 . 73131) (punctuation 73129 . 73130) (symbol 73128 . 73129) (punctuation 73127 . 73128) (symbol 73118 . 73127) (punctuation 73104 . 73105) (punctuation 73103 . 73104) (punctuation 73102 . 73103) (symbol 73101 . 73102) (punctuation 73100 . 73101) (symbol 73099 . 73100) (punctuation 73098 . 73099) (symbol 73087 . 73098) (STRUCT 73080 . 73086) (punctuation 73070 . 73071) (symbol 73069 . 73070) (TYPENAME 73060 . 73068) (punctuation 73058 . 73059) (symbol 73057 . 73058) (TYPENAME 73048 . 73056) (punctuation 73047 . 73048) (TEMPLATE 73039 . 73047) (punctuation 72648 . 72649) (semantic-list 70749 . 70752) (punctuation 108122 . 108123) (close-paren 108121 . 108122) (open-paren 108120 . 108121) (symbol 108115 . 108120) (punctuation 108114 . 108115) (close-paren 108113 . 108114) (open-paren 108112 . 108113) (symbol 108102 . 108112) (punctuation 108101 . 108102) (symbol 108100 . 108101) (RETURN 108093 . 108099) (punctuation 108087 . 108088) (close-paren 108086 . 108087) (symbol 108084 . 108086) (open-paren 108083 . 108084) (symbol 108070 . 108083) (punctuation 108069 . 108070) (symbol 108068 . 108069) (close-paren 108040 . 108041) (symbol 108038 . 108040) (symbol 108024 . 108037) (open-paren 108023 . 108024) (symbol 107993 . 108023) (punctuation 107991 . 107992) (symbol 107990 . 107991) (punctuation 107989 . 107990) (symbol 107976 . 107989) (punctuation 107972 . 107973) (symbol 107971 . 107972) (TYPENAME 107962 . 107970) (punctuation 107961 . 107962) (TEMPLATE 107952 . 107960) (punctuation 107836 . 107837) (close-paren 107835 . 107836) (semantic-list 107833 . 107835) (symbol 107828 . 107833) (punctuation 107827 . 107828) (semantic-list 107825 . 107827) (symbol 107815 . 107825) (punctuation 107814 . 107815) (symbol 107813 . 107814) (open-paren 107812 . 107813) (symbol 107788 . 107812) (RETURN 107781 . 107787) (close-paren 107750 . 107751) (open-paren 107749 . 107750) (symbol 107725 . 107749) (punctuation 107723 . 107724) (VOID 107719 . 107723) (punctuation 107718 . 107719) (symbol 107705 . 107718) (INLINE 107698 . 107704) (punctuation 107688 . 107689) (close-paren 107687 . 107688) (open-paren 107686 . 107687) (symbol 107681 . 107686) (punctuation 107680 . 107681) (close-paren 107679 . 107680) (open-paren 107678 . 107679) (symbol 107668 . 107678) (punctuation 107667 . 107668) (symbol 107666 . 107667) (RETURN 107659 . 107665) (punctuation 107653 . 107654) (close-paren 107652 . 107653) (semantic-list 107645 . 107652) (punctuation 107644 . 107645) (symbol 107643 . 107644) (punctuation 107642 . 107643) (symbol 107635 . 107642) (punctuation 107634 . 107635) (punctuation 107633 . 107634) (symbol 107628 . 107633) (open-paren 107627 . 107628) (symbol 107618 . 107627) (punctuation 107617 . 107618) (symbol 107616 . 107617) (punctuation 107565 . 107566) (punctuation 107564 . 107565) (punctuation 107563 . 107564) (symbol 107562 . 107563) (punctuation 107561 . 107562) (symbol 107556 . 107561) (TYPENAME 107547 . 107555) (TYPEDEF 107539 . 107546) (close-paren 107529 . 107530) (symbol 107524 . 107529) (close-paren 107522 . 107523) (symbol 107521 . 107522) (open-paren 107520 . 107521) (symbol 107500 . 107520) (open-paren 107499 . 107500) (symbol 107475 . 107499) (punctuation 107473 . 107474) (symbol 107469 . 107473) (punctuation 107468 . 107469) (punctuation 107467 . 107468) (punctuation 107466 . 107467) (symbol 107465 . 107466) (punctuation 107464 . 107465) (symbol 107459 . 107464) (TYPENAME 107450 . 107458) (punctuation 107449 . 107450) (symbol 107436 . 107449) (punctuation 107432 . 107433) (symbol 107431 . 107432) (TYPENAME 107422 . 107430) (punctuation 107421 . 107422) (TEMPLATE 107412 . 107420) (punctuation 107302 . 107303) (close-paren 107301 . 107302) (semantic-list 107299 . 107301) (symbol 107294 . 107299) (punctuation 107293 . 107294) (semantic-list 107291 . 107293) (symbol 107281 . 107291) (punctuation 107280 . 107281) (symbol 107279 . 107280) (open-paren 107278 . 107279) (symbol 107254 . 107278) (RETURN 107247 . 107253) (close-paren 107216 . 107217) (open-paren 107215 . 107216) (symbol 107197 . 107215) (punctuation 107195 . 107196) (VOID 107191 . 107195) (punctuation 107190 . 107191) (symbol 107177 . 107190) (INLINE 107170 . 107176) (punctuation 107160 . 107161) (close-paren 107159 . 107160) (semantic-list 107157 . 107159) (symbol 107152 . 107157) (punctuation 107151 . 107152) (semantic-list 107149 . 107151) (symbol 107139 . 107149) (punctuation 107138 . 107139) (symbol 107137 . 107138) (open-paren 107136 . 107137) (symbol 107112 . 107136) (RETURN 107105 . 107111) (punctuation 107099 . 107100) (close-paren 107098 . 107099) (semantic-list 107091 . 107098) (punctuation 107090 . 107091) (symbol 107089 . 107090) (punctuation 107088 . 107089) (symbol 107081 . 107088) (punctuation 107080 . 107081) (punctuation 107079 . 107080) (symbol 107074 . 107079) (open-paren 107073 . 107074) (symbol 107064 . 107073) (punctuation 107063 . 107064) (symbol 107062 . 107063) (punctuation 107011 . 107012) (punctuation 107010 . 107011) (punctuation 107009 . 107010) (symbol 107008 . 107009) (punctuation 107007 . 107008) (symbol 107002 . 107007) (TYPENAME 106993 . 107001) (TYPEDEF 106985 . 106992) (close-paren 106975 . 106976) (symbol 106970 . 106975) (close-paren 106968 . 106969) (symbol 106967 . 106968) (open-paren 106966 . 106967) (symbol 106946 . 106966) (open-paren 106945 . 106946) (symbol 106927 . 106945) (punctuation 106925 . 106926) (symbol 106921 . 106925) (punctuation 106920 . 106921) (punctuation 106919 . 106920) (punctuation 106918 . 106919) (symbol 106917 . 106918) (punctuation 106916 . 106917) (symbol 106911 . 106916) (TYPENAME 106902 . 106910) (punctuation 106901 . 106902) (symbol 106888 . 106901) (punctuation 106884 . 106885) (symbol 106883 . 106884) (TYPENAME 106874 . 106882) (punctuation 106873 . 106874) (TEMPLATE 106864 . 106872) (punctuation 106373 . 106374) (close-paren 106372 . 106373) (semantic-list 106370 . 106372) (symbol 106360 . 106370) (punctuation 106359 . 106360) (symbol 106358 . 106359) (open-paren 106357 . 106358) (symbol 106333 . 106357) (RETURN 106326 . 106332) (punctuation 106320 . 106321) (close-paren 106319 . 106320) (symbol 106317 . 106319) (open-paren 106316 . 106317) (symbol 106303 . 106316) (punctuation 106302 . 106303) (symbol 106301 . 106302) (close-paren 106273 . 106274) (symbol 106271 . 106273) (symbol 106257 . 106270) (open-paren 106256 . 106257) (symbol 106233 . 106256) (punctuation 106231 . 106232) (symbol 106230 . 106231) (punctuation 106229 . 106230) (symbol "unique_future" 106210 . 106229) (punctuation 106206 . 106207) (symbol 106205 . 106206) (TYPENAME 106196 . 106204) (punctuation 106195 . 106196) (TEMPLATE 106186 . 106194) (punctuation 105879 . 105880) (close-paren 105878 . 105879) (semantic-list 105876 . 105878) (symbol 105866 . 105876) (punctuation 105865 . 105866) (symbol 105864 . 105865) (open-paren 105863 . 105864) (symbol 105839 . 105863) (RETURN 105832 . 105838) (punctuation 105826 . 105827) (close-paren 105825 . 105826) (semantic-list 105818 . 105825) (punctuation 105817 . 105818) (symbol 105816 . 105817) (punctuation 105815 . 105816) (symbol 105808 . 105815) (punctuation 105807 . 105808) (punctuation 105806 . 105807) (symbol 105801 . 105806) (open-paren 105800 . 105801) (symbol 105791 . 105800) (punctuation 105790 . 105791) (symbol 105789 . 105790) (punctuation 105738 . 105739) (punctuation 105737 . 105738) (punctuation 105736 . 105737) (symbol 105735 . 105736) (punctuation 105734 . 105735) (symbol 105729 . 105734) (TYPENAME 105720 . 105728) (TYPEDEF 105712 . 105719) (close-paren 105702 . 105703) (symbol 105697 . 105702) (close-paren 105695 . 105696) (symbol 105694 . 105695) (open-paren 105693 . 105694) (symbol 105673 . 105693) (open-paren 105672 . 105673) (symbol 105655 . 105672) (punctuation 105653 . 105654) (symbol 105649 . 105653) (punctuation 105648 . 105649) (punctuation 105647 . 105648) (punctuation 105646 . 105647) (symbol 105645 . 105646) (punctuation 105644 . 105645) (symbol 105639 . 105644) (TYPENAME 105630 . 105638) (punctuation 105629 . 105630) (symbol "unique_future" 105610 . 105629) (punctuation 105606 . 105607) (symbol 105605 . 105606) (TYPENAME 105596 . 105604) (punctuation 105595 . 105596) (TEMPLATE 105586 . 105594) (punctuation 105291 . 105292) (close-paren 105290 . 105291) (semantic-list 105288 . 105290) (symbol 105278 . 105288) (punctuation 105277 . 105278) (symbol 105276 . 105277) (open-paren 105275 . 105276) (symbol 105251 . 105275) (RETURN 105244 . 105250) (punctuation 105238 . 105239) (close-paren 105237 . 105238) (semantic-list 105230 . 105237) (punctuation 105229 . 105230) (symbol 105228 . 105229) (punctuation 105227 . 105228) (symbol 105220 . 105227) (punctuation 105219 . 105220) (punctuation 105218 . 105219) (symbol 105213 . 105218) (open-paren 105212 . 105213) (symbol 105203 . 105212) (punctuation 105202 . 105203) (symbol 105201 . 105202) (punctuation 105150 . 105151) (punctuation 105149 . 105150) (punctuation 105148 . 105149) (symbol 105147 . 105148) (punctuation 105146 . 105147) (symbol 105141 . 105146) (TYPENAME 105132 . 105140) (TYPEDEF 105124 . 105131) (close-paren 105114 . 105115) (symbol 105109 . 105114) (close-paren 105107 . 105108) (symbol 105106 . 105107) (open-paren 105105 . 105106) (symbol 105085 . 105105) (open-paren 105084 . 105085) (symbol 105073 . 105084) (punctuation 105071 . 105072) (symbol 105067 . 105071) (punctuation 105066 . 105067) (punctuation 105065 . 105066) (punctuation 105064 . 105065) (symbol 105063 . 105064) (punctuation 105062 . 105063) (symbol 105057 . 105062) (TYPENAME 105048 . 105056) (punctuation 105047 . 105048) (symbol "unique_future" 105028 . 105047) (punctuation 105024 . 105025) (symbol 105023 . 105024) (TYPENAME 105014 . 105022) (punctuation 105013 . 105014) (TEMPLATE 105004 . 105012) (punctuation 104887 . 104888) (close-paren 104886 . 104887) (semantic-list 104843 . 104886) (symbol 104838 . 104843) (semantic-list 104882 . 104885) (semantic-list 104850 . 104863) (open-paren 104837 . 104838) (symbol 104813 . 104837) (RETURN 104806 . 104812) (close-paren 104790 . 104791) (symbol 104789 . 104790) (close-paren 104787 . 104788) (symbol 104786 . 104787) (open-paren 104785 . 104786) (symbol 104766 . 104785) (open-paren 104765 . 104766) (symbol 104760 . 104765) (punctuation 104754 . 104755) (symbol 104750 . 104754) (punctuation 104749 . 104750) (punctuation 104748 . 104749) (punctuation 104747 . 104748) (close-paren 104746 . 104747) (open-paren 104745 . 104746) (symbol 104744 . 104745) (punctuation 104743 . 104744) (symbol 104734 . 104743) (punctuation 104733 . 104734) (punctuation 104732 . 104733) (symbol 104727 . 104732) (TYPENAME 104718 . 104726) (punctuation 104717 . 104718) (symbol "unique_future" 104698 . 104717) (punctuation 104692 . 104693) (symbol 104691 . 104692) (CLASS 104685 . 104690) (punctuation 104684 . 104685) (TEMPLATE 104675 . 104683) (punctuation 103140 . 103141) (punctuation 103139 . 103140) (RETURN 103132 . 103138) (ELSE 103049 . 103053) (punctuation 102824 . 102825) (punctuation 102823 . 102824) (RETURN 102816 . 102822) (close-paren 102317 . 102318) (semantic-list 102299 . 102317) (INT 102296 . 102299) (punctuation 102294 . 102295) (semantic-list 102285 . 102293) (INT 102282 . 102285) (open-paren 102281 . 102282) (IF 102278 . 102280) (ELSE 102273 . 102277) (punctuation 102229 . 102230) (punctuation 102228 . 102229) (RETURN 102221 . 102227) (punctuation 102191 . 102192) (semantic-list 102172 . 102191) (symbol 102166 . 102172) (semantic-list 102185 . 102189) (punctuation 102165 . 102166) (punctuation 102164 . 102165) (symbol 102159 . 102164) (semantic-list 102185 . 102189) (punctuation 101911 . 101912) (symbol 101908 . 101911) (semantic-list 101834 . 101837) (close-paren 101376 . 101377) (semantic-list 101361 . 101376) (INT 101358 . 101361) (punctuation 101356 . 101357) (semantic-list 101347 . 101355) (INT 101344 . 101347) (open-paren 101343 . 101344) (IF 101340 . 101342) (punctuation 101259 . 101260) (punctuation 101258 . 101259) (punctuation 101257 . 101258) (close-paren 101256 . 101257) (open-paren 101255 . 101256) (symbol 101251 . 101255) (punctuation 101250 . 101251) (punctuation 101249 . 101250) (punctuation 101248 . 101249) (symbol 101247 . 101248) (punctuation 101246 . 101247) (symbol 101241 . 101246) (TYPENAME 101232 . 101240) (punctuation 101231 . 101232) (symbol 101222 . 101231) (punctuation 101221 . 101222) (punctuation 101220 . 101221) (symbol 101215 . 101220) (TYPENAME 101206 . 101214) (TYPEDEF 101198 . 101205) (close-paren 101176 . 101177) (symbol 101175 . 101176) (close-paren 101172 . 101173) (symbol 101171 . 101172) (open-paren 101170 . 101171) (symbol 101150 . 101170) (punctuation 101148 . 101149) (symbol 101142 . 101148) (symbol 101135 . 101141) (open-paren 101134 . 101135) (symbol 101129 . 101134) (punctuation 101119 . 101120) (symbol 101115 . 101119) (punctuation 101114 . 101115) (punctuation 101113 . 101114) (punctuation 101112 . 101113) (close-paren 101111 . 101112) (open-paren 101110 . 101111) (symbol 101106 . 101110) (punctuation 101105 . 101106) (punctuation 101104 . 101105) (punctuation 101103 . 101104) (symbol 101102 . 101103) (punctuation 101101 . 101102) (symbol 101096 . 101101) (TYPENAME 101087 . 101095) (punctuation 101086 . 101087) (symbol 101077 . 101086) (punctuation 101076 . 101077) (punctuation 101075 . 101076) (symbol 101070 . 101075) (TYPENAME 101061 . 101069) (punctuation 101060 . 101061) (symbol "unique_future" 101041 . 101060) (punctuation 101031 . 101032) (symbol 101030 . 101031) (CLASS 101024 . 101029) (punctuation 101023 . 101024) (TEMPLATE 101014 . 101022) (RETURN 97312 . 97318) (semantic-list 97280 . 97303) (NEW 97249 . 97252) (close-paren 97182 . 97183) (symbol 97181 . 97182) (semantic-list 97176 . 97180) (symbol 97156 . 97176) (open-paren 97155 . 97156) (symbol 97131 . 97155) (punctuation 97125 . 97126) (symbol 97123 . 97125) (punctuation 97122 . 97123) (symbol "unique_future" 97103 . 97122) (punctuation 97097 . 97098) (symbol 97095 . 97097) (CLASS 97089 . 97094) (punctuation 97087 . 97088) (symbol 97085 . 97087) (CLASS 97079 . 97084) (punctuation 97078 . 97079) (TEMPLATE 97069 . 97077) (RETURN 96917 . 96923) (semantic-list 96885 . 96908) (NEW 96851 . 96854) (close-paren 96781 . 96782) (symbol 96780 . 96781) (semantic-list 96775 . 96779) (symbol 96755 . 96775) (open-paren 96754 . 96755) (symbol 96727 . 96754) (punctuation 96721 . 96722) (symbol 96719 . 96721) (punctuation 96718 . 96719) (symbol "unique_future" 96699 . 96718) (punctuation 96693 . 96694) (symbol 96691 . 96693) (CLASS 96685 . 96690) (punctuation 96683 . 96684) (symbol 96681 . 96683) (CLASS 96675 . 96680) (punctuation 96674 . 96675) (TEMPLATE 96665 . 96673) (symbol 96539 . 96545) (NAMESPACE 96529 . 96538) (symbol 96495 . 96523) (punctuation 96493 . 96494) (symbol 96492 . 96493) (punctuation 96491 . 96492) (symbol 96478 . 96491) (close-paren 96476 . 96477) (symbol 96475 . 96476) (open-paren 96474 . 96475) (symbol 96446 . 96474) (punctuation 96216 . 96217) (punctuation 96172 . 96173) (punctuation 96171 . 96172) (symbol 96167 . 96171) (close-paren 96143 . 96144) (symbol 96142 . 96143) (symbol 96140 . 96141) (open-paren 96139 . 96140) (symbol 96122 . 96139) (VOID 96117 . 96121) (punctuation 96107 . 96108) (symbol 96106 . 96107) (TYPENAME 96097 . 96105) (punctuation 96096 . 96097) (TEMPLATE 96088 . 96096) (punctuation 96053 . 96054) (punctuation 96052 . 96053) (symbol 96048 . 96052) (semantic-list 96033 . 96035) (semantic-list 95949 . 95968) (IF 95946 . 95948) (semantic-list 95870 . 95935) (semantic-list 95852 . 95859) (IF 95850 . 95852) (close-paren 95828 . 95829) (open-paren 95827 . 95828) (symbol 95802 . 95827) (VOID 95797 . 95801) (punctuation 95771 . 95772) (punctuation 95770 . 95771) (symbol 95766 . 95770) (semantic-list 95684 . 95753) (semantic-list 95664 . 95671) (IF 95662 . 95664) (close-paren 95638 . 95639) (open-paren 95637 . 95638) (close-paren 95636 . 95637) (open-paren 95635 . 95636) (OPERATOR 95627 . 95635) (VOID 95622 . 95626) (semantic-list 94733 . 94816) (ELSE 94716 . 94720) (semantic-list 94597 . 94703) (semantic-list 94566 . 94584) (IF 94564 . 94566) (ELSE 94559 . 94563) (semantic-list 94477 . 94546) (semantic-list 94457 . 94464) (IF 94455 . 94457) (close-paren 94430 . 94431) (open-paren 94429 . 94430) (symbol 94419 . 94429) (punctuation 94417 . 94418) (symbol 94416 . 94417) (punctuation 94415 . 94416) (symbol "unique_future" 94396 . 94415) (punctuation 94347 . 94348) (number 94346 . 94347) (punctuation 94345 . 94346) (punctuation 94344 . 94345) (semantic-list 94342 . 94344) (symbol 94339 . 94342) (punctuation 94338 . 94339) (symbol 94334 . 94338) (RETURN 94327 . 94333) (symbol 94292 . 94306) (CONST 94286 . 94291) (close-paren 94284 . 94285) (open-paren 94283 . 94284) (symbol 94278 . 94283) (BOOL 94273 . 94277) (punctuation 94236 . 94237) (punctuation 94185 . 94186) (punctuation 94174 . 94175) (symbol 94170 . 94174) (symbol 94133 . 94147) (close-paren 94131 . 94132) (symbol 94126 . 94131) (punctuation 94124 . 94125) (symbol 94111 . 94124) (open-paren 94110 . 94111) (symbol 94106 . 94110) (VOID 94101 . 94105) (punctuation 94037 . 94038) (punctuation 94036 . 94037) (symbol 94032 . 94036) (semantic-list 93994 . 94017) (THROW 93952 . 93957) (semantic-list 93925 . 93935) (IF 93922 . 93924) (close-paren 93898 . 93899) (open-paren 93897 . 93898) (symbol 93892 . 93897) (VOID 93887 . 93891) (RETURN 93854 . 93860) (semantic-list 93707 . 93714) (symbol 93559 . 93573) (close-paren 93557 . 93558) (symbol 93552 . 93557) (semantic-list 93536 . 93551) (symbol 93517 . 93536) (open-paren 93516 . 93517) (punctuation 93515 . 93516) (OPERATOR 93507 . 93515) (punctuation 93505 . 93506) (symbol 93492 . 93505) (punctuation 93450 . 93451) (semantic-list 93443 . 93450) (symbol 93428 . 93443) (punctuation 93408 . 93409) (semantic-list 93401 . 93408) (punctuation 93380 . 93381) (symbol 93376 . 93380) (close-paren 93352 . 93353) (symbol 93337 . 93352) (punctuation 93336 . 93337) (semantic-list 93329 . 93336) (symbol 93314 . 93329) (open-paren 93313 . 93314) (symbol 93298 . 93313) (punctuation 93284 . 93285) (symbol 93269 . 93283) (close-paren 93267 . 93268) (symbol 93262 . 93267) (semantic-list 93246 . 93261) (symbol 93227 . 93246) (open-paren 93226 . 93227) (symbol 93213 . 93226) (semantic-list 93115 . 93171) (semantic-list 93096 . 93102) (IF 93094 . 93096) (close-paren 93070 . 93071) (open-paren 93069 . 93070) (symbol 93056 . 93069) (punctuation 93055 . 93056) (punctuation 87394 . 87395) (punctuation 87393 . 87394) (punctuation 87392 . 87393) (symbol 87388 . 87392) (punctuation 87387 . 87388) (punctuation 87386 . 87387) (punctuation 87385 . 87386) (symbol 87384 . 87385) (punctuation 87383 . 87384) (symbol 87367 . 87383) (TYPENAME 87358 . 87366) (punctuation 87357 . 87358) (symbol 87348 . 87357) (TYPENAME 87339 . 87347) (TYPEDEF 87331 . 87338) (close-paren 87309 . 87310) (number 87295 . 87296) (punctuation 87294 . 87295) (symbol 87290 . 87294) (punctuation 87289 . 87290) (punctuation 87288 . 87289) (punctuation 87287 . 87288) (punctuation 87285 . 87286) (symbol 87280 . 87285) (punctuation 87278 . 87279) (punctuation 87277 . 87278) (symbol 87264 . 87277) (punctuation 87262 . 87263) (symbol 87258 . 87262) (punctuation 87257 . 87258) (punctuation 87256 . 87257) (punctuation 87255 . 87256) (symbol 87254 . 87255) (punctuation 87253 . 87254) (symbol 87248 . 87253) (TYPENAME 87239 . 87247) (punctuation 87238 . 87239) (symbol 87231 . 87238) (punctuation 87230 . 87231) (symbol 87220 . 87230) (TYPENAME 87211 . 87219) (punctuation 87209 . 87210) (symbol 87195 . 87196) (semantic-list 87191 . 87194) (symbol 87171 . 87191) (open-paren 87170 . 87171) (symbol 87157 . 87170) (EXPLICIT 87148 . 87156) (punctuation 87138 . 87139) (symbol 87137 . 87138) (CLASS 87131 . 87136) (punctuation 87130 . 87131) (TEMPLATE 87121 . 87129) (close-paren 85951 . 85952) (symbol 85946 . 85951) (open-paren 85945 . 85946) (symbol 85930 . 85945) (punctuation 85916 . 85917) (close-paren 85915 . 85916) (open-paren 85914 . 85915) (symbol 85901 . 85914) (close-paren 85890 . 85891) (symbol 85877 . 85890) (open-paren 85876 . 85877) (symbol 85851 . 85876) (symbol 85602 . 85615) (CLASS 85596 . 85601) (punctuation 85590 . 85591) (symbol 85589 . 85590) (TYPENAME 85580 . 85588) (punctuation 85579 . 85580) (TEMPLATE 85571 . 85579) (punctuation 85003 . 85004) (punctuation 83194 . 83195) (VOID 83190 . 83194) (punctuation 83189 . 83190) (symbol 83180 . 83189) (punctuation 83168 . 83169) (punctuation 83167 . 83168) (VOID 83163 . 83167) (punctuation 83162 . 83163) (close-paren 83161 . 83162) (open-paren 83160 . 83161) (close-paren 83159 . 83160) (punctuation 83158 . 83159) (open-paren 83157 . 83158) (VOID 83152 . 83156) (punctuation 83151 . 83152) (symbol 83140 . 83151) (STRUCT 83133 . 83139) (punctuation 83123 . 83124) (punctuation 83122 . 83123) (TEMPLATE 83114 . 83122) (punctuation 82736 . 82737) (semantic-list 81064 . 81067) (punctuation 80840 . 80841) (VOID 80836 . 80840) (punctuation 80835 . 80836) (symbol 80826 . 80835) (punctuation 80814 . 80815) (punctuation 80813 . 80814) (VOID 80809 . 80813) (punctuation 80808 . 80809) (symbol 80807 . 80808) (punctuation 80806 . 80807) (symbol 80795 . 80806) (STRUCT 80788 . 80794) (punctuation 80778 . 80779) (symbol 80777 . 80778) (TYPENAME 80768 . 80776) (punctuation 80767 . 80768) (TEMPLATE 80759 . 80767) (punctuation 75124 . 75125) (semantic-list 73354 . 73357) (punctuation 73130 . 73131) (punctuation 73129 . 73130) (symbol 73128 . 73129) (punctuation 73127 . 73128) (symbol 73118 . 73127) (punctuation 73104 . 73105) (punctuation 73103 . 73104) (punctuation 73102 . 73103) (symbol 73101 . 73102) (punctuation 73100 . 73101) (symbol 73099 . 73100) (punctuation 73098 . 73099) (symbol 73087 . 73098) (STRUCT 73080 . 73086) (punctuation 73070 . 73071) (symbol 73069 . 73070) (TYPENAME 73060 . 73068) (punctuation 73058 . 73059) (symbol 73057 . 73058) (TYPENAME 73048 . 73056) (punctuation 73047 . 73048) (TEMPLATE 73039 . 73047) (punctuation 72648 . 72649) (semantic-list 70749 . 70752) (symbol 67278 . 67306) (punctuation 67276 . 67277) (symbol 67275 . 67276) (punctuation 67274 . 67275) (symbol 67267 . 67274) (semantic-list 67263 . 67266) (symbol 67235 . 67263) (semantic-list 64770 . 65029) (symbol 64747 . 64761) (semantic-list 64712 . 64746) (punctuation 64711 . 64712) (OPERATOR 64703 . 64711) (semantic-list 64732 . 64741) (punctuation 64701 . 64702) (symbol 64693 . 64700) (semantic-list 64732 . 64741) (punctuation 64403 . 64404) (semantic-list 64398 . 64403) (punctuation 64361 . 64362) (symbol 64346 . 64360) (semantic-list 64311 . 64345) (symbol 64304 . 64311) (semantic-list 64331 . 64340) (semantic-list 63207 . 63216) (symbol 63182 . 63207) (semantic-list 60425 . 60684) (symbol 60402 . 60416) (semantic-list 60367 . 60401) (punctuation 60366 . 60367) (OPERATOR 60358 . 60366) (semantic-list 60387 . 60396) (punctuation 60356 . 60357) (symbol 60348 . 60355) (semantic-list 60387 . 60396) (punctuation 60150 . 60151) (semantic-list 60145 . 60150) (punctuation 60108 . 60109) (symbol 60093 . 60107) (semantic-list 60058 . 60092) (symbol 60051 . 60058) (semantic-list 60078 . 60087) (semantic-list 58959 . 58968) (symbol 58934 . 58959) (semantic-list 57720 . 57723) (semantic-list 55126 . 55385) (symbol 55103 . 55117) (semantic-list 55068 . 55102) (punctuation 55067 . 55068) (OPERATOR 55059 . 55067) (semantic-list 55088 . 55097) (punctuation 55057 . 55058) (symbol 55049 . 55056) (semantic-list 55088 . 55097) (punctuation 54851 . 54852) (semantic-list 54846 . 54851) (punctuation 54809 . 54810) (symbol 54794 . 54808) (semantic-list 54759 . 54793) (symbol 54752 . 54759) (semantic-list 54779 . 54788) (semantic-list 53663 . 53672) (symbol 53638 . 53663) (punctuation 53008 . 53009) (punctuation 52993 . 52994) (symbol 52972 . 52986) (semantic-list 52940 . 52971) (symbol 52928 . 52940) (punctuation 52927 . 52928) (punctuation 52926 . 52927) (punctuation 52925 . 52926) (symbol 52924 . 52925) (punctuation 52923 . 52924) (symbol 52911 . 52923) (INLINE 52904 . 52910) (punctuation 52896 . 52897) (symbol 52895 . 52896) (TYPENAME 52886 . 52894) (punctuation 52885 . 52886) (TEMPLATE 52876 . 52884) (symbol 52764 . 52792) (punctuation 52762 . 52763) (symbol 52761 . 52762) (punctuation 52760 . 52761) (symbol 52747 . 52760) (semantic-list 52743 . 52746) (symbol 52715 . 52743) (semantic-list 52334 . 52401) (symbol 52311 . 52325) (semantic-list 52288 . 52310) (symbol 52284 . 52288) (VOID 52279 . 52283) (semantic-list 51955 . 52269) (symbol 51932 . 51946) (semantic-list 51878 . 51931) (punctuation 51877 . 51878) (OPERATOR 51869 . 51877) (semantic-list 51898 . 51924) (punctuation 51867 . 51868) (symbol 51854 . 51867) (semantic-list 51898 . 51924) (semantic-list 51712 . 51845) (symbol 51689 . 51703) (semantic-list 51646 . 51688) (punctuation 51645 . 51646) (OPERATOR 51637 . 51645) (semantic-list 51666 . 51681) (punctuation 51635 . 51636) (symbol 51622 . 51635) (semantic-list 51666 . 51681) (semantic-list 51542 . 51591) (punctuation 51511 . 51512) (symbol 51496 . 51510) (semantic-list 51442 . 51495) (symbol 51429 . 51442) (semantic-list 51462 . 51488) (semantic-list 51298 . 51347) (punctuation 51267 . 51268) (symbol 51252 . 51266) (semantic-list 51209 . 51251) (symbol 51196 . 51209) (semantic-list 51229 . 51244) (semantic-list 50797 . 50812) (symbol 50777 . 50797) (punctuation 50662 . 50663) (punctuation 50661 . 50662) (symbol 50660 . 50661) (punctuation 50659 . 50660) (punctuation 50467 . 50468) (punctuation 50466 . 50467) (symbol 50465 . 50466) (punctuation 50464 . 50465) (punctuation 50420 . 50421) (punctuation 50419 . 50420) (symbol 50161 . 50189) (punctuation 50159 . 50160) (symbol 50158 . 50159) (punctuation 50157 . 50158) (symbol "unique_future" 50138 . 50157) (semantic-list 50134 . 50137) (symbol 50106 . 50134) (semantic-list 48100 . 48239) (symbol 48077 . 48091) (semantic-list 48028 . 48076) (punctuation 48027 . 48028) (OPERATOR 48019 . 48027) (semantic-list 48048 . 48069) (punctuation 48017 . 48018) (symbol "unique_future" 47998 . 48017) (semantic-list 48048 . 48069) (semantic-list 47918 . 47967) (punctuation 47887 . 47888) (symbol 47873 . 47887) (semantic-list 47824 . 47872) (symbol "unique_future" 47805 . 47824) (semantic-list 47844 . 47865) (semantic-list 47646 . 47667) (symbol 47621 . 47646) (semantic-list 46925 . 46929) (semantic-list 46774 . 46778) (punctuation 46619 . 46620) (punctuation 46618 . 46619) (punctuation 46582 . 46583) (punctuation 46581 . 46582) (symbol 46580 . 46581) (punctuation 46579 . 46580) (punctuation 46113 . 46114) (punctuation 46112 . 46113) (symbol 46111 . 46112) (punctuation 46110 . 46111) (punctuation 46080 . 46081) (punctuation 46079 . 46080) (symbol 46078 . 46079) (punctuation 46077 . 46078) (semantic-list 45301 . 45305) (semantic-list 45165 . 45169) (symbol 44908 . 44936) (punctuation 44906 . 44907) (symbol 44905 . 44906) (punctuation 44904 . 44905) (symbol 44892 . 44904) (punctuation 44891 . 44892) (punctuation 44890 . 44891) (symbol 44884 . 44890) (semantic-list 44880 . 44883) (symbol 44852 . 44880) (semantic-list 43492 . 43536) (symbol 43469 . 43483) (CONST 43463 . 43468) (semantic-list 43460 . 43462) (symbol 43455 . 43460) (BOOL 43450 . 43454) (semantic-list 43323 . 43440) (symbol 43300 . 43314) (CONST 43294 . 43299) (semantic-list 43291 . 43293) (symbol 43278 . 43291) (symbol 43271 . 43277) (semantic-list 43198 . 43261) (symbol 43175 . 43189) (CONST 43169 . 43174) (semantic-list 43166 . 43168) (symbol 43157 . 43166) (BOOL 43152 . 43156) (semantic-list 43075 . 43142) (symbol 43052 . 43066) (CONST 43046 . 43051) (semantic-list 43043 . 43045) (symbol 43030 . 43043) (BOOL 43025 . 43029) (semantic-list 42951 . 43015) (symbol 42928 . 42942) (CONST 42922 . 42927) (semantic-list 42919 . 42921) (symbol 42911 . 42919) (BOOL 42906 . 42910) (semantic-list 42739 . 42896) (symbol 42716 . 42730) (CONST 42710 . 42715) (semantic-list 42707 . 42709) (symbol 42698 . 42707) (symbol 42692 . 42697) (semantic-list 42578 . 42627) (symbol 42555 . 42569) (semantic-list 42534 . 42554) (symbol 42530 . 42534) (VOID 42525 . 42529) (semantic-list 42375 . 42516) (symbol 42352 . 42366) (semantic-list 42310 . 42351) (punctuation 42309 . 42310) (OPERATOR 42301 . 42309) (semantic-list 42330 . 42344) (punctuation 42299 . 42300) (symbol 42287 . 42299) (semantic-list 42330 . 42344) (punctuation 42197 . 42198) (semantic-list 42190 . 42197) (punctuation 42157 . 42158) (symbol 42143 . 42157) (semantic-list 42101 . 42142) (symbol 42089 . 42101) (semantic-list 42121 . 42135) (semantic-list 42001 . 42015) (symbol 41981 . 42001) (semantic-list 41872 . 41897) (symbol 41860 . 41872) (EXPLICIT 41851 . 41859) (semantic-list 33949 . 33953) (EXPLICIT 33897 . 33905) (semantic-list 33243 . 33247) (EXPLICIT 33191 . 33199) (semantic-list 32528 . 32532) (EXPLICIT 32476 . 32484) (semantic-list 31759 . 31763) (semantic-list 31016 . 31020) (EXPLICIT 30967 . 30975) (semantic-list 30251 . 30255) (semantic-list 29935 . 29939) (EXPLICIT 29886 . 29894) (semantic-list 29259 . 29263) (semantic-list 28459 . 28463) (EXPLICIT 28410 . 28418) (punctuation 23208 . 23209) (punctuation 23207 . 23208) (punctuation 23206 . 23207) (punctuation 23205 . 23206) (symbol 23204 . 23205) (punctuation 23203 . 23204) (symbol 23190 . 23203) (TYPENAME 23181 . 23189) (TYPEDEF 23173 . 23180) (punctuation 23129 . 23130) (punctuation 23128 . 23129) (punctuation 23127 . 23128) (punctuation 23126 . 23127) (symbol 23125 . 23126) (punctuation 23124 . 23125) (symbol 23111 . 23124) (TYPENAME 23102 . 23110) (TYPEDEF 23094 . 23101) (punctuation 22947 . 22948) (punctuation 22946 . 22947) (punctuation 22945 . 22946) (punctuation 22944 . 22945) (symbol 22943 . 22944) (punctuation 22942 . 22943) (symbol 22929 . 22942) (TYPENAME 22920 . 22928) (TYPEDEF 22912 . 22919) (punctuation 22872 . 22873) (punctuation 22871 . 22872) (punctuation 22870 . 22871) (punctuation 22869 . 22870) (symbol 22868 . 22869) (punctuation 22867 . 22868) (symbol 22854 . 22867) (TYPENAME 22845 . 22853) (TYPEDEF 22837 . 22844) (punctuation 19138 . 19139) (punctuation 19137 . 19138) (punctuation 19136 . 19137) (symbol 19135 . 19136) (punctuation 19134 . 19135) (symbol 19121 . 19134) (TYPENAME 19112 . 19120) (TYPEDEF 19104 . 19111) (punctuation 19060 . 19061) (punctuation 19059 . 19060) (punctuation 19058 . 19059) (symbol 19057 . 19058) (punctuation 19056 . 19057) (symbol 19043 . 19056) (TYPENAME 19034 . 19042) (TYPEDEF 19026 . 19033) (punctuation 18974 . 18975) (punctuation 18973 . 18974) (punctuation 18972 . 18973) (symbol 18971 . 18972) (punctuation 18970 . 18971) (symbol 18957 . 18970) (TYPENAME 18948 . 18956) (TYPEDEF 18940 . 18947) (punctuation 18882 . 18883) (punctuation 18881 . 18882) (punctuation 18880 . 18881) (symbol 18879 . 18880) (punctuation 18878 . 18879) (symbol 18865 . 18878) (TYPENAME 18856 . 18864) (TYPEDEF 18848 . 18855) (punctuation 18808 . 18809) (punctuation 18807 . 18808) (punctuation 18806 . 18807) (symbol 18805 . 18806) (punctuation 18804 . 18805) (symbol 18791 . 18804) (TYPENAME 18782 . 18790) (TYPEDEF 18774 . 18781) (TYPEDEF 17890 . 17897) (TYPEDEF 17851 . 17858) (TYPEDEF 17747 . 17754) (TYPEDEF 17010 . 17017) (punctuation 16967 . 16968) (punctuation 16966 . 16967) (punctuation 16965 . 16966) (symbol 16964 . 16965) (punctuation 16963 . 16964) (semantic-list 16960 . 16963) (symbol 16941 . 16960) (punctuation 16940 . 16941) (punctuation 16939 . 16940) (semantic-list 16935 . 16938) (symbol 16916 . 16935) (punctuation 16915 . 16916) (punctuation 16914 . 16915) (symbol 16913 . 16914) (punctuation 16912 . 16913) (symbol 16898 . 16912) (punctuation 16897 . 16898) (punctuation 16896 . 16897) (symbol 16883 . 16896) (punctuation 16882 . 16883) (punctuation 16881 . 16882) (symbol 16876 . 16881) (punctuation 16875 . 16876) (symbol 16872 . 16875) (punctuation 16871 . 16872) (punctuation 16870 . 16871) (symbol 16867 . 16870) (punctuation 16866 . 16867) (punctuation 16865 . 16866) (symbol 16860 . 16865) (TYPENAME 16851 . 16859) (TYPEDEF 16843 . 16850) (punctuation 16807 . 16808) (punctuation 16806 . 16807) (punctuation 16805 . 16806) (punctuation 16804 . 16805) (CONST 16799 . 16804) (symbol 16797 . 16798) (punctuation 16796 . 16797) (semantic-list 16793 . 16796) (symbol 16774 . 16793) (punctuation 16773 . 16774) (punctuation 16772 . 16773) (semantic-list 16768 . 16771) (symbol 16749 . 16768) (punctuation 16748 . 16749) (punctuation 16747 . 16748) (symbol 16746 . 16747) (punctuation 16745 . 16746) (symbol 16731 . 16745) (punctuation 16730 . 16731) (punctuation 16729 . 16730) (symbol 16716 . 16729) (punctuation 16715 . 16716) (punctuation 16714 . 16715) (symbol 16709 . 16714) (punctuation 16708 . 16709) (symbol 16705 . 16708) (punctuation 16704 . 16705) (punctuation 16703 . 16704) (symbol 16700 . 16703) (punctuation 16699 . 16700) (punctuation 16698 . 16699) (symbol 16693 . 16698) (TYPENAME 16684 . 16692) (TYPEDEF 16676 . 16683) (TYPEDEF 16632 . 16639) (semantic-list 15922 . 15925) (symbol 15903 . 15922) (TYPEDEF 15895 . 15902) (TYPEDEF 15718 . 15725) (semantic-list 15009 . 15056) (symbol 14982 . 14996) (CONST 14976 . 14981) (semantic-list 14973 . 14975) (symbol 14960 . 14973) (symbol 14953 . 14959) (semantic-list 14887 . 14939) (symbol 14872 . 14886) (CONST 14866 . 14871) (semantic-list 14862 . 14864) (symbol 14851 . 14862) (BOOL 14846 . 14850) (punctuation 5914 . 5915) (semantic-list 5912 . 5914) (VOID 5908 . 5912) (punctuation 5907 . 5908) (symbol 5899 . 5907) (punctuation 5898 . 5899) (punctuation 5897 . 5898) (symbol 5892 . 5897) (PUBLIC 3966 . 3972) (punctuation 3952 . 3953) (symbol 3942 . 3952) (symbol 3921 . 3941) (CLASS 3915 . 3920) (PUBLIC 3732 . 3738) (punctuation 3722 . 3723) (symbol 3702 . 3722) (symbol 3681 . 3701) (CLASS 3675 . 3680) (PUBLIC 3489 . 3495) (punctuation 3479 . 3480) (symbol 3454 . 3479) (symbol 3433 . 3453) (CLASS 3427 . 3432) (PUBLIC 3244 . 3250) (punctuation 3234 . 3235) (symbol 3210 . 3234) (symbol 3189 . 3209) (CLASS 3183 . 3188) (PUBLIC 3020 . 3026) (punctuation 3010 . 3011) (symbol 2996 . 3010) (symbol 2975 . 2995) (CLASS 2969 . 2974) (PUBLIC 2805 . 2811) (punctuation 2795 . 2796) (symbol 2775 . 2795) (symbol 2754 . 2774) (CLASS 2748 . 2753) (PUBLIC 2464 . 2470) (punctuation 2462 . 2463) (symbol 2443 . 2455) (symbol 2422 . 2442) (CLASS 2416 . 2421) (semantic-list 2397 . 2412) (symbol 2368 . 2397) (semantic-list 2227 . 2235) (symbol 2198 . 2227))
      :lexical-table 
        '(("BOOST_THREAD_FUTURE_HPP")
          ("BOOST_THREAD_FUTURE" . ((symbol "unique_future" 2001 . 2014)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_THREAD_ONLY_HPP" variable (:constant-flag t) nil [46 74])
            ("boost/thread/detail/platform.hpp" include (:system-flag t) nil [305 348])
            ("boost/thread/detail/thread.hpp" include (:system-flag t) nil [596 637])
            ("boost/thread/v2/thread.hpp" include (:system-flag t) nil [748 785]))          
      :file "thread_only.hpp"
      :pointmax 795
      :fsize 794
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((string 543 . 587) (symbol 537 . 542) (punctuation 536 . 537))
      :lexical-table 
        '(("BOOST_THREAD_THREAD_ONLY_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_LOCKABLE_TRAITS_HPP" variable (:constant-flag t) nil [298 330])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [332 373])
            ("boost/assert.hpp" include (:system-flag t) nil [375 402])
            ("boost/detail/workaround.hpp" include (:system-flag t) nil [403 441])
            ("boost/type_traits/is_class.hpp" include (:system-flag t) nil [442 483])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [485 523])
            ("boost" type
               (:members 
                  ( ("sync" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("BOOST_THREAD_DEFINE_HAS_MEMBER_CALLED" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1008 1045])
                                    ("has_member_called_lock" type
                                       (:members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [3400 3443])
                                    ("has_member_called_lock" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("true_type" type
                                               (:typedef ("char")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) nil)
                                            ("false_type" type
                                               (:members 
                                                  ( ("dummy" variable
                                                       (:dereference 1
                                                        :type ("true_type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) nil))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("fallback" type
                                               (:members 
                                                  ( ("lock" variable (:type "int") (reparse-symbol classsubparts) nil))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("derived" type
                                               (:superclasses 
                                                  ( ("T" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil)
                                                    ("fallback" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  
                                                :members 
                                                  ( ("derived" function
                                                       (:prototype-flag t
                                                        :constructor-flag t
                                                        :type ("derived" type (:type "struct") nil nil))
                                                        (reparse-symbol classsubparts) nil))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("tester" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("false_type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :type ("tester" type
                                                             (:template-specifier (("U::lock"))
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) nil)
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("true_type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) nil))                                                  
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) nil)
                                            ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3400 3445])
                                    ("has_member_called_unlock" type
                                       (:members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [3451 3496])
                                    ("has_member_called_unlock" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("true_type" type
                                               (:typedef ("char")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) nil)
                                            ("false_type" type
                                               (:members 
                                                  ( ("dummy" variable
                                                       (:dereference 1
                                                        :type ("true_type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) nil))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("fallback" type
                                               (:members 
                                                  ( ("unlock" variable (:type "int") (reparse-symbol classsubparts) nil))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("derived" type
                                               (:superclasses 
                                                  ( ("T" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil)
                                                    ("fallback" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  
                                                :members 
                                                  ( ("derived" function
                                                       (:prototype-flag t
                                                        :constructor-flag t
                                                        :type ("derived" type (:type "struct") nil nil))
                                                        (reparse-symbol classsubparts) nil))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("tester" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("false_type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :type ("tester" type
                                                             (:template-specifier (("U::unlock"))
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) nil)
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("true_type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) nil))                                                  
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) nil)
                                            ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3451 3497])
                                    ("has_member_called_try_lock" type
                                       (:members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [3504 3551])
                                    ("has_member_called_try_lock" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("true_type" type
                                               (:typedef ("char")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) nil)
                                            ("false_type" type
                                               (:members 
                                                  ( ("dummy" variable
                                                       (:dereference 1
                                                        :type ("true_type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) nil))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("fallback" type
                                               (:members 
                                                  ( ("try_lock" variable (:type "int") (reparse-symbol classsubparts) nil))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("derived" type
                                               (:superclasses 
                                                  ( ("T" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil)
                                                    ("fallback" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  
                                                :members 
                                                  ( ("derived" function
                                                       (:prototype-flag t
                                                        :constructor-flag t
                                                        :type ("derived" type (:type "struct") nil nil))
                                                        (reparse-symbol classsubparts) nil))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("tester" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol classsubparts) nil)
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("false_type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :type ("tester" type
                                                             (:template-specifier (("U::try_lock"))
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) nil)
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("true_type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) nil))                                                  
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) nil)
                                            ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3504 3552])
                                    ("has_member_lock" type
                                       (:members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3687 3692])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3693 3704]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [3665 3706]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [3626 3715])
                                    ("has_member_lock" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("true_type" type
                                               (:typedef ("char")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3797 3820])
                                            ("false_type" type
                                               (:members 
                                                  ( ("dummy" variable
                                                       (:dereference 1
                                                        :type ("true_type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [3867 3886]))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) [3829 3897])
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil)
                                                    ("V" type (:type "class") nil nil))                                                  
                                                :type ("true_type" type (:type "class") nil nil)
                                                :arguments ((nil variable (:type ("V" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3975 3986]))
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) [3907 3987])
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("false_type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4054 4056]))                                                  
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) [3996 4057])
                                            ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [4102 4107])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4107 4113]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [4067 4182]))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3723 4191])
                                    ("has_member_unlock" type
                                       (:members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [4330 4335])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4336 4347]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [4308 4349]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [4267 4358])
                                    ("has_member_unlock" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("true_type" type
                                               (:typedef ("char")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [4442 4465])
                                            ("false_type" type
                                               (:members 
                                                  ( ("dummy" variable
                                                       (:dereference 1
                                                        :type ("true_type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [4512 4531]))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) [4474 4542])
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil)
                                                    ("V" type (:type "class") nil nil))                                                  
                                                :type ("true_type" type (:type "class") nil nil)
                                                :arguments ((nil variable (:type ("V" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4620 4631]))
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) [4552 4632])
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("false_type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4699 4701]))                                                  
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) [4641 4702])
                                            ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [4747 4752])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4752 4758]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [4712 4831]))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4366 4840])
                                    ("has_member_try_lock" type
                                       (:members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [4983 4988])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4989 5000]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [4961 5002]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [4918 5011])
                                    ("has_member_try_lock" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("true_type" type
                                               (:typedef ("char")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5097 5120])
                                            ("false_type" type
                                               (:members 
                                                  ( ("dummy" variable
                                                       (:dereference 1
                                                        :type ("true_type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [5167 5186]))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) [5129 5197])
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("true_type" type (:type "class") nil nil)
                                                :arguments ((nil variable (:type "bool") (reparse-symbol arg-sub-list) [5264 5278]))
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) [5207 5279])
                                            ("has_member" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("false_type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5346 5348]))                                                  
                                                :typemodifiers ("static")
                                                :prototype-flag t)
                                                (reparse-symbol classsubparts) [5288 5349])
                                            ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [5394 5399])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5399 5405]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [5359 5482]))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5019 5491]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [977 5498])
                            ("is_basic_lockable" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [5588 5593])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5594 5608])
                                            ("" variable (:type ("has_member_lock" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [5610 5629])
                                            ("" variable
                                               (:reference 1
                                                :type ("value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5630 5638])
                                            ("" variable (:type ("detail::has_member_unlock::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5649 5685]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [5566 5686]))                                  )
                                (reparse-symbol namespacesubparts) [5504 5693])
                            ("is_lockable" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [5776 5781])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5782 5817])
                                            ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5818 5820])
                                            ("" variable
                                               (:reference 1
                                                :type ("value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5822 5830])
                                            ("" variable (:type ("detail::has_member_try_lock::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5841 5879]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [5754 5880]))                                  )
                                (reparse-symbol namespacesubparts) [5698 5887])
                            ("is_recursive_mutex_sur_parole" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [6231 6236])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6237 6250]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [6209 6252]))                                  )
                                (reparse-symbol namespacesubparts) [6135 6259])
                            ("is_recursive_mutex_sur_parolle" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_recursive_mutex_sur_parole" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [6264 6374])
                            ("is_recursive_basic_lockable" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [6474 6479])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6480 6505])
                                            ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6506 6508])
                                            ("" variable
                                               (:reference 1
                                                :type ("value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6510 6518])
                                            ("" variable (:type ("is_recursive_mutex_sur_parolle" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [6529 6563])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6564 6570]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [6452 6571]))                                  )
                                (reparse-symbol namespacesubparts) [6380 6578])
                            ("is_recursive_lockable" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [6671 6676])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6677 6696])
                                            ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6697 6699])
                                            ("" variable
                                               (:reference 1
                                                :type ("value" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6701 6709])
                                            ("" variable (:type ("is_recursive_mutex_sur_parolle" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [6720 6754])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6755 6761]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [6649 6762]))                                  )
                                (reparse-symbol namespacesubparts) [6583 6769]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [610 6773])
                    ("is_mutex_type" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("BOOST_STATIC_CONSTANT" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [6850 6855])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6856 6868])
                                    ("" variable (:type ("is_lockable" type
                                         (:template-specifier 
                                            ( ("T" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [6870 6885])
                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6886 6892]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [6828 6893]))                          )
                        (reparse-symbol namespacesubparts) [6776 6898]))                  
                :type "namespace")
                nil [590 6901])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [6902 6940]))          
      :file "lockable_traits.hpp"
      :pointmax 6949
      :fsize 6948
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((punctuation 6885 . 6886) (punctuation 6884 . 6885) (punctuation 6869 . 6870) (punctuation 6868 . 6869) (punctuation 6754 . 6755) (punctuation 6753 . 6754) (punctuation 6708 . 6709) (punctuation 6700 . 6701) (punctuation 6699 . 6700) (punctuation 6698 . 6699) (punctuation 6696 . 6697) (punctuation 6563 . 6564) (punctuation 6562 . 6563) (punctuation 6517 . 6518) (punctuation 6509 . 6510) (punctuation 6508 . 6509) (punctuation 6507 . 6508) (punctuation 6505 . 6506) (punctuation 5829 . 5830) (punctuation 5821 . 5822) (punctuation 5820 . 5821) (punctuation 5819 . 5820) (punctuation 5817 . 5818) (punctuation 5637 . 5638) (punctuation 5629 . 5630) (punctuation 5628 . 5629) (punctuation 5609 . 5610) (punctuation 5608 . 5609) (semantic-list 5469 . 5480) (SIZEOF 5463 . 5469) (punctuation 5462 . 5463) (punctuation 5461 . 5462) (semantic-list 5411 . 5461) (SIZEOF 5405 . 5411) (punctuation 5404 . 5405) (punctuation 4910 . 4911) (symbol 4904 . 4909) (punctuation 4903 . 4904) (punctuation 4902 . 4903) (punctuation 4901 . 4902) (symbol 4900 . 4901) (punctuation 4899 . 4900) (symbol 4873 . 4899) (punctuation 4872 . 4873) (BOOL 4868 . 4872) (punctuation 4867 . 4868) (symbol 4866 . 4867) (TYPENAME 4857 . 4865) (punctuation 4856 . 4857) (TEMPLATE 4848 . 4856) (semantic-list 4818 . 4829) (SIZEOF 4812 . 4818) (punctuation 4811 . 4812) (punctuation 4810 . 4811) (semantic-list 4764 . 4810) (SIZEOF 4758 . 4764) (punctuation 4757 . 4758) (punctuation 4259 . 4260) (symbol 4253 . 4258) (punctuation 4252 . 4253) (punctuation 4251 . 4252) (punctuation 4250 . 4251) (symbol 4249 . 4250) (punctuation 4248 . 4249) (symbol 4224 . 4248) (punctuation 4223 . 4224) (BOOL 4219 . 4223) (punctuation 4218 . 4219) (symbol 4217 . 4218) (TYPENAME 4208 . 4216) (punctuation 4207 . 4208) (TEMPLATE 4199 . 4207) (semantic-list 4169 . 4180) (SIZEOF 4163 . 4169) (punctuation 4162 . 4163) (punctuation 4161 . 4162) (semantic-list 4119 . 4161) (SIZEOF 4113 . 4119) (punctuation 4112 . 4113) (punctuation 3618 . 3619) (symbol 3612 . 3617) (punctuation 3611 . 3612) (punctuation 3610 . 3611) (punctuation 3609 . 3610) (symbol 3608 . 3609) (punctuation 3607 . 3608) (symbol 3585 . 3607) (punctuation 3584 . 3585) (BOOL 3580 . 3584) (punctuation 3579 . 3580) (symbol 3578 . 3579) (TYPENAME 3569 . 3577) (punctuation 3568 . 3569) (TEMPLATE 3560 . 3568) (punctuation ">" 3504 . 3551) (symbol "value" 3504 . 3551) (punctuation ":" 3504 . 3551) (punctuation ":" 3504 . 3551) (punctuation ">" 3504 . 3551) (symbol "T" 3504 . 3551) (punctuation "<" 3504 . 3551) (symbol "is_class" 3504 . 3551) (punctuation ":" 3504 . 3551) (punctuation ":" 3504 . 3551) (symbol "boost" 3504 . 3551) (punctuation "=" 3504 . 3551) (BOOL "bool" 3504 . 3551) (punctuation "," 3504 . 3551) (symbol "T" 3504 . 3551) (TYPENAME "typename" 3504 . 3551) (punctuation "<" 3504 . 3551) (TEMPLATE "template" 3504 . 3551) (punctuation ">" 3451 . 3496) (symbol "value" 3451 . 3496) (punctuation ":" 3451 . 3496) (punctuation ":" 3451 . 3496) (punctuation ">" 3451 . 3496) (symbol "T" 3451 . 3496) (punctuation "<" 3451 . 3496) (symbol "is_class" 3451 . 3496) (punctuation ":" 3451 . 3496) (punctuation ":" 3451 . 3496) (symbol "boost" 3451 . 3496) (punctuation "=" 3451 . 3496) (BOOL "bool" 3451 . 3496) (punctuation "," 3451 . 3496) (symbol "T" 3451 . 3496) (TYPENAME "typename" 3451 . 3496) (punctuation "<" 3451 . 3496) (TEMPLATE "template" 3451 . 3496) (punctuation ">" 3400 . 3443) (symbol "value" 3400 . 3443) (punctuation ":" 3400 . 3443) (punctuation ":" 3400 . 3443) (punctuation ">" 3400 . 3443) (symbol "T" 3400 . 3443) (punctuation "<" 3400 . 3443) (symbol "is_class" 3400 . 3443) (punctuation ":" 3400 . 3443) (punctuation ":" 3400 . 3443) (symbol "boost" 3400 . 3443) (punctuation "=" 3400 . 3443) (BOOL "bool" 3400 . 3443) (punctuation "," 3400 . 3443) (symbol "T" 3400 . 3443) (TYPENAME "typename" 3400 . 3443) (punctuation "<" 3400 . 3443) (TEMPLATE "template" 3400 . 3443))
      :lexical-table 
        '(("BOOST_THREAD_LOCKABLE_TRAITS_HPP")
          ("BOOST_THREAD_DEFINE_HAS_MEMBER_CALLED" (spp-arg-list ("member_name") 1045 . 1058) . 
              ((TEMPLATE "template" 1089 . 1097) (punctuation "<" 1097 . 1098) (TYPENAME "typename" 1098 . 1106) (symbol "T" 1107 . 1108) (punctuation "," 1108 . 1109) (BOOL "bool" 1110 . 1114) (punctuation "=" 1114 . 1115) (symbol "boost" 1115 . 1120) (punctuation ":" 1120 . 1121) (punctuation ":" 1121 . 1122) (symbol "is_class" 1122 . 1130) (punctuation "<" 1130 . 1131) (symbol "T" 1131 . 1132) (punctuation ">" 1132 . 1133) (punctuation ":" 1133 . 1134) (punctuation ":" 1134 . 1135) (symbol "value" 1135 . 1140) (punctuation ">" 1140 . 1141) (STRUCT "struct" 1163 . 1169) (spp-symbol-merge ((symbol "has_member_called_" 1170 . 1188) (symbol "member_name" 1190 . 1201)) 1170 . 1201) (semantic-list "{                                                               \\
            BOOST_STATIC_CONSTANT(bool, value=false);                   \\
        }" 1237 . 1386) (punctuation ";" 1386 . 1387) (TEMPLATE "template" 1533 . 1541) (punctuation "<" 1541 . 1542) (TYPENAME "typename" 1542 . 1550) (symbol "T" 1551 . 1552) (punctuation ">" 1552 . 1553) (STRUCT "struct" 1607 . 1613) (spp-symbol-merge ((symbol "has_member_called_" 1614 . 1632) (symbol "member_name" 1634 . 1645)) 1614 . 1645) (punctuation "<" 1645 . 1646) (symbol "T" 1646 . 1647) (punctuation "," 1647 . 1648) (symbol "true" 1648 . 1652) (punctuation ">" 1652 . 1653) (semantic-list "{                                                               \\
            typedef char true_type;                                     \\
            struct false_type                                           \\
            {                                                           \\
                true_type dummy[2];                                     \\
            };                                                          \\
                                                                        \\
            struct fallback { int member_name; };                       \\
            struct derived:                                             \\
                T, fallback                                             \\
            {                                                           \\
                derived();                                              \\
            };                                                          \\
                                                                        \\
            template<int fallback::*> struct tester;                    \\
                                                                        \\
            template<typename U>                                        \\
                static false_type has_member(tester<&U::member_name>*); \\
            template<typename U>                                        \\
                static true_type has_member(...);                       \\
                                                                        \\
            BOOST_STATIC_CONSTANT(                                      \\
                bool, value=sizeof(has_member<derived>(0))==sizeof(true_type)); \\
        }" 1681 . 3392)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_LOCK_ALGORITHMS_HPP" variable (:constant-flag t) nil [298 330])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [332 373])
            ("boost/thread/lock_types.hpp" include (:system-flag t) nil [374 412])
            ("boost/thread/lockable_traits.hpp" include (:system-flag t) nil [413 456])
            ("algorithm" include (:system-flag t) nil [458 478])
            ("iterator" include (:system-flag t) nil [479 498])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [500 538])
            ("boost" type
               (:members 
                  ( ("detail" type
                       (:members 
                          ( ("try_lock_internal" function
                               (:template 
                                  ( ("MutexType1" type (:type "class") nil nil)
                                    ("MutexType2" type (:type "class") nil nil))                                  
                                :type "unsigned int"
                                :arguments 
                                  ( ("m1" variable
                                       (:reference 1
                                        :type ("MutexType1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [668 683])
                                    ("m2" variable
                                       (:reference 1
                                        :type ("MutexType2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [684 699]))                                  )
                                (reparse-symbol namespacesubparts) [585 921])
                            ("try_lock_internal" function
                               (:template 
                                  ( ("MutexType1" type (:type "class") nil nil)
                                    ("MutexType2" type (:type "class") nil nil)
                                    ("MutexType3" type (:type "class") nil nil))                                  
                                :type "unsigned int"
                                :arguments 
                                  ( ("m1" variable
                                       (:reference 1
                                        :type ("MutexType1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1031 1046])
                                    ("m2" variable
                                       (:reference 1
                                        :type ("MutexType2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1047 1062])
                                    ("m3" variable
                                       (:reference 1
                                        :type ("MutexType3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1063 1078]))                                  )
                                (reparse-symbol namespacesubparts) [927 1351])
                            ("try_lock_internal" function
                               (:template 
                                  ( ("MutexType1" type (:type "class") nil nil)
                                    ("MutexType2" type (:type "class") nil nil)
                                    ("MutexType3" type (:type "class") nil nil)
                                    ("MutexType4" type (:type "class") nil nil))                                  
                                :type "unsigned int"
                                :arguments 
                                  ( ("m1" variable
                                       (:reference 1
                                        :type ("MutexType1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1482 1497])
                                    ("m2" variable
                                       (:reference 1
                                        :type ("MutexType2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1498 1513])
                                    ("m3" variable
                                       (:reference 1
                                        :type ("MutexType3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1514 1529])
                                    ("m4" variable
                                       (:reference 1
                                        :type ("MutexType4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1530 1545]))                                  )
                                (reparse-symbol namespacesubparts) [1357 1821])
                            ("try_lock_internal" function
                               (:template 
                                  ( ("MutexType1" type (:type "class") nil nil)
                                    ("MutexType2" type (:type "class") nil nil)
                                    ("MutexType3" type (:type "class") nil nil)
                                    ("MutexType4" type (:type "class") nil nil)
                                    ("MutexType5" type (:type "class") nil nil))                                  
                                :type "unsigned int"
                                :arguments 
                                  ( ("m1" variable
                                       (:reference 1
                                        :type ("MutexType1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1973 1988])
                                    ("m2" variable
                                       (:reference 1
                                        :type ("MutexType2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1989 2004])
                                    ("m3" variable
                                       (:reference 1
                                        :type ("MutexType3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2005 2020])
                                    ("m4" variable
                                       (:reference 1
                                        :type ("MutexType4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2021 2036])
                                    ("m5" variable
                                       (:reference 1
                                        :type ("MutexType5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2037 2052]))                                  )
                                (reparse-symbol namespacesubparts) [1827 2331])
                            ("lock_helper" function
                               (:template 
                                  ( ("MutexType1" type (:type "class") nil nil)
                                    ("MutexType2" type (:type "class") nil nil))                                  
                                :type "unsigned int"
                                :arguments 
                                  ( ("m1" variable
                                       (:reference 1
                                        :type ("MutexType1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2414 2429])
                                    ("m2" variable
                                       (:reference 1
                                        :type ("MutexType2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2430 2445]))                                  )
                                (reparse-symbol namespacesubparts) [2337 2598])
                            ("lock_helper" function
                               (:template 
                                  ( ("MutexType1" type (:type "class") nil nil)
                                    ("MutexType2" type (:type "class") nil nil)
                                    ("MutexType3" type (:type "class") nil nil))                                  
                                :type "unsigned int"
                                :arguments 
                                  ( ("m1" variable
                                       (:reference 1
                                        :type ("MutexType1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2702 2717])
                                    ("m2" variable
                                       (:reference 1
                                        :type ("MutexType2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2718 2733])
                                    ("m3" variable
                                       (:reference 1
                                        :type ("MutexType3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2734 2749]))                                  )
                                (reparse-symbol namespacesubparts) [2604 2949])
                            ("lock_helper" function
                               (:template 
                                  ( ("MutexType1" type (:type "class") nil nil)
                                    ("MutexType2" type (:type "class") nil nil)
                                    ("MutexType3" type (:type "class") nil nil)
                                    ("MutexType4" type (:type "class") nil nil))                                  
                                :type "unsigned int"
                                :arguments 
                                  ( ("m1" variable
                                       (:reference 1
                                        :type ("MutexType1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3074 3089])
                                    ("m2" variable
                                       (:reference 1
                                        :type ("MutexType2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3090 3105])
                                    ("m3" variable
                                       (:reference 1
                                        :type ("MutexType3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3106 3121])
                                    ("m4" variable
                                       (:reference 1
                                        :type ("MutexType4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3122 3137]))                                  )
                                (reparse-symbol namespacesubparts) [2955 3340])
                            ("lock_helper" function
                               (:template 
                                  ( ("MutexType1" type (:type "class") nil nil)
                                    ("MutexType2" type (:type "class") nil nil)
                                    ("MutexType3" type (:type "class") nil nil)
                                    ("MutexType4" type (:type "class") nil nil)
                                    ("MutexType5" type (:type "class") nil nil))                                  
                                :type "unsigned int"
                                :arguments 
                                  ( ("m1" variable
                                       (:reference 1
                                        :type ("MutexType1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3486 3501])
                                    ("m2" variable
                                       (:reference 1
                                        :type ("MutexType2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3502 3517])
                                    ("m3" variable
                                       (:reference 1
                                        :type ("MutexType3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3518 3533])
                                    ("m4" variable
                                       (:reference 1
                                        :type ("MutexType4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3534 3549])
                                    ("m5" variable
                                       (:reference 1
                                        :type ("MutexType5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3550 3565]))                                  )
                                (reparse-symbol namespacesubparts) [3346 3771]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [560 3775])
                    ("detail" type
                       (:members 
                          ( ("is_mutex_type_wrapper" type
                               (:template 
                                  ( ("bool" type (:typevar "x") nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3804 3867])
                            ("lock_impl" function
                               (:template 
                                  ( ("MutexType1" type (:type "class") nil nil)
                                    ("MutexType2" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("m1" variable
                                       (:reference 1
                                        :type ("MutexType1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3944 3959])
                                    ("m2" variable
                                       (:reference 1
                                        :type ("MutexType2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3960 3975])
                                    ("" variable (:type ("is_mutex_type_wrapper" type
                                         (:template-specifier 
                                            ( ("true" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [3976 4005]))                                  )
                                (reparse-symbol namespacesubparts) [3873 4458])
                            ("lock_impl" function
                               (:template 
                                  ( ("Iterator" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("begin" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4512 4527])
                                    ("end" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4528 4541])
                                    ("" variable (:type ("is_mutex_type_wrapper" type
                                         (:template-specifier 
                                            ( ("false" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [4542 4572]))                                  
                                :prototype-flag t)
                                (reparse-symbol namespacesubparts) [4464 4573]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [3779 4577])
                    ("lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4645 4660])
                            ("m2" variable
                               (:reference 1
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4661 4676]))                          )
                        (reparse-symbol namespacesubparts) [4581 4782])
                    ("lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4850 4871])
                            ("m2" variable
                               (:reference 1
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4872 4887]))                          )
                        (reparse-symbol namespacesubparts) [4786 4993])
                    ("lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5061 5076])
                            ("m2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5077 5098]))                          )
                        (reparse-symbol namespacesubparts) [4997 5204])
                    ("lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5272 5293])
                            ("m2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5294 5315]))                          )
                        (reparse-symbol namespacesubparts) [5208 5421])
                    ("lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil)
                            ("MutexType3" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5510 5525])
                            ("m2" variable
                               (:reference 1
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5526 5541])
                            ("m3" variable
                               (:reference 1
                                :type ("MutexType3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5542 5557]))                          )
                        (reparse-symbol namespacesubparts) [5425 6148])
                    ("lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil)
                            ("MutexType3" type (:type "class") nil nil)
                            ("MutexType4" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6258 6273])
                            ("m2" variable
                               (:reference 1
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6274 6289])
                            ("m3" variable
                               (:reference 1
                                :type ("MutexType3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6290 6305])
                            ("m4" variable
                               (:reference 1
                                :type ("MutexType4" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6306 6321]))                          )
                        (reparse-symbol namespacesubparts) [6152 7096])
                    ("lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil)
                            ("MutexType3" type (:type "class") nil nil)
                            ("MutexType4" type (:type "class") nil nil)
                            ("MutexType5" type (:type "class") nil nil))                          
                        :type "void"
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7227 7242])
                            ("m2" variable
                               (:reference 1
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7243 7258])
                            ("m3" variable
                               (:reference 1
                                :type ("MutexType3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7259 7274])
                            ("m4" variable
                               (:reference 1
                                :type ("MutexType4" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7275 7290])
                            ("m5" variable
                               (:reference 1
                                :type ("MutexType5" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7291 7306]))                          )
                        (reparse-symbol namespacesubparts) [7100 8273])
                    ("detail" type
                       (:members 
                          ( ("try_lock_impl_return" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("int")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8410 8427]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [8370 8434])
                            ("try_lock_impl_return" type
                               (:template 
                                  ( ("Iterator" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("Iterator" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8530 8552]))                                  
                                :template-specifier 
                                  ( ("Iterator" type nil nil nil)
                                    ("false" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8440 8559])
                            ("try_lock_impl" function
                               (:template 
                                  ( ("MutexType1" type (:type "class") nil nil)
                                    ("MutexType2" type (:type "class") nil nil))                                  
                                :type "int"
                                :arguments 
                                  ( ("m1" variable
                                       (:reference 1
                                        :type ("MutexType1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8639 8654])
                                    ("m2" variable
                                       (:reference 1
                                        :type ("MutexType2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8655 8670])
                                    ("" variable (:type ("is_mutex_type_wrapper" type
                                         (:template-specifier 
                                            ( ("true" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [8671 8700]))                                  )
                                (reparse-symbol namespacesubparts) [8565 8772])
                            ("try_lock_impl" function
                               (:template 
                                  ( ("Iterator" type (:type "class") nil nil))                                  
                                :type ("Iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("begin" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8834 8849])
                                    ("end" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8850 8863])
                                    ("" variable (:type ("is_mutex_type_wrapper" type
                                         (:template-specifier 
                                            ( ("false" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [8864 8894]))                                  
                                :prototype-flag t)
                                (reparse-symbol namespacesubparts) [8778 8895]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [8277 8899])
                    ("try_lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil))                          
                        :type ("detail::try_lock_impl_return::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9022 9037])
                            ("m2" variable
                               (:reference 1
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9038 9053]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [8903 9170])
                    ("try_lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil))                          
                        :type ("detail::try_lock_impl_return::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9293 9314])
                            ("m2" variable
                               (:reference 1
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9315 9330]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [9174 9447])
                    ("try_lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil))                          
                        :type ("detail::try_lock_impl_return::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9570 9585])
                            ("m2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9586 9607]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [9451 9724])
                    ("try_lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil))                          
                        :type ("detail::try_lock_impl_return::type" type (:type "class") nil nil)
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9847 9868])
                            ("m2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9869 9890]))                          
                        :typemodifiers ("typename"))
                        (reparse-symbol namespacesubparts) [9728 10007])
                    ("try_lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil)
                            ("MutexType3" type (:type "class") nil nil))                          
                        :type "int"
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10099 10114])
                            ("m2" variable
                               (:reference 1
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10115 10130])
                            ("m3" variable
                               (:reference 1
                                :type ("MutexType3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10131 10146]))                          )
                        (reparse-symbol namespacesubparts) [10011 10216])
                    ("try_lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil)
                            ("MutexType3" type (:type "class") nil nil)
                            ("MutexType4" type (:type "class") nil nil))                          
                        :type "int"
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10329 10344])
                            ("m2" variable
                               (:reference 1
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10345 10360])
                            ("m3" variable
                               (:reference 1
                                :type ("MutexType3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10361 10376])
                            ("m4" variable
                               (:reference 1
                                :type ("MutexType4" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10377 10392]))                          )
                        (reparse-symbol namespacesubparts) [10220 10466])
                    ("try_lock" function
                       (:template 
                          ( ("MutexType1" type (:type "class") nil nil)
                            ("MutexType2" type (:type "class") nil nil)
                            ("MutexType3" type (:type "class") nil nil)
                            ("MutexType4" type (:type "class") nil nil)
                            ("MutexType5" type (:type "class") nil nil))                          
                        :type "int"
                        :arguments 
                          ( ("m1" variable
                               (:reference 1
                                :type ("MutexType1" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10600 10615])
                            ("m2" variable
                               (:reference 1
                                :type ("MutexType2" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10616 10631])
                            ("m3" variable
                               (:reference 1
                                :type ("MutexType3" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10632 10647])
                            ("m4" variable
                               (:reference 1
                                :type ("MutexType4" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10648 10663])
                            ("m5" variable
                               (:reference 1
                                :type ("MutexType5" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10664 10679]))                          )
                        (reparse-symbol namespacesubparts) [10470 10757])
                    ("detail" type
                       (:members 
                          ( ("range_lock_guard" type
                               (:template 
                                  ( ("Iterator" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("begin" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10855 10870])
                                    ("end" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10877 10890])
                                    ("range_lock_guard" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("begin_" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10915 10931])
                                            ("end_" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10932 10946]))                                          
                                        :type ("range_lock_guard" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [10898 11030])
                                    ("release" function (:type "void") (reparse-symbol classsubparts) [11038 11089])
                                    ("range_lock_guard" function
                                       (:destructor-flag t
                                        :type "void")
                                        (reparse-symbol classsubparts) [11097 11217]))                                  )
                                (reparse-symbol namespacesubparts) [10786 11224])
                            ("try_lock_impl" function
                               (:template 
                                  ( ("Iterator" type (:type "class") nil nil))                                  
                                :type ("Iterator" type (:type "class") nil nil)
                                :arguments 
                                  ( ("begin" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11286 11301])
                                    ("end" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11302 11315])
                                    ("" variable (:type ("is_mutex_type_wrapper" type
                                         (:template-specifier 
                                            ( ("false" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [11316 11346]))                                  )
                                (reparse-symbol namespacesubparts) [11230 11771]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [10761 11775])
                    ("detail" type
                       (:members 
                          ( ("lock_impl" function
                               (:template 
                                  ( ("Iterator" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("begin" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11852 11867])
                                    ("end" variable (:type ("Iterator" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11868 11881])
                                    ("" variable (:type ("is_mutex_type_wrapper" type
                                         (:template-specifier 
                                            ( ("false" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [11882 11912]))                                  )
                                (reparse-symbol namespacesubparts) [11804 13146]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [11779 13151]))                  
                :type "namespace")
                nil [540 13154])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [13155 13193]))          
      :file "lock_algorithms.hpp"
      :pointmax 13202
      :fsize 13201
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((punctuation 8364 . 8365) (symbol 8359 . 8364) (punctuation 8358 . 8359) (punctuation 8357 . 8358) (punctuation 8356 . 8357) (symbol 8351 . 8356) (punctuation 8350 . 8351) (symbol 8337 . 8350) (punctuation 8335 . 8336) (symbol 8333 . 8334) (BOOL 8328 . 8332) (punctuation 8326 . 8327) (symbol 8321 . 8326) (TYPENAME 8312 . 8320) (punctuation 8311 . 8312) (TEMPLATE 8302 . 8310))
      :lexical-table 
        '(("BOOST_THREAD_LOCK_ALGORITHMS_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_LOCK_TYPES_HPP" variable (:constant-flag t) nil [293 320])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [322 363])
            ("boost/thread/detail/move.hpp" include (:system-flag t) nil [364 403])
            ("boost/thread/exceptions.hpp" include (:system-flag t) nil [404 442])
            ("boost/thread/lock_options.hpp" include (:system-flag t) nil [443 483])
            ("boost/thread/lockable_traits.hpp" include (:system-flag t) nil [484 527])
            ("boost/thread/is_locked_by_this_thread.hpp" include (:system-flag t) nil [577 629])
            ("boost/thread/thread_time.hpp" include (:system-flag t) nil [637 676])
            ("boost/assert.hpp" include (:system-flag t) nil [678 705])
            ("boost/detail/workaround.hpp" include (:system-flag t) nil [821 859])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [861 899])
            ("boost" type
               (:members 
                  ( ("xtime" type
                       (:prototype t
                        :type "struct")
                        (reparse-symbol namespacesubparts) [921 934])
                    ("shared_lock" type
                       (:template 
                          ( ("Mutex" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [938 984])
                    ("upgrade_lock" type
                       (:template 
                          ( ("Mutex" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [988 1035])
                    ("unique_lock" type
                       (:template 
                          ( ("Mutex" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [1039 1085])
                    ("detail" type
                       (:members 
                          ( ("try_lock_wrapper" type
                               (:template 
                                  ( ("Mutex" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1114 1167]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1089 1171])
                    ("unique_lock" type
                       (:template 
                          ( ("Mutex" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [2379 2387])
                            ("m" variable
                               (:pointer 1
                                :type ("Mutex" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2392 2401])
                            ("is_locked" variable (:type "bool") (reparse-symbol classsubparts) [2406 2421])
                            ("private" label nil (reparse-symbol classsubparts) [2425 2433])
                            ("unique_lock" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("" variable
                                       (:reference 1
                                        :type ("upgrade_lock" type
                                             (:template-specifier 
                                                ( ("Mutex" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [2459 2480]))                                  
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2447 2481])
                            ("=" function
                               (:prototype-flag t
                                :operator-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("upgrade_lock" type
                                             (:template-specifier 
                                                ( ("Mutex" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [2509 2536]))                                  
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2486 2537])
                            ("public" label nil (reparse-symbol classsubparts) [2540 2547])
                            ("mutex_type" type
                               (:typedef ("Mutex" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [2552 2577])
                            ("m" function
                               (:constructor-flag t
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2847 2875])
                            ("unique_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2902 2912]))                                  
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2890 2971])
                            ("unique_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2988 2998])
                                    ("" variable (:type ("adopt_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2999 3012]))                                  
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [2976 3161])
                            ("m" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("m_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3225 3228]))                                  
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3222 3252])
                            ("unique_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3269 3279])
                                    ("" variable (:type ("try_to_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3280 3294]))                                  
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3257 3357])
                            ("m" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_RV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4161 4183])
                                    ("" variable (:type ("m" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4184 4186]))                                  
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4159 4322])
                            ("unique_lock" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("upgrade_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4378 4445])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4422 4452]))                                  
                                :type ("BOOST_THREAD_EXPLICIT_LOCK_CONVERSION" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4328 4453])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("upgrade_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4603 4670])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4647 4677]))                                  
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4580 4790])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_RV_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4892 4924])
                                    ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4925 4931]))                                  
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4869 5044])
                            ("unique_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("upgrade_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5365 5437])
                                    ("ul" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5414 5441])
                                    ("" variable (:type ("try_to_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5442 5456]))                                  
                                :type ("unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [5353 5790])
                            ("unique_lock" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [8797 8883])
                            ("lock" function (:type "void") (reparse-symbol classsubparts) [8888 9315])
                            ("try_lock" function (:type "bool") (reparse-symbol classsubparts) [9320 9767])
                            ("unlock" function (:type "void") (reparse-symbol classsubparts) [12370 12796])
                            ("shared_lock" friend nil (reparse-symbol classsubparts) [13465 13489])
                            ("upgrade_lock" friend nil (reparse-symbol classsubparts) [13503 13528]))                          )
                        (reparse-symbol namespacesubparts) [2327 13542])
                    ("shared_lock" type
                       (:template 
                          ( ("Mutex" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [13818 13828])
                            ("m" variable
                               (:pointer 1
                                :type ("Mutex" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13833 13842])
                            ("is_locked" variable (:type "bool") (reparse-symbol classsubparts) [13847 13862])
                            ("public" label nil (reparse-symbol classsubparts) [13866 13873])
                            ("mutex_type" type
                               (:typedef ("Mutex" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [13878 13903])
                            ("m" function
                               (:constructor-flag t
                                :type ("shared_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13986 14014])
                            ("shared_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14041 14051]))                                  
                                :type ("shared_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14029 14106])
                            ("shared_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14123 14133])
                                    ("" variable (:type ("adopt_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14133 14146]))                                  
                                :type ("shared_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14111 14291])
                            ("m" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("m_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14355 14358]))                                  
                                :type ("shared_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14352 14382])
                            ("shared_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [14399 14409])
                                    ("" variable (:type ("try_to_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14409 14423]))                                  
                                :type ("shared_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [14387 14482])
                            ("m" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_RV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15167 15189])
                                    ("" variable (:type ("m" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15190 15192]))                                  
                                :type ("shared_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15165 15328])
                            ("shared_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("unique_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15384 15450])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15427 15457]))                                  
                                :type ("BOOST_THREAD_EXPLICIT_LOCK_CONVERSION" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15334 15699])
                            ("shared_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("upgrade_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15755 15822])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15799 15829]))                                  
                                :type ("BOOST_THREAD_EXPLICIT_LOCK_CONVERSION" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [15705 16079])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("shared_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16174 16240])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16217 16247]))                                  
                                :type ("shared_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16151 16360])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("unique_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16443 16509])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16486 16516]))                                  
                                :type ("shared_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16420 16612])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("upgrade_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16641 16708])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16685 16715]))                                  
                                :type ("shared_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [16618 16811])
                            ("shared_lock" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [17154 17246])
                            ("lock" function (:type "void") (reparse-symbol classsubparts) [17251 17653])
                            ("try_lock" function (:type "bool") (reparse-symbol classsubparts) [17658 18080])
                            ("unlock" function (:type "void") (reparse-symbol classsubparts) [20218 20619]))                          )
                        (reparse-symbol namespacesubparts) [13767 21100])
                    ("upgrade_lock" type
                       (:template 
                          ( ("Mutex" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("protected" label nil (reparse-symbol classsubparts) [21375 21385])
                            ("m" variable
                               (:pointer 1
                                :type ("Mutex" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21390 21399])
                            ("is_locked" variable (:type "bool") (reparse-symbol classsubparts) [21404 21419])
                            ("public" label nil (reparse-symbol classsubparts) [21423 21430])
                            ("mutex_type" type
                               (:typedef ("Mutex" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [21435 21460])
                            ("m" function
                               (:constructor-flag t
                                :type ("upgrade_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21545 21573])
                            ("upgrade_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21601 21611]))                                  
                                :type ("upgrade_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21588 21670])
                            ("upgrade_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21688 21698])
                                    ("" variable (:type ("adopt_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21699 21712]))                                  
                                :type ("upgrade_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21675 21861])
                            ("m" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("m_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21926 21929]))                                  
                                :type ("upgrade_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21923 21953])
                            ("upgrade_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [21971 21981])
                                    ("" variable (:type ("try_to_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [21982 21996]))                                  
                                :type ("upgrade_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [21958 22059])
                            ("m" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_RV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22575 22597])
                                    ("" variable (:type ("m" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22598 22600]))                                  
                                :type ("upgrade_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22573 22736])
                            ("upgrade_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("unique_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22793 22859])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22836 22866]))                                  
                                :type ("BOOST_THREAD_EXPLICIT_LOCK_CONVERSION" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [22742 23109])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("upgrade_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23205 23272])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23249 23279]))                                  
                                :type ("upgrade_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23181 23393])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("unique_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23478 23544])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23521 23551]))                                  
                                :type ("upgrade_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [23454 23648])
                            ("upgrade_lock" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [25763 25858])
                            ("lock" function (:type "void") (reparse-symbol classsubparts) [25863 26299])
                            ("try_lock" function (:type "bool") (reparse-symbol classsubparts) [26304 26760])
                            ("unlock" function (:type "void") (reparse-symbol classsubparts) [26765 27200])
                            ("shared_lock" friend nil (reparse-symbol classsubparts) [28783 28807])
                            ("unique_lock" friend nil (reparse-symbol classsubparts) [28821 28845]))                          )
                        (reparse-symbol namespacesubparts) [21322 28859])
                    ("unique_lock" function
                       (:template 
                          ( ("Mutex" type (:type "class") nil nil))                          
                        :type ("unique_lock" type (:type "class") nil nil)
                        :arguments 
                          ( ("upgrade_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29146 29213])
                            ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [29190 29220]))                          
                        :parent "unique_lock"
                        :constructor-flag t)
                        (reparse-symbol namespacesubparts) [29087 29407])
                    ("upgrade_to_unique_lock" type
                       (:template 
                          ( ("Mutex" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [29471 29479])
                            ("source" variable
                               (:pointer 1
                                :type ("upgrade_lock" type
                                     (:template-specifier 
                                        ( ("Mutex" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [29484 29512])
                            ("exclusive" variable (:type ("unique_lock" type
                                 (:template-specifier 
                                    ( ("Mutex" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [29517 29546])
                            ("public" label nil (reparse-symbol classsubparts) [29550 29557])
                            ("mutex_type" type
                               (:typedef ("Mutex" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [29562 29587])
                            ("upgrade_to_unique_lock" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("upgrade_lock" type
                                             (:template-specifier 
                                                ( ("Mutex" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [29680 29704]))                                  
                                :type ("upgrade_to_unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [29657 29771])
                            ("upgrade_to_unique_lock" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [29776 29939])
                            ("source" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type ("BOOST_THREAD_RV" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30080 30102])
                                    ("" variable (:type ("source" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30103 30110]))                                  
                                :type ("upgrade_to_unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30073 30220])
                            ("=" function
                               (:operator-flag t
                                :arguments 
                                  ( ("upgrade_to_unique_lock" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30326 30403])
                                    ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [30380 30410]))                                  
                                :type ("upgrade_to_unique_lock" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [30292 30519]))                          )
                        (reparse-symbol namespacesubparts) [29411 31211])
                    ("detail" type
                       (:members 
                          ( ("try_lock_wrapper" type
                               (:template 
                                  ( ("Mutex" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("base" type
                                       (:typedef ("unique_lock" type
                                             (:template-specifier 
                                                ( ("Mutex" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [31416 31448])
                                    ("public" label nil (reparse-symbol classsubparts) [31451 31458])
                                    ("try_lock_wrapper" function
                                       (:constructor-flag t
                                        :type ("try_lock_wrapper" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [31512 31537])
                                    ("try_lock_wrapper" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("m" variable
                                               (:reference 1
                                                :type ("Mutex" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [31569 31578]))                                          
                                        :type ("try_lock_wrapper" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [31552 31610])
                                    ("try_lock_wrapper" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("m_" variable
                                               (:reference 1
                                                :type ("Mutex" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [31633 31643])
                                            ("" variable (:type ("adopt_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31643 31656]))                                          
                                        :type ("try_lock_wrapper" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [31616 31799])
                                    ("try_lock_wrapper" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("m_" variable
                                               (:reference 1
                                                :type ("Mutex" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [31821 31831])
                                            ("" variable (:type ("defer_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31831 31844]))                                          
                                        :type ("try_lock_wrapper" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [31804 31876])
                                    ("try_lock_wrapper" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("m_" variable
                                               (:reference 1
                                                :type ("Mutex" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [31898 31908])
                                            ("" variable (:type ("try_to_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31908 31922]))                                          
                                        :type ("try_lock_wrapper" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [31881 31955])
                                    ("try_lock_wrapper" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_THREAD_RV_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32018 32055])
                                            ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32056 32062]))                                          
                                        :type ("try_lock_wrapper" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [32001 32101])
                                    ("try_lock_wrapper" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_THREAD_RV_REF" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32293 32330])
                                            ("" variable (:type ("other" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32331 32337]))                                          
                                        :type ("try_lock_wrapper" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [32276 32389])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("try_lock_wrapper" variable (:type ("BOOST_THREAD_RV_REF_BEG" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32429 32500])
                                            ("other" variable (:type ("BOOST_THREAD_RV_REF_END" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [32477 32507]))                                          
                                        :type ("try_lock_wrapper" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [32401 32593])
                                    ("swap" function
                                       (:arguments 
                                          ( ("other" variable
                                               (:reference 1
                                                :type ("try_lock_wrapper" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [32608 32632]))                                          
                                        :type "void")
                                        (reparse-symbol classsubparts) [32598 32669])
                                    ("lock" function (:type "void") (reparse-symbol classsubparts) [32674 32717])
                                    ("try_lock" function (:type "bool") (reparse-symbol classsubparts) [32722 32780])
                                    ("unlock" function (:type "void") (reparse-symbol classsubparts) [32785 32832])
                                    ("owns_lock" function
                                       (:methodconst-flag t
                                        :type "bool")
                                        (reparse-symbol classsubparts) [32837 32903])
                                    ("mutex" function
                                       (:methodconst-flag t
                                        :pointer 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [32908 32968])
                                    ("release" function
                                       (:pointer 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [32973 33031]))                                  
                                :superclasses 
                                  ( ("unique_lock" type
                                       (:protection "private"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [31330 33385])
                            ("swap" function
                               (:template 
                                  ( ("Mutex" type (:type "class") nil nil))                                  
                                :type "void"
                                :arguments 
                                  ( ("lhs" variable
                                       (:reference 1
                                        :type ("try_lock_wrapper" type
                                             (:template-specifier 
                                                ( ("Mutex" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [33426 33455])
                                    ("rhs" variable
                                       (:reference 1
                                        :type ("try_lock_wrapper" type
                                             (:template-specifier 
                                                ( ("Mutex" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [33455 33484]))                                  )
                                (reparse-symbol namespacesubparts) [33389 33511]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [31309 33513]))                  
                :type "namespace")
                nil [901 33515])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [33516 33554]))          
      :file "lock_types.hpp"
      :pointmax 33563
      :fsize 33562
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 33340 . 33373) (CONST 33330 . 33335) (semantic-list 33327 . 33329) (BOOL 33323 . 33327) (OPERATOR 33314 . 33322) (EXPLICIT 33305 . 33313) (semantic-list 32312 . 32330) (semantic-list 32037 . 32055) (EXPLICIT 31543 . 31551) (semantic-list 31488 . 31506) (symbol 31463 . 31488) (symbol 31279 . 31307) (punctuation 31277 . 31278) (symbol 31272 . 31277) (punctuation 31271 . 31272) (symbol 31249 . 31271) (semantic-list 31241 . 31248) (symbol 31213 . 31241) (semantic-list 31163 . 31206) (symbol 31144 . 31158) (CONST 31138 . 31143) (semantic-list 31135 . 31137) (symbol 31126 . 31135) (BOOL 31121 . 31125) (semantic-list 31075 . 31108) (symbol 31056 . 31070) (CONST 31050 . 31055) (semantic-list 31047 . 31049) (BOOL 31043 . 31047) (OPERATOR 31034 . 31042) (EXPLICIT 31025 . 31033) (semantic-list 30584 . 30668) (symbol 30565 . 30579) (semantic-list 30534 . 30565) (symbol 30530 . 30534) (VOID 30525 . 30529) (punctuation 30102 . 30103) (semantic-list 30095 . 30102) (punctuation 30067 . 30068) (symbol 30053 . 30067) (semantic-list 29967 . 30052) (symbol 29945 . 29967) (EXPLICIT 29648 . 29656) (semantic-list 29617 . 29642) (symbol 29592 . 29617) (symbol 29055 . 29083) (punctuation 29053 . 29054) (symbol 29048 . 29053) (punctuation 29047 . 29048) (symbol 29035 . 29047) (semantic-list 29027 . 29034) (symbol 28999 . 29027) (semantic-list 28971 . 28995) (symbol 28954 . 28968) (semantic-list 28899 . 28951) (symbol 28895 . 28899) (VOID 28890 . 28894) (punctuation 28886 . 28887) (symbol 28881 . 28886) (TYPENAME 28872 . 28880) (punctuation 28871 . 28872) (TEMPLATE 28863 . 28871) (punctuation 28853 . 28854) (punctuation 28851 . 28852) (symbol 28846 . 28851) (punctuation 28845 . 28846) (punctuation 28815 . 28816) (punctuation 28813 . 28814) (symbol 28808 . 28813) (punctuation 28807 . 28808) (semantic-list 28747 . 28778) (symbol 28728 . 28742) (CONST 28722 . 28727) (semantic-list 28719 . 28721) (symbol 28710 . 28719) (BOOL 28705 . 28709) (semantic-list 28660 . 28693) (symbol 28641 . 28655) (CONST 28635 . 28640) (semantic-list 28632 . 28634) (BOOL 28628 . 28632) (OPERATOR 28619 . 28627) (EXPLICIT 28610 . 28618) (semantic-list 25673 . 25758) (symbol 25654 . 25668) (semantic-list 25652 . 25654) (symbol 25645 . 25652) (punctuation 25643 . 25644) (symbol 25638 . 25643) (semantic-list 25609 . 25632) (symbol 25590 . 25604) (CONST 25584 . 25589) (semantic-list 25581 . 25583) (symbol 25576 . 25581) (punctuation 25574 . 25575) (symbol 25569 . 25574) (semantic-list 25485 . 25564) (symbol 25466 . 25480) (semantic-list 25445 . 25466) (symbol 25441 . 25445) (VOID 25436 . 25440) (punctuation 22597 . 22598) (semantic-list 22590 . 22597) (punctuation 22567 . 22568) (symbol 22553 . 22567) (semantic-list 22477 . 22552) (symbol 22465 . 22477) (punctuation 21925 . 21926) (punctuation 21917 . 21918) (symbol 21903 . 21917) (semantic-list 21878 . 21903) (symbol 21866 . 21878) (EXPLICIT 21579 . 21587) (number 21547 . 21548) (punctuation 21539 . 21540) (symbol 21525 . 21539) (semantic-list 21523 . 21525) (symbol 21511 . 21523) (semantic-list 21490 . 21505) (symbol 21465 . 21490) (semantic-list 21294 . 21318) (symbol 21277 . 21291) (semantic-list 21227 . 21276) (symbol 21223 . 21227) (VOID 21218 . 21222) (punctuation 21214 . 21215) (symbol 21209 . 21214) (TYPENAME 21200 . 21208) (punctuation 21199 . 21200) (TEMPLATE 21191 . 21199) (symbol 21159 . 21187) (punctuation 21157 . 21158) (symbol 21152 . 21157) (punctuation 21151 . 21152) (symbol 21140 . 21151) (semantic-list 21132 . 21139) (symbol 21104 . 21132) (semantic-list 21063 . 21094) (symbol 21044 . 21058) (CONST 21038 . 21043) (semantic-list 21035 . 21037) (symbol 21026 . 21035) (BOOL 21021 . 21025) (semantic-list 20976 . 21009) (symbol 20957 . 20971) (CONST 20951 . 20956) (semantic-list 20948 . 20950) (BOOL 20944 . 20948) (OPERATOR 20935 . 20943) (EXPLICIT 20926 . 20934) (semantic-list 17063 . 17148) (symbol 17044 . 17058) (semantic-list 17041 . 17043) (symbol 17034 . 17041) (punctuation 17032 . 17033) (symbol 17027 . 17032) (semantic-list 16998 . 17021) (symbol 16979 . 16993) (CONST 16973 . 16978) (semantic-list 16970 . 16972) (symbol 16965 . 16970) (punctuation 16963 . 16964) (symbol 16958 . 16963) (semantic-list 16873 . 16952) (symbol 16854 . 16868) (semantic-list 16833 . 16853) (symbol 16829 . 16833) (VOID 16824 . 16828) (punctuation 15189 . 15190) (semantic-list 15182 . 15189) (punctuation 15159 . 15160) (symbol 15145 . 15159) (semantic-list 15070 . 15144) (symbol 15059 . 15070) (punctuation 14354 . 14355) (punctuation 14346 . 14347) (symbol 14332 . 14346) (semantic-list 14307 . 14331) (symbol 14296 . 14307) (EXPLICIT 14020 . 14028) (number 13988 . 13989) (punctuation 13980 . 13981) (symbol 13966 . 13980) (semantic-list 13963 . 13965) (symbol 13952 . 13963) (semantic-list 13933 . 13946) (symbol 13908 . 13933) (symbol 13735 . 13763) (punctuation 13733 . 13734) (symbol 13728 . 13733) (punctuation 13727 . 13728) (symbol 13716 . 13727) (semantic-list 13708 . 13715) (symbol 13680 . 13708) (semantic-list 13652 . 13676) (symbol 13635 . 13649) (semantic-list 13582 . 13632) (symbol 13578 . 13582) (VOID 13573 . 13577) (punctuation 13569 . 13570) (symbol 13564 . 13569) (TYPENAME 13555 . 13563) (punctuation 13554 . 13555) (TEMPLATE 13546 . 13554) (punctuation 13536 . 13537) (punctuation 13534 . 13535) (symbol 13529 . 13534) (punctuation 13528 . 13529) (punctuation 13497 . 13498) (punctuation 13495 . 13496) (symbol 13490 . 13495) (punctuation 13489 . 13490) (semantic-list 13374 . 13459) (symbol 13355 . 13369) (semantic-list 13353 . 13355) (symbol 13346 . 13353) (punctuation 13344 . 13345) (symbol 13339 . 13344) (semantic-list 13310 . 13333) (symbol 13291 . 13305) (CONST 13285 . 13290) (semantic-list 13282 . 13284) (symbol 13277 . 13282) (punctuation 13275 . 13276) (symbol 13270 . 13275) (semantic-list 13233 . 13264) (symbol 13214 . 13228) (CONST 13208 . 13213) (semantic-list 13205 . 13207) (symbol 13196 . 13205) (BOOL 13191 . 13195) (semantic-list 13146 . 13179) (symbol 13127 . 13141) (CONST 13121 . 13126) (semantic-list 13118 . 13120) (BOOL 13114 . 13118) (OPERATOR 13105 . 13113) (EXPLICIT 13096 . 13104) (semantic-list 8712 . 8791) (symbol 8693 . 8707) (semantic-list 8673 . 8693) (symbol 8669 . 8673) (VOID 8664 . 8668) (semantic-list 4911 . 4924) (punctuation 4183 . 4184) (semantic-list 4176 . 4183) (punctuation 4153 . 4154) (symbol 4139 . 4153) (semantic-list 4098 . 4138) (symbol 4087 . 4098) (semantic-list 4118 . 4131) (punctuation 3224 . 3225) (punctuation 3216 . 3217) (symbol 3202 . 3216) (semantic-list 3177 . 3202) (symbol 3166 . 3177) (EXPLICIT 2881 . 2889) (number 2849 . 2850) (punctuation 2841 . 2842) (symbol 2826 . 2840) (semantic-list 2824 . 2826) (symbol 2813 . 2824) (semantic-list 2607 . 2621) (symbol 2582 . 2607) (EXPLICIT 2438 . 2446))
      :lexical-table 
        '(("BOOST_THREAD_LOCK_TYPES_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_LOCK_GUARD_HPP" variable (:constant-flag t) nil [293 320])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [322 363])
            ("boost/thread/detail/delete.hpp" include (:system-flag t) nil [364 405])
            ("boost/thread/detail/move.hpp" include (:system-flag t) nil [406 445])
            ("boost/thread/detail/lockable_wrapper.hpp" include (:system-flag t) nil [446 497])
            ("boost/thread/lock_options.hpp" include (:system-flag t) nil [498 538])
            ("boost/thread/is_locked_by_this_thread.hpp" include (:system-flag t) nil [588 640])
            ("boost/assert.hpp" include (:system-flag t) nil [641 668])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [677 715])
            ("boost" type
               (:members 
                  ( ("lock_guard" type
                       (:template 
                          ( ("Mutex" type (:type "class") nil nil))                          
                        :type "class"
                        :members 
                          ( ("private" label nil (reparse-symbol classsubparts) [789 797])
                            ("m" variable (:type ("Mutex" type (:type "class") nil nil)) (reparse-symbol classsubparts) [802 811])
                            ("public" label nil (reparse-symbol classsubparts) [815 822])
                            ("mutex_type" type
                               (:typedef ("Mutex" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol classsubparts) [827 852])
                            ("lock_guard" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [921 931]))                                  
                                :type ("lock_guard" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [910 973])
                            ("lock_guard" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("m_" variable
                                       (:reference 1
                                        :type ("Mutex" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [990 1000])
                                    ("" variable (:type ("adopt_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1001 1014]))                                  
                                :type ("lock_guard" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [979 1145])
                            ("lock_guard" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("l_" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("thread_detail::lockable_wrapper" type (:template-specifier 
                                                ( ("Mutex" type nil nil nil))                                                ) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [1219 1285]))                                  
                                :type ("lock_guard" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1208 1394])
                            ("lock_guard" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("l_" variable (:type ("std::initializer_list" type
                                         (:template-specifier 
                                            ( ("thread_detail::lockable_adopt_wrapper" type (:template-specifier 
                                                ( ("Mutex" type nil nil nil))                                                ) nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [1411 1483]))                                  
                                :type ("lock_guard" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1400 1687])
                            ("lock_guard" function
                               (:destructor-flag t
                                :type "void")
                                (reparse-symbol classsubparts) [1700 1743]))                          )
                        (reparse-symbol namespacesubparts) [738 1748])
                    ("make_lock_guard" function
                       (:template 
                          ( ("Lockable" type (:type "class") nil nil))                          
                        :type ("lock_guard" type
                             (:template-specifier 
                                ( ("Lockable" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("mtx" variable
                               (:reference 1
                                :type ("Lockable" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1867 1881]))                          )
                        (reparse-symbol namespacesubparts) [1799 1952])
                    ("make_lock_guard" function
                       (:template 
                          ( ("Lockable" type (:type "class") nil nil))                          
                        :type ("lock_guard" type
                             (:template-specifier 
                                ( ("Lockable" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :arguments 
                          ( ("mtx" variable
                               (:reference 1
                                :type ("Lockable" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2023 2037])
                            ("" variable (:type ("adopt_lock_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2038 2051]))                          )
                        (reparse-symbol namespacesubparts) [1955 2128]))                  
                :type "namespace")
                nil [717 2137])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [2139 2177]))          
      :file "lock_guard.hpp"
      :pointmax 2186
      :fsize 2185
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((EXPLICIT 901 . 909) (semantic-list 881 . 895) (symbol 857 . 881))
      :lexical-table 
        '(("BOOST_THREAD_LOCK_GUARD_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_LOCK_OPTIONS_HPP" variable (:constant-flag t) nil [295 324])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [326 364])
            ("boost" type
               (:members 
                  ( ("defer_lock_t" type (:type "struct") (reparse-symbol namespacesubparts) [386 414])
                    ("try_to_lock_t" type (:type "struct") (reparse-symbol namespacesubparts) [417 446])
                    ("adopt_lock_t" type (:type "struct") (reparse-symbol namespacesubparts) [449 477])
                    ("defer_lock" variable
                       (:default-value "{}"
                        :type ("defer_lock_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [506 535])
                    ("try_to_lock" variable
                       (:default-value "{}"
                        :type ("try_to_lock_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [563 594])
                    ("adopt_lock" variable
                       (:default-value "{}"
                        :type ("adopt_lock_t" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [622 651]))                  
                :type "namespace")
                nil [366 654])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [655 693]))          
      :file "lock_options.hpp"
      :pointmax 702
      :fsize 701
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((symbol 597 . 621) (symbol 538 . 562) (symbol 481 . 505))
      :lexical-table 
        '(("BOOST_THREAD_LOCK_OPTIONS_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_FUTURE_ERROR_CODE_HPP" variable (:constant-flag t) nil [311 345])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [347 388])
            ("boost/detail/scoped_enum_emulation.hpp" include (:system-flag t) nil [389 438])
            ("boost/system/error_code.hpp" include (:system-flag t) nil [439 477])
            ("boost/type_traits/integral_constant.hpp" include (:system-flag t) nil [478 528])
            ("boost" type
               (:members 
                  ( ("BOOST_SCOPED_ENUM_DECLARE_BEGIN" function
                       (:arguments 
                          ( ("" variable (:type ("future_errc" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [610 622]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [578 736])
                    ("system" type
                       (:members 
                          ( ("true_type" variable (:type "int") (reparse-symbol namespacesubparts) [895 908]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [785 1078])
                    ("BOOST_NOEXCEPT" variable (:type "int") (reparse-symbol namespacesubparts) [1160 1175])
                    ("system" type (:type "namespace") (reparse-symbol namespacesubparts) [1179 1544]))                  
                :type "namespace")
                nil [530 1556]))          
      :file "future_error_code.hpp"
      :pointmax 1584
      :fsize 1583
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1457 . 1540) (symbol 1438 . 1452) (semantic-list 1422 . 1437) (symbol 1402 . 1422) (symbol 1382 . 1397) (INLINE 1371 . 1377) (semantic-list 1280 . 1365) (symbol 1261 . 1275) (semantic-list 1245 . 1260) (symbol 1230 . 1245) (symbol 1215 . 1225) (INLINE 1204 . 1210) (semantic-list 1157 . 1159) (symbol 1142 . 1157) (punctuation 1140 . 1141) (symbol 1126 . 1140) (punctuation 1125 . 1126) (punctuation 1124 . 1125) (symbol 1118 . 1124) (CONST 1112 . 1117) (symbol 1092 . 1109) (PUBLIC 888 . 894) (punctuation 886 . 887) (punctuation 884 . 885) (symbol 873 . 884) (punctuation 872 . 873) (symbol 854 . 872) (symbol 833 . 853) (STRUCT 826 . 832) (punctuation 820 . 821) (punctuation 819 . 820) (TEMPLATE 810 . 818) (semantic-list 768 . 781) (symbol 739 . 768))
      :lexical-table 
        '(("BOOST_THREAD_FUTURE_ERROR_CODE_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_THREAD_IS_LOCKED_BY_THIS_THREAD_HPP" variable (:constant-flag t) nil [264 305])
            ("boost/thread/detail/config.hpp" include (:system-flag t) nil [307 348])
            ("boost/config/abi_prefix.hpp" include (:system-flag t) nil [350 388])
            ("boost" type
               (:members 
                  ( ("testable_mutex" type
                       (:template 
                          ( ("Lockable" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [410 462])
                    ("is_locked_by_this_thread" function
                       (:template 
                          ( ("Lockable" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("mtx" variable
                               (:reference 1
                                :constant-flag t
                                :type ("testable_mutex" type
                                     (:template-specifier 
                                        ( ("Lockable" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [810 846]))                          )
                        (reparse-symbol namespacesubparts) [749 897])
                    ("is_locked_by_this_thread" function
                       (:template 
                          ( ("Lockable" type (:type "class") nil nil))                          
                        :type "bool"
                        :arguments 
                          ( ("" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Lockable" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [961 977]))                          )
                        (reparse-symbol namespacesubparts) [900 1002]))                  
                :type "namespace")
                nil [390 1004])
            ("boost/config/abi_suffix.hpp" include (:system-flag t) nil [1006 1044]))          
      :file "is_locked_by_this_thread.hpp"
      :pointmax 1063
      :fsize 1062
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_THREAD_IS_LOCKED_BY_THIS_THREAD_HPP")
          )
))
  :file "!usr!include!boost!thread!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
