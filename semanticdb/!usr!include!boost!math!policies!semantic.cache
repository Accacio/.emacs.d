;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MATH_POLICY_HPP" variable (:constant-flag t) nil [264 285])
            ("boost/mpl/list.hpp" include (:system-flag t) nil [287 316])
            ("boost/mpl/contains.hpp" include (:system-flag t) nil [317 350])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [351 378])
            ("boost/mpl/find_if.hpp" include (:system-flag t) nil [379 411])
            ("boost/mpl/remove_if.hpp" include (:system-flag t) nil [412 446])
            ("boost/mpl/vector.hpp" include (:system-flag t) nil [447 478])
            ("boost/mpl/push_back.hpp" include (:system-flag t) nil [479 513])
            ("boost/mpl/at.hpp" include (:system-flag t) nil [514 541])
            ("boost/mpl/size.hpp" include (:system-flag t) nil [542 571])
            ("boost/mpl/comparison.hpp" include (:system-flag t) nil [572 607])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [608 648])
            ("boost/static_assert.hpp" include (:system-flag t) nil [649 683])
            ("boost/assert.hpp" include (:system-flag t) nil [684 711])
            ("boost/math/tools/config.hpp" include (:system-flag t) nil [712 750])
            ("limits" include (:system-flag t) nil [751 768])
            ("limits.h" include (:system-flag t) nil [857 876])
            ("stdlib.h" include (:system-flag t) nil [877 896])
            ("stddef.h" include (:system-flag t) nil [897 916])
            ("math.h" include (:system-flag t) nil [917 934])
            ("boost" type
               (:members 
                  ( ("math" type
                       (:members 
                          ( ("tools" type
                               (:members 
                                  ( ("digits" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "int"
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_MATH_EXPLICIT_TEMPLATE_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1019 1055]))                                          
                                        :prototype-flag t)
                                        (reparse-symbol namespacesubparts) [989 1057])
                                    ("epsilon" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("T" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_MATH_EXPLICIT_TEMPLATE_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1087 1123]))                                          
                                        :prototype-flag t)
                                        (reparse-symbol namespacesubparts) [1058 1125]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [971 1128])
                            ("policies" type
                               (:members 
                                  ( ("BOOST_MATH_DOMAIN_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1279 1309])
                                    ("BOOST_MATH_POLE_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1377 1405])
                                    ("BOOST_MATH_OVERFLOW_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1477 1509])
                                    ("BOOST_MATH_EVALUATION_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1583 1617])
                                    ("BOOST_MATH_ROUNDING_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1689 1721])
                                    ("BOOST_MATH_UNDERFLOW_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1794 1827])
                                    ("BOOST_MATH_DENORM_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1895 1925])
                                    ("BOOST_MATH_INDETERMINATE_RESULT_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2007 2051])
                                    ("BOOST_MATH_DIGITS10_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2115 2141])
                                    ("BOOST_MATH_PROMOTE_FLOAT_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2199 2230])
                                    ("BOOST_MATH_PROMOTE_DOUBLE_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2393 2425])
                                    ("BOOST_MATH_DISCRETE_QUANTILE_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2497 2532])
                                    ("BOOST_MATH_ASSERT_UNDEFINED_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2614 2648])
                                    ("BOOST_MATH_MAX_SERIES_ITERATION_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2716 2754])
                                    ("BOOST_MATH_MAX_ROOT_ITERATION_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2823 2859])
                                    ("BOOST_MATH_META_INT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2980 2999])
                                    ("BOOST_MATH_META_BOOL" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3616 3636])
                                    ("error_policy_type" type
                                       (:members 
                                          ( ("throw_on_error" variable
                                               (:constant-flag t
                                                :default-value (6039 6040)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [6022 6040])
                                            ("errno_on_error" variable
                                               (:constant-flag t
                                                :default-value (6062 6063)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [6045 6063])
                                            ("ignore_error" variable
                                               (:constant-flag t
                                                :default-value (6083 6084)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [6068 6084])
                                            ("user_error" variable
                                               (:constant-flag t
                                                :default-value (6102 6103)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [6089 6103]))                                          
                                        :type "enum")
                                        (reparse-symbol namespacesubparts) [5994 6106])
                                    ("domain_error" type
                                       (:template 
                                          ( ("error_policy_type" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6108 6192])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("domain_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("domain_error" type
                                                             (:template-specifier 
                                                                ( ("throw_on_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6108 6192])
                                    ("pole_error" type
                                       (:template 
                                          ( ("error_policy_type" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6193 6273])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("pole_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("pole_error" type
                                                             (:template-specifier 
                                                                ( ("throw_on_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6193 6273])
                                    ("overflow_error" type
                                       (:template 
                                          ( ("error_policy_type" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6274 6362])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("overflow_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("overflow_error" type
                                                             (:template-specifier 
                                                                ( ("throw_on_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6274 6362])
                                    ("underflow_error" type
                                       (:template 
                                          ( ("error_policy_type" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6363 6453])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("underflow_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("underflow_error" type
                                                             (:template-specifier 
                                                                ( ("ignore_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6363 6453])
                                    ("denorm_error" type
                                       (:template 
                                          ( ("error_policy_type" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6454 6538])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("denorm_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("denorm_error" type
                                                             (:template-specifier 
                                                                ( ("ignore_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6454 6538])
                                    ("evaluation_error" type
                                       (:template 
                                          ( ("error_policy_type" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6539 6631])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("evaluation_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("evaluation_error" type
                                                             (:template-specifier 
                                                                ( ("throw_on_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6539 6631])
                                    ("rounding_error" type
                                       (:template 
                                          ( ("error_policy_type" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6632 6720])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("rounding_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("rounding_error" type
                                                             (:template-specifier 
                                                                ( ("throw_on_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6632 6720])
                                    ("indeterminate_result_error" type
                                       (:template 
                                          ( ("error_policy_type" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6721 6833])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("indeterminate_result_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("indeterminate_result_error" type
                                                             (:template-specifier 
                                                                ( ("ignore_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6721 6833])
                                    ("promote_float" type
                                       (:template 
                                          ( ("bool" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::bool_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6881 6949])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("bool" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("promote_float" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("promote_float" type
                                                             (:template-specifier 
                                                                ( ("true" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6881 6949])
                                    ("promote_double" type
                                       (:template 
                                          ( ("bool" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::bool_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6950 7020])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("bool" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("promote_double" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("promote_double" type
                                                             (:template-specifier 
                                                                ( ("true" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6950 7020])
                                    ("assert_undefined" type
                                       (:template 
                                          ( ("bool" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::bool_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [7021 7095])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("bool" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("assert_undefined" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("assert_undefined" type
                                                             (:template-specifier 
                                                                ( ("true" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7021 7095])
                                    ("discrete_quantile_policy_type" type
                                       (:members 
                                          ( ("real" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7182 7187])
                                            ("integer_round_outwards" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7191 7214])
                                            ("integer_round_inwards" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7218 7240])
                                            ("integer_round_down" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7244 7263])
                                            ("integer_round_up" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7267 7284])
                                            ("integer_round_nearest" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7288 7311]))                                          
                                        :type "enum")
                                        (reparse-symbol namespacesubparts) [7142 7312])
                                    ("discrete_quantile" type
                                       (:template 
                                          ( ("discrete_quantile_policy_type" type (:typevar "N") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [7314 7420])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("discrete_quantile_policy_type" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("discrete_quantile" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("discrete_quantile" type
                                                             (:template-specifier 
                                                                ( ("integer_round_outwards" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7314 7420])
                                    ("digits10" type
                                       (:superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [7441 7503])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("int" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("digits10" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("digits10" type
                                                             (:template-specifier (("0"))
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7441 7503])
                                    ("digits2" type
                                       (:superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [7504 7540])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("int" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("digits2" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("digits2" type
                                                             (:template-specifier (("0"))
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7504 7540])
                                    ("boost::mpl::int_" variable (:type "int") (reparse-symbol namespacesubparts) [7562 7659])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("unsigned int" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:constant-flag t
                                                        :type "long")
                                                        (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("N" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:constant-flag t
                                                        :type "long")
                                                        (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("max_series_iterations" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7562 7659])
                                    ("boost::mpl::int_" variable (:type "int") (reparse-symbol namespacesubparts) [7660 7753])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("unsigned int" type (:typevar "N") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:constant-flag t
                                                        :type "long")
                                                        (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("N" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:constant-flag t
                                                        :type "long")
                                                        (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("max_root_iterations" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7660 7753])
                                    ("BOOST_MATH_PARAMETER" variable (:constant-flag t) (reparse-symbol namespacesubparts) [7814 7834])
                                    ("default_policy" type (:type "struct") (reparse-symbol namespacesubparts) [7930 7954])
                                    ("detail" type
                                       (:members 
                                          ( ("precision" type
                                               (:template 
                                                  ( ("Digits10" type (:type "class") nil nil)
                                                    ("Digits2" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("digits2_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8288 8306])
                                                    ("public" label nil (reparse-symbol classsubparts) [8307 8314])
                                                    ("type" type
                                                       (:typedef ("mpl::if_c::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [8524 8638]))                                                  )
                                                (reparse-symbol namespacesubparts) [8043 8648])
                                            ("select_result" type
                                               (:template 
                                                  ( ("A" type (:type "class") nil nil)
                                                    ("B" type (:type "class") nil nil)
                                                    ("bool" type (:typevar "b") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("A" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [8712 8727]))                                                  )
                                                (reparse-symbol namespacesubparts) [8650 8730])
                                            ("select_result" type
                                               (:template 
                                                  ( ("A" type (:type "class") nil nil)
                                                    ("B" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("mpl::deref::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [8798 8840]))                                                  
                                                :template-specifier 
                                                  ( ("A" type nil nil nil)
                                                    ("B" type nil nil nil)
                                                    ("false" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [8731 8843])
                                            ("find_arg" type
                                               (:template 
                                                  ( ("Seq" type (:type "class") nil nil)
                                                    ("Pred" type (:type "class") nil nil)
                                                    ("DefaultType" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("private" label nil (reparse-symbol classsubparts) [8915 8923])
                                                    ("iter" type
                                                       (:typedef ("mpl::find_if::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [8927 8979])
                                                    ("end_type" type
                                                       (:typedef ("mpl::end::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [8983 9029])
                                                    ("public" label nil (reparse-symbol classsubparts) [9030 9037])
                                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9146 9156]))                                                  )
                                                (reparse-symbol namespacesubparts) [8845 9159])
                                            ("test_is_valid_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [9186 9190]))                                                  
                                                :type "double")
                                                (reparse-symbol namespacesubparts) [9161 9191])
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [9219 9223]))                                                  
                                                :type "double")
                                                (reparse-symbol namespacesubparts) [9192 9224])
                                            ("test_is_valid_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("default_policy" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [9248 9270]))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) [9225 9271])
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("default_policy" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [9297 9319]))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) [9272 9320])
                                            ("is_valid_policy_imp" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("BOOST_STATIC_CONSTANT" function
                                                       (:prototype-flag t
                                                        :arguments 
                                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [9396 9401])
                                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9402 9409]))                                                          
                                                        :type "int")
                                                        (reparse-symbol classsubparts) [9374 9495]))                                                  )
                                                (reparse-symbol namespacesubparts) [9322 9498])
                                            ("is_default_policy_imp" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("BOOST_STATIC_CONSTANT" function
                                                       (:prototype-flag t
                                                        :arguments 
                                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [9575 9580])
                                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9581 9588]))                                                          
                                                        :type "int")
                                                        (reparse-symbol classsubparts) [9553 9676]))                                                  )
                                                (reparse-symbol namespacesubparts) [9500 9679])
                                            ("append_N" type
                                               (:template 
                                                  ( ("Seq" type (:type "class") nil nil)
                                                    ("T" type (:type "class") nil nil)
                                                    ("int" type (:typevar "N") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("new_seq" type
                                                       (:typedef ("mpl::push_back::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10108 10162])
                                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10210 10220]))                                                  )
                                                (reparse-symbol namespacesubparts) [10050 10223])
                                            ("append_N" type
                                               (:template 
                                                  ( ("Seq" type (:type "class") nil nil)
                                                    ("T" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("Seq" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10287 10304]))                                                  
                                                :template-specifier 
                                                  ( ("Seq" type nil nil nil)
                                                    ("T" type nil nil nil)
                                                    ("0"))                                                  )
                                                (reparse-symbol namespacesubparts) [10225 10307])
                                            ("default_args" type
                                               (:template 
                                                  ( ("bool" type (:typevar "f") nil nil)
                                                    ("bool" type (:typevar "d") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("arg1" type
                                                       (:typedef ("promote_float" type
                                                             (:template-specifier 
                                                                ( ("false" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10489 10523])
                                                    ("arg2" type
                                                       (:typedef ("promote_double" type
                                                             (:template-specifier 
                                                                ( ("false" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10527 10562]))                                                  )
                                                (reparse-symbol namespacesubparts) [10438 10565])
                                            ("default_args" type
                                               (:type "struct"
                                                :members 
                                                  ( ("arg1" type
                                                       (:typedef ("default_policy" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10618 10646])
                                                    ("arg2" type
                                                       (:typedef ("default_policy" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10650 10678]))                                                  
                                                :template-specifier 
                                                  ( ("false" type nil nil nil)
                                                    ("false" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [10567 10681])
                                            ("default_args" type
                                               (:type "struct"
                                                :members 
                                                  ( ("arg1" type
                                                       (:typedef ("promote_float" type
                                                             (:template-specifier 
                                                                ( ("false" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10733 10767])
                                                    ("arg2" type
                                                       (:typedef ("default_policy" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10771 10799]))                                                  
                                                :template-specifier 
                                                  ( ("true" type nil nil nil)
                                                    ("false" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [10683 10802])
                                            ("default_args" type
                                               (:type "struct"
                                                :members 
                                                  ( ("arg1" type
                                                       (:typedef ("promote_double" type
                                                             (:template-specifier 
                                                                ( ("false" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10854 10889])
                                                    ("arg2" type
                                                       (:typedef ("default_policy" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10893 10921]))                                                  
                                                :template-specifier 
                                                  ( ("false" type nil nil nil)
                                                    ("true" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [10804 10924])
                                            ("forwarding_arg1" variable (:type ("arg1" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [11015 11036])
                                            ("forwarding_arg2" variable (:type ("arg2" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [11126 11147]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7956 11150])
                                    ("policy" type
                                       (:template 
                                          ( ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil)
                                            ("A8" type (:type "class") nil nil)
                                            ("A9" type (:type "class") nil nil)
                                            ("A10" type (:type "class") nil nil)
                                            ("A11" type (:type "class") nil nil)
                                            ("A12" type (:type "class") nil nil)
                                            ("A13" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [11753 11761])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11833 11891]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [11811 11892])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11918 11976]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [11896 11977])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12003 12061]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [11981 12062])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12088 12146]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12066 12147])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12173 12231]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12151 12232])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12258 12316]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12236 12317])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12343 12401]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12321 12402])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12428 12486]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12406 12487])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12513 12571]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12491 12572])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12598 12657]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12576 12658])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12684 12743]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12662 12744])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12770 12829]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12748 12830])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12856 12915]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12834 12916])
                                            ("arg_list" type
                                               (:typedef ("mpl::list" type
                                                     (:template-specifier 
                                                        ( ("A1" type nil nil nil)
                                                          ("A2" type nil nil nil)
                                                          ("A3" type nil nil nil)
                                                          ("A4" type nil nil nil)
                                                          ("A5" type nil nil nil)
                                                          ("A6" type nil nil nil)
                                                          ("A7" type nil nil nil)
                                                          ("A8" type nil nil nil)
                                                          ("A9" type nil nil nil)
                                                          ("A10" type nil nil nil)
                                                          ("A11" type nil nil nil)
                                                          ("A12" type nil nil nil)
                                                          ("A13" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12965 13036])
                                            ("public" label nil (reparse-symbol classsubparts) [13038 13045])
                                            ("domain_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13049 13160])
                                            ("pole_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13164 13269])
                                            ("overflow_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13273 13390])
                                            ("underflow_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13394 13514])
                                            ("denorm_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13518 13629])
                                            ("evaluation_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13633 13756])
                                            ("rounding_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13760 13877])
                                            ("indeterminate_result_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13881 14034])
                                            ("private" label nil (reparse-symbol classsubparts) [14035 14043])
                                            ("digits10_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14093 14192])
                                            ("bits_precision_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14196 14299])
                                            ("public" label nil (reparse-symbol classsubparts) [14300 14307])
                                            ("precision_type" type
                                               (:typedef ("detail::precision::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14311 14403])
                                            ("promote_float_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14445 14559])
                                            ("promote_double_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14563 14680])
                                            ("discrete_quantile_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14722 14848])
                                            ("assert_undefined_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14907 15030])
                                            ("max_series_iterations_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15068 15206])
                                            ("max_root_iterations_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15210 15342]))                                          )
                                        (reparse-symbol namespacesubparts) [11250 15345])
                                    ("policy" type
                                       (:type "struct"
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [15758 15765])
                                            ("domain_error_type" type
                                               (:typedef ("domain_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15769 15810])
                                            ("pole_error_type" type
                                               (:typedef ("pole_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15814 15851])
                                            ("overflow_error_type" type
                                               (:typedef ("overflow_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15855 15900])
                                            ("underflow_error_type" type
                                               (:typedef ("underflow_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15904 15951])
                                            ("denorm_error_type" type
                                               (:typedef ("denorm_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15955 15996])
                                            ("evaluation_error_type" type
                                               (:typedef ("evaluation_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16000 16049])
                                            ("rounding_error_type" type
                                               (:typedef ("rounding_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16053 16098])
                                            ("indeterminate_result_error_type" type
                                               (:typedef ("indeterminate_result_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16102 16171])
                                            ("precision_type" type
                                               (:typedef ("digits2" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16211 16244])
                                            ("promote_float_type" type
                                               (:typedef ("promote_float" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16336 16379])
                                            ("promote_double_type" type
                                               (:typedef ("promote_double" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16383 16428])
                                            ("discrete_quantile_type" type
                                               (:typedef ("discrete_quantile" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16432 16483])
                                            ("assert_undefined_type" type
                                               (:typedef ("assert_undefined" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16487 16536])
                                            ("max_series_iterations_type" type
                                               (:typedef ("max_series_iterations" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16540 16599])
                                            ("max_root_iterations_type" type
                                               (:typedef ("max_root_iterations" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16603 16658]))                                          
                                        :template-specifier 
                                          ( ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [15554 16661])
                                    ("policy" type
                                       (:type "struct"
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [16885 16892])
                                            ("domain_error_type" type
                                               (:typedef ("domain_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16896 16937])
                                            ("pole_error_type" type
                                               (:typedef ("pole_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16941 16978])
                                            ("overflow_error_type" type
                                               (:typedef ("overflow_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16982 17027])
                                            ("underflow_error_type" type
                                               (:typedef ("underflow_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17031 17078])
                                            ("denorm_error_type" type
                                               (:typedef ("denorm_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17082 17123])
                                            ("evaluation_error_type" type
                                               (:typedef ("evaluation_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17127 17176])
                                            ("rounding_error_type" type
                                               (:typedef ("rounding_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17180 17225])
                                            ("indeterminate_result_error_type" type
                                               (:typedef ("indeterminate_result_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17229 17298])
                                            ("precision_type" type
                                               (:typedef ("digits2" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17338 17371])
                                            ("promote_float_type" type
                                               (:typedef ("promote_float" type
                                                     (:template-specifier 
                                                        ( ("false" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17463 17511])
                                            ("promote_double_type" type
                                               (:typedef ("promote_double" type
                                                     (:template-specifier 
                                                        ( ("false" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17515 17565])
                                            ("discrete_quantile_type" type
                                               (:typedef ("discrete_quantile" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17569 17620])
                                            ("assert_undefined_type" type
                                               (:typedef ("assert_undefined" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17624 17673])
                                            ("max_series_iterations_type" type
                                               (:typedef ("max_series_iterations" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17677 17736])
                                            ("max_root_iterations_type" type
                                               (:typedef ("max_root_iterations" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17740 17795]))                                          
                                        :template-specifier 
                                          ( ("detail::forwarding_arg1" type nil nil nil)
                                            ("detail::forwarding_arg2" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [16663 17798])
                                    ("normalise" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil)
                                            ("A8" type (:type "class") nil nil)
                                            ("A9" type (:type "class") nil nil)
                                            ("A10" type (:type "class") nil nil)
                                            ("A11" type (:type "class") nil nil)
                                            ("A12" type (:type "class") nil nil)
                                            ("A13" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [18331 18339])
                                            ("arg_list" type
                                               (:typedef ("mpl::list" type
                                                     (:template-specifier 
                                                        ( ("A1" type nil nil nil)
                                                          ("A2" type nil nil nil)
                                                          ("A3" type nil nil nil)
                                                          ("A4" type nil nil nil)
                                                          ("A5" type nil nil nil)
                                                          ("A6" type nil nil nil)
                                                          ("A7" type nil nil nil)
                                                          ("A8" type nil nil nil)
                                                          ("A9" type nil nil nil)
                                                          ("A10" type nil nil nil)
                                                          ("A11" type nil nil nil)
                                                          ("A12" type nil nil nil)
                                                          ("A13" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [18343 18414])
                                            ("domain_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18526 18549])
                                            ("pole_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18657 18678])
                                            ("overflow_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18794 18819])
                                            ("underflow_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18937 18963])
                                            ("denorm_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19075 19098])
                                            ("evaluation_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19218 19245])
                                            ("rounding_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19361 19386])
                                            ("indeterminate_result_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19526 19563])
                                            ("digits10_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [19613 19712])
                                            ("bits_precision_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19816 19841])
                                            ("precision_type" type
                                               (:typedef ("detail::precision::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [19845 19937])
                                            ("promote_float_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20089 20113])
                                            ("promote_double_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20229 20254])
                                            ("discrete_quantile_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20414 20442])
                                            ("assert_undefined_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20617 20644])
                                            ("max_series_iterations_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20807 20839])
                                            ("max_root_iterations_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20964 20994])
                                            ("result_list" type
                                               (:typedef ("mpl::vector" type
                                                     (:template-specifier 
                                                        ( ("domain_error_type" type nil nil nil)
                                                          ("pole_error_type" type nil nil nil)
                                                          ("overflow_error_type" type nil nil nil)
                                                          ("underflow_error_type" type nil nil nil)
                                                          ("denorm_error_type" type nil nil nil)
                                                          ("evaluation_error_type" type nil nil nil)
                                                          ("rounding_error_type" type nil nil nil)
                                                          ("indeterminate_result_error_type" type nil nil nil)
                                                          ("precision_type" type nil nil nil)
                                                          ("promote_float_type" type nil nil nil)
                                                          ("promote_double_type" type nil nil nil)
                                                          ("discrete_quantile_type" type nil nil nil)
                                                          ("assert_undefined_type" type nil nil nil)
                                                          ("max_series_iterations_type" type nil nil nil)
                                                          ("max_root_iterations_type" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [21051 21507])
                                            ("reduced_list" type
                                               (:typedef ("mpl::remove_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [21587 21687])
                                            ("result_type" type
                                               (:typedef ("detail::append_N::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [21741 21871])
                                            ("public" label nil (reparse-symbol classsubparts) [21872 21879])
                                            ("type" variable (:type "int") (reparse-symbol classsubparts) [22657 22662]))                                          )
                                        (reparse-symbol namespacesubparts) [17800 22665])
                                    ("normalise" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("policy" type
                                                     (:template-specifier 
                                                        ( ("detail::forwarding_arg1" type nil nil nil)
                                                          ("detail::forwarding_arg2" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [23094 23164]))                                          
                                        :template-specifier 
                                          ( ("policy" type nil nil nil)
                                            ("promote_float" type (:template-specifier 
                                              ( ("false" type nil nil nil))                                              ) nil nil)
                                            ("promote_double" type (:template-specifier 
                                              ( ("false" type nil nil nil))                                              ) nil nil)
                                            ("discrete_quantile" type nil nil nil)
                                            ("assert_undefined" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [22739 23167])
                                    ("normalise" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("policy" type
                                                     (:template-specifier 
                                                        ( ("detail::forwarding_arg1" type nil nil nil)
                                                          ("detail::forwarding_arg2" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [23569 23639]))                                          
                                        :template-specifier 
                                          ( ("policy" type (:template-specifier 
                                              ( ("detail::forwarding_arg1" type nil nil nil)
                                                ("detail::forwarding_arg2" type nil nil nil))                                              ) nil nil)
                                            ("promote_float" type (:template-specifier 
                                              ( ("false" type nil nil nil))                                              ) nil nil)
                                            ("promote_double" type (:template-specifier 
                                              ( ("false" type nil nil nil))                                              ) nil nil)
                                            ("discrete_quantile" type nil nil nil)
                                            ("assert_undefined" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [23169 23642])
                                    ("make_policy" function
                                       (:typemodifiers ("inline")
                                        :type ("policy" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [23644 23696])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [23776 23786]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [23759 23880])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [23974 23984])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [23985 23995]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [23957 24093])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24201 24211])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24212 24222])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24223 24233]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [24184 24335])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24457 24467])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24468 24478])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24479 24489])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24490 24500]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [24440 24606])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24742 24752])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24753 24763])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24764 24774])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24775 24785])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24786 24796]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [24725 24906])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25056 25066])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25067 25077])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25078 25088])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25089 25099])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25100 25110])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25111 25121]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [25039 25235])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25399 25409])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25410 25420])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25421 25431])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25432 25442])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25443 25453])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25454 25464])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25465 25475]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [25382 25593])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25771 25781])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25782 25792])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25793 25803])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25804 25814])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25815 25825])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25826 25836])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25837 25847])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25848 25858]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [25754 25980])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26172 26182])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26183 26193])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26194 26204])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26205 26215])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26216 26226])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26227 26237])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26238 26248])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26249 26259])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A9" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26260 26270]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [26155 26396])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26604 26614])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26615 26625])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26626 26636])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26637 26647])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26648 26658])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26659 26669])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26670 26680])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26681 26691])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A9" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26692 26702])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A10" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26703 26714]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [26587 26845])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27069 27079])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27080 27090])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27091 27101])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27102 27112])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27113 27123])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27124 27134])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27135 27145])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27146 27156])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A9" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27157 27167])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A10" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27168 27179])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A11" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27180 27191]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [27052 27325])
                                    ("evaluation" type
                                       (:template 
                                          ( ("Real" type (:type "class") nil nil)
                                            ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("Real" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [27438 27456]))                                          )
                                        (reparse-symbol namespacesubparts) [27379 27459])
                                    ("evaluation" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27602 27612]))                                          
                                        :template-specifier 
                                          ( ("float" type nil nil nil)
                                            ("Policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [27461 27615])
                                    ("evaluation" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27766 27776]))                                          
                                        :template-specifier 
                                          ( ("double" type nil nil nil)
                                            ("Policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [27617 27779])
                                    ("precision" type
                                       (:template 
                                          ( ("Real" type (:type "class") nil nil)
                                            ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [29207 29372])
                                            ("precision_type" type
                                               (:typedef ("Policy::precision_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [29397 29452])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29994 30004]))                                          )
                                        (reparse-symbol namespacesubparts) [29149 30747])
                                    ("detail" type
                                       (:members 
                                          ( ("digits_imp" function
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Policy" type (:type "class") nil nil))                                                  
                                                :type "int"
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("mpl::true_" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [30970 30988]))                                                  
                                                :typemodifiers ("inline"))
                                                (reparse-symbol namespacesubparts) [30915 31275])
                                            ("digits_imp" function
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Policy" type (:type "class") nil nil))                                                  
                                                :type "int"
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("mpl::false_" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [31332 31351]))                                                  
                                                :typemodifiers ("inline"))
                                                (reparse-symbol namespacesubparts) [31277 31385]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [30896 31388])
                                    ("digits" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Policy" type (:type "class") nil nil))                                          
                                        :type "int"
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_MATH_EXPLICIT_TEMPLATE_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31461 31497]))                                          
                                        :typemodifiers ("inline"))
                                        (reparse-symbol namespacesubparts) [31410 31629])
                                    ("get_max_series_iterations" function
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "unsigned long"
                                        :typemodifiers ("inline"))
                                        (reparse-symbol namespacesubparts) [31631 31801])
                                    ("get_max_root_iterations" function
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "unsigned long"
                                        :typemodifiers ("inline"))
                                        (reparse-symbol namespacesubparts) [31803 31969])
                                    ("detail" type
                                       (:members 
                                          ( ("series_factor_calc" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Digits" type (:type "class") nil nil)
                                                    ("Small" type (:type "class") nil nil)
                                                    ("Default" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("get" function
                                                       (:typemodifiers ("static")
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [32082 32153]))                                                  )
                                                (reparse-symbol namespacesubparts) [31990 32156])
                                            ("series_factor_calc" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Digits" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("get" function
                                                       (:typemodifiers ("static")
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [32257 32328]))                                                  
                                                :template-specifier 
                                                  ( ("T" type nil nil nil)
                                                    ("Digits" type nil nil nil)
                                                    ("mpl::true_" type nil nil nil)
                                                    ("mpl::true_" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [32158 32331])
                                            ("series_factor_calc" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Digits" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("get" function
                                                       (:typemodifiers ("static")
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [32432 32590]))                                                  
                                                :template-specifier 
                                                  ( ("T" type nil nil nil)
                                                    ("Digits" type nil nil nil)
                                                    ("mpl::true_" type nil nil nil)
                                                    ("mpl::false_" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [32332 32593])
                                            ("series_factor_calc" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Digits" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("get" function
                                                       (:typemodifiers ("static")
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [32694 32765]))                                                  
                                                :template-specifier 
                                                  ( ("T" type nil nil nil)
                                                    ("Digits" type nil nil nil)
                                                    ("mpl::false_" type nil nil nil)
                                                    ("mpl::true_" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [32594 32768])
                                            ("get_epsilon_imp" function
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Policy" type (:type "class") nil nil))                                                  
                                                :type ("T" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("mpl::true_" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [32828 32846]))                                                  
                                                :typemodifiers ("inline"))
                                                (reparse-symbol namespacesubparts) [32770 33489])
                                            ("get_epsilon_imp" function
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Policy" type (:type "class") nil nil))                                                  
                                                :type ("T" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("mpl::false_" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [33549 33568]))                                                  
                                                :typemodifiers ("inline"))
                                                (reparse-symbol namespacesubparts) [33491 33603]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [31971 33606])
                                    ("get_epsilon" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Policy" type (:type "class") nil nil))                                          
                                        :type ("T" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_MATH_EXPLICIT_TEMPLATE_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33682 33718]))                                          
                                        :typemodifiers ("inline"))
                                        (reparse-symbol namespacesubparts) [33628 33897])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_policy" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil)
                                                    ("A2" type (:type "class") nil nil)
                                                    ("A3" type (:type "class") nil nil)
                                                    ("A4" type (:type "class") nil nil)
                                                    ("A5" type (:type "class") nil nil)
                                                    ("A6" type (:type "class") nil nil)
                                                    ("A7" type (:type "class") nil nil)
                                                    ("A8" type (:type "class") nil nil)
                                                    ("A9" type (:type "class") nil nil)
                                                    ("A10" type (:type "class") nil nil)
                                                    ("A11" type (:type "class") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("policy" type
                                                             (:template-specifier 
                                                                ( ("A1" type nil nil nil)
                                                                  ("A2" type nil nil nil)
                                                                  ("A3" type nil nil nil)
                                                                  ("A4" type nil nil nil)
                                                                  ("A5" type nil nil nil)
                                                                  ("A6" type nil nil nil)
                                                                  ("A7" type nil nil nil)
                                                                  ("A8" type nil nil nil)
                                                                  ("A9" type nil nil nil)
                                                                  ("A10" type nil nil nil)
                                                                  ("A11" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [34162 34212]))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) [33918 34213])
                                            ("test_is_policy" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [34236 34240]))                                                  
                                                :type "double")
                                                (reparse-symbol namespacesubparts) [34214 34241])
                                            ("is_policy_imp" type
                                               (:template 
                                                  ( ("P" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("BOOST_STATIC_CONSTANT" function
                                                       (:prototype-flag t
                                                        :arguments 
                                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [34310 34315])
                                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34316 34406]))                                                          
                                                        :type "int")
                                                        (reparse-symbol classsubparts) [34288 34408]))                                                  )
                                                (reparse-symbol namespacesubparts) [34243 34411]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [33899 34414])
                                    ("constructor_error_check" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("domain_error_type" type
                                               (:typedef ("Policy::domain_error_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [34658 34719])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34885 34895]))                                          )
                                        (reparse-symbol namespacesubparts) [34598 34898])
                                    ("method_error_check" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("domain_error_type" type
                                               (:typedef ("Policy::domain_error_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [34955 35016])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35182 35192]))                                          )
                                        (reparse-symbol namespacesubparts) [34900 35195]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1130 35198]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [953 35199]))                  
                :type "namespace")
                nil [936 35200]))          
      :file "policy.hpp"
      :pointmax 35251
      :fsize 35250
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((punctuation 35181 . 35182) (punctuation 35180 . 35181) (punctuation 35179 . 35180) (symbol 35174 . 35179) (punctuation 35173 . 35174) (punctuation 35172 . 35173) (symbol 35169 . 35172) (punctuation 35161 . 35162) (symbol 35155 . 35161) (punctuation 35154 . 35155) (punctuation 35153 . 35154) (symbol 35150 . 35153) (punctuation 35142 . 35143) (semantic-list 35102 . 35142) (punctuation 35100 . 35101) (punctuation 35099 . 35100) (semantic-list 35054 . 35098) (punctuation 35046 . 35047) (symbol 35042 . 35046) (punctuation 35041 . 35042) (punctuation 35040 . 35041) (symbol 35037 . 35040) (TYPENAME 35028 . 35036) (TYPEDEF 35020 . 35027) (punctuation 34884 . 34885) (punctuation 34883 . 34884) (punctuation 34882 . 34883) (symbol 34876 . 34882) (punctuation 34875 . 34876) (punctuation 34874 . 34875) (symbol 34871 . 34874) (punctuation 34863 . 34864) (symbol 34858 . 34863) (punctuation 34857 . 34858) (punctuation 34856 . 34857) (symbol 34853 . 34856) (punctuation 34845 . 34846) (semantic-list 34805 . 34845) (punctuation 34803 . 34804) (punctuation 34802 . 34803) (semantic-list 34757 . 34801) (punctuation 34749 . 34750) (symbol 34745 . 34749) (punctuation 34744 . 34745) (punctuation 34743 . 34744) (symbol 34740 . 34743) (TYPENAME 34731 . 34739) (TYPEDEF 34723 . 34730) (punctuation 34533 . 34534) (semantic-list 34531 . 34533) (punctuation 34529 . 34530) (symbol 34524 . 34529) (punctuation 34523 . 34524) (punctuation 34522 . 34523) (punctuation 34521 . 34522) (symbol 34520 . 34521) (punctuation 34519 . 34520) (symbol 34506 . 34519) (punctuation 34505 . 34506) (punctuation 34504 . 34505) (symbol 34498 . 34504) (punctuation 34497 . 34498) (punctuation 34496 . 34497) (symbol 34488 . 34496) (punctuation 34487 . 34488) (punctuation 34486 . 34487) (symbol 34482 . 34486) (punctuation 34481 . 34482) (punctuation 34480 . 34481) (symbol 34475 . 34480) (punctuation 34474 . 34475) (punctuation 34473 . 34474) (punctuation 34471 . 34472) (symbol 34466 . 34471) (punctuation 34465 . 34466) (punctuation 34464 . 34465) (symbol 34461 . 34464) (PUBLIC 34454 . 34460) (punctuation 34452 . 34453) (symbol 34442 . 34451) (STRUCT 34435 . 34441) (punctuation 34433 . 34434) (symbol 34432 . 34433) (CLASS 34426 . 34431) (punctuation 34425 . 34426) (TEMPLATE 34416 . 34424) (semantic-list 33715 . 33718) (semantic-list 31494 . 31497) (punctuation 29993 . 29994) (punctuation 29992 . 29993) (punctuation 29991 . 29992) (symbol 29983 . 29987) (punctuation 29982 . 29983) (punctuation 29981 . 29982) (punctuation 29980 . 29981) (symbol 29959 . 29973) (punctuation 29909 . 29910) (punctuation 29908 . 29909) (symbol 29902 . 29908) (punctuation 29901 . 29902) (punctuation 29900 . 29901) (punctuation 29899 . 29900) (symbol 29895 . 29899) (punctuation 29894 . 29895) (symbol 29880 . 29894) (punctuation 29879 . 29880) (punctuation 29878 . 29879) (symbol 29875 . 29878) (punctuation 29874 . 29875) (punctuation 29873 . 29874) (punctuation 29871 . 29872) (symbol 29864 . 29871) (punctuation 29798 . 29799) (semantic-list 29684 . 29798) (punctuation 29673 . 29674) (symbol 29669 . 29673) (punctuation 29668 . 29669) (punctuation 29667 . 29668) (symbol 29664 . 29667) (TYPENAME 29655 . 29663) (punctuation 29647 . 29648) (symbol 29633 . 29647) (punctuation 29588 . 29589) (semantic-list 29490 . 29588) (punctuation 29482 . 29483) (symbol 29478 . 29482) (punctuation 29477 . 29478) (punctuation 29476 . 29477) (symbol 29473 . 29476) (TYPENAME 29464 . 29472) (TYPEDEF 29456 . 29463) (semantic-list 29272 . 29370) (punctuation 29270 . 29271) (punctuation 29269 . 29270) (semantic-list 29227 . 29268) (punctuation 27765 . 27766) (punctuation 27764 . 27765) (punctuation 27763 . 27764) (DOUBLE 27757 . 27763) (punctuation 27755 . 27756) (DOUBLE 27749 . 27755) (LONG 27744 . 27748) (punctuation 27742 . 27743) (symbol 27723 . 27742) (punctuation 27722 . 27723) (punctuation 27721 . 27722) (symbol 27715 . 27721) (TYPENAME 27706 . 27714) (punctuation 27705 . 27706) (symbol 27702 . 27705) (punctuation 27701 . 27702) (punctuation 27700 . 27701) (symbol 27697 . 27700) (TYPENAME 27688 . 27696) (TYPEDEF 27680 . 27687) (punctuation 27601 . 27602) (punctuation 27600 . 27601) (punctuation 27599 . 27600) (FLOAT 27594 . 27599) (punctuation 27592 . 27593) (DOUBLE 27586 . 27592) (punctuation 27584 . 27585) (symbol 27566 . 27584) (punctuation 27565 . 27566) (punctuation 27564 . 27565) (symbol 27558 . 27564) (TYPENAME 27549 . 27557) (punctuation 27548 . 27549) (symbol 27545 . 27548) (punctuation 27544 . 27545) (punctuation 27543 . 27544) (symbol 27540 . 27543) (TYPENAME 27531 . 27539) (TYPEDEF 27523 . 27530) (punctuation 27051 . 27052) (punctuation 27050 . 27051) (punctuation 27049 . 27050) (symbol 27046 . 27049) (punctuation 27044 . 27045) (symbol 27041 . 27044) (punctuation 27039 . 27040) (symbol 27037 . 27039) (punctuation 27035 . 27036) (symbol 27033 . 27035) (punctuation 27031 . 27032) (symbol 27029 . 27031) (punctuation 27027 . 27028) (symbol 27025 . 27027) (punctuation 27023 . 27024) (symbol 27021 . 27023) (punctuation 27019 . 27020) (symbol 27017 . 27019) (punctuation 27015 . 27016) (symbol 27013 . 27015) (punctuation 27011 . 27012) (symbol 27009 . 27011) (punctuation 27007 . 27008) (symbol 27005 . 27007) (punctuation 27003 . 27004) (punctuation 27002 . 27003) (punctuation 27001 . 27002) (symbol 26995 . 27001) (punctuation 26994 . 26995) (symbol 26985 . 26994) (TYPENAME 26976 . 26984) (INLINE 26969 . 26975) (punctuation 26967 . 26968) (symbol 26964 . 26967) (CLASS 26958 . 26963) (punctuation 26956 . 26957) (symbol 26953 . 26956) (CLASS 26947 . 26952) (punctuation 26945 . 26946) (symbol 26943 . 26945) (CLASS 26937 . 26942) (punctuation 26935 . 26936) (symbol 26933 . 26935) (CLASS 26927 . 26932) (punctuation 26925 . 26926) (symbol 26923 . 26925) (CLASS 26917 . 26922) (punctuation 26915 . 26916) (symbol 26913 . 26915) (CLASS 26907 . 26912) (punctuation 26905 . 26906) (symbol 26903 . 26905) (CLASS 26897 . 26902) (punctuation 26895 . 26896) (symbol 26893 . 26895) (CLASS 26887 . 26892) (punctuation 26885 . 26886) (symbol 26883 . 26885) (CLASS 26877 . 26882) (punctuation 26875 . 26876) (symbol 26873 . 26875) (CLASS 26867 . 26872) (punctuation 26865 . 26866) (symbol 26863 . 26865) (CLASS 26857 . 26862) (punctuation 26856 . 26857) (TEMPLATE 26847 . 26855) (punctuation 26586 . 26587) (punctuation 26585 . 26586) (punctuation 26584 . 26585) (symbol 26581 . 26584) (punctuation 26579 . 26580) (symbol 26577 . 26579) (punctuation 26575 . 26576) (symbol 26573 . 26575) (punctuation 26571 . 26572) (symbol 26569 . 26571) (punctuation 26567 . 26568) (symbol 26565 . 26567) (punctuation 26563 . 26564) (symbol 26561 . 26563) (punctuation 26559 . 26560) (symbol 26557 . 26559) (punctuation 26555 . 26556) (symbol 26553 . 26555) (punctuation 26551 . 26552) (symbol 26549 . 26551) (punctuation 26547 . 26548) (symbol 26545 . 26547) (punctuation 26543 . 26544) (punctuation 26542 . 26543) (punctuation 26541 . 26542) (symbol 26535 . 26541) (punctuation 26534 . 26535) (symbol 26525 . 26534) (TYPENAME 26516 . 26524) (INLINE 26509 . 26515) (punctuation 26507 . 26508) (symbol 26504 . 26507) (CLASS 26498 . 26503) (punctuation 26496 . 26497) (symbol 26494 . 26496) (CLASS 26488 . 26493) (punctuation 26486 . 26487) (symbol 26484 . 26486) (CLASS 26478 . 26483) (punctuation 26476 . 26477) (symbol 26474 . 26476) (CLASS 26468 . 26473) (punctuation 26466 . 26467) (symbol 26464 . 26466) (CLASS 26458 . 26463) (punctuation 26456 . 26457) (symbol 26454 . 26456) (CLASS 26448 . 26453) (punctuation 26446 . 26447) (symbol 26444 . 26446) (CLASS 26438 . 26443) (punctuation 26436 . 26437) (symbol 26434 . 26436) (CLASS 26428 . 26433) (punctuation 26426 . 26427) (symbol 26424 . 26426) (CLASS 26418 . 26423) (punctuation 26416 . 26417) (symbol 26414 . 26416) (CLASS 26408 . 26413) (punctuation 26407 . 26408) (TEMPLATE 26398 . 26406) (punctuation 26154 . 26155) (punctuation 26153 . 26154) (punctuation 26152 . 26153) (symbol 26150 . 26152) (punctuation 26148 . 26149) (symbol 26146 . 26148) (punctuation 26144 . 26145) (symbol 26142 . 26144) (punctuation 26140 . 26141) (symbol 26138 . 26140) (punctuation 26136 . 26137) (symbol 26134 . 26136) (punctuation 26132 . 26133) (symbol 26130 . 26132) (punctuation 26128 . 26129) (symbol 26126 . 26128) (punctuation 26124 . 26125) (symbol 26122 . 26124) (punctuation 26120 . 26121) (symbol 26118 . 26120) (punctuation 26116 . 26117) (punctuation 26115 . 26116) (punctuation 26114 . 26115) (symbol 26108 . 26114) (punctuation 26107 . 26108) (symbol 26098 . 26107) (TYPENAME 26089 . 26097) (INLINE 26082 . 26088) (punctuation 26080 . 26081) (symbol 26078 . 26080) (CLASS 26072 . 26077) (punctuation 26070 . 26071) (symbol 26068 . 26070) (CLASS 26062 . 26067) (punctuation 26060 . 26061) (symbol 26058 . 26060) (CLASS 26052 . 26057) (punctuation 26050 . 26051) (symbol 26048 . 26050) (CLASS 26042 . 26047) (punctuation 26040 . 26041) (symbol 26038 . 26040) (CLASS 26032 . 26037) (punctuation 26030 . 26031) (symbol 26028 . 26030) (CLASS 26022 . 26027) (punctuation 26020 . 26021) (symbol 26018 . 26020) (CLASS 26012 . 26017) (punctuation 26010 . 26011) (symbol 26008 . 26010) (CLASS 26002 . 26007) (punctuation 26000 . 26001) (symbol 25998 . 26000) (CLASS 25992 . 25997) (punctuation 25991 . 25992) (TEMPLATE 25982 . 25990) (punctuation 25753 . 25754) (punctuation 25752 . 25753) (punctuation 25751 . 25752) (symbol 25749 . 25751) (punctuation 25747 . 25748) (symbol 25745 . 25747) (punctuation 25743 . 25744) (symbol 25741 . 25743) (punctuation 25739 . 25740) (symbol 25737 . 25739) (punctuation 25735 . 25736) (symbol 25733 . 25735) (punctuation 25731 . 25732) (symbol 25729 . 25731) (punctuation 25727 . 25728) (symbol 25725 . 25727) (punctuation 25723 . 25724) (symbol 25721 . 25723) (punctuation 25719 . 25720) (punctuation 25718 . 25719) (punctuation 25717 . 25718) (symbol 25711 . 25717) (punctuation 25710 . 25711) (symbol 25701 . 25710) (TYPENAME 25692 . 25700) (INLINE 25685 . 25691) (punctuation 25683 . 25684) (symbol 25681 . 25683) (CLASS 25675 . 25680) (punctuation 25673 . 25674) (symbol 25671 . 25673) (CLASS 25665 . 25670) (punctuation 25663 . 25664) (symbol 25661 . 25663) (CLASS 25655 . 25660) (punctuation 25653 . 25654) (symbol 25651 . 25653) (CLASS 25645 . 25650) (punctuation 25643 . 25644) (symbol 25641 . 25643) (CLASS 25635 . 25640) (punctuation 25633 . 25634) (symbol 25631 . 25633) (CLASS 25625 . 25630) (punctuation 25623 . 25624) (symbol 25621 . 25623) (CLASS 25615 . 25620) (punctuation 25613 . 25614) (symbol 25611 . 25613) (CLASS 25605 . 25610) (punctuation 25604 . 25605) (TEMPLATE 25595 . 25603) (punctuation 25381 . 25382) (punctuation 25380 . 25381) (punctuation 25379 . 25380) (symbol 25377 . 25379) (punctuation 25375 . 25376) (symbol 25373 . 25375) (punctuation 25371 . 25372) (symbol 25369 . 25371) (punctuation 25367 . 25368) (symbol 25365 . 25367) (punctuation 25363 . 25364) (symbol 25361 . 25363) (punctuation 25359 . 25360) (symbol 25357 . 25359) (punctuation 25355 . 25356) (symbol 25353 . 25355) (punctuation 25351 . 25352) (punctuation 25350 . 25351) (punctuation 25349 . 25350) (symbol 25343 . 25349) (punctuation 25342 . 25343) (symbol 25333 . 25342) (TYPENAME 25324 . 25332) (INLINE 25317 . 25323) (punctuation 25315 . 25316) (symbol 25313 . 25315) (CLASS 25307 . 25312) (punctuation 25305 . 25306) (symbol 25303 . 25305) (CLASS 25297 . 25302) (punctuation 25295 . 25296) (symbol 25293 . 25295) (CLASS 25287 . 25292) (punctuation 25285 . 25286) (symbol 25283 . 25285) (CLASS 25277 . 25282) (punctuation 25275 . 25276) (symbol 25273 . 25275) (CLASS 25267 . 25272) (punctuation 25265 . 25266) (symbol 25263 . 25265) (CLASS 25257 . 25262) (punctuation 25255 . 25256) (symbol 25253 . 25255) (CLASS 25247 . 25252) (punctuation 25246 . 25247) (TEMPLATE 25237 . 25245) (punctuation 25038 . 25039) (punctuation 25037 . 25038) (punctuation 25036 . 25037) (symbol 25034 . 25036) (punctuation 25032 . 25033) (symbol 25030 . 25032) (punctuation 25028 . 25029) (symbol 25026 . 25028) (punctuation 25024 . 25025) (symbol 25022 . 25024) (punctuation 25020 . 25021) (symbol 25018 . 25020) (punctuation 25016 . 25017) (symbol 25014 . 25016) (punctuation 25012 . 25013) (punctuation 25011 . 25012) (punctuation 25010 . 25011) (symbol 25004 . 25010) (punctuation 25003 . 25004) (symbol 24994 . 25003) (TYPENAME 24985 . 24993) (INLINE 24978 . 24984) (punctuation 24976 . 24977) (symbol 24974 . 24976) (CLASS 24968 . 24973) (punctuation 24966 . 24967) (symbol 24964 . 24966) (CLASS 24958 . 24963) (punctuation 24956 . 24957) (symbol 24954 . 24956) (CLASS 24948 . 24953) (punctuation 24946 . 24947) (symbol 24944 . 24946) (CLASS 24938 . 24943) (punctuation 24936 . 24937) (symbol 24934 . 24936) (CLASS 24928 . 24933) (punctuation 24926 . 24927) (symbol 24924 . 24926) (CLASS 24918 . 24923) (punctuation 24917 . 24918) (TEMPLATE 24908 . 24916) (punctuation 24724 . 24725) (punctuation 24723 . 24724) (punctuation 24722 . 24723) (symbol 24720 . 24722) (punctuation 24718 . 24719) (symbol 24716 . 24718) (punctuation 24714 . 24715) (symbol 24712 . 24714) (punctuation 24710 . 24711) (symbol 24708 . 24710) (punctuation 24706 . 24707) (symbol 24704 . 24706) (punctuation 24702 . 24703) (punctuation 24701 . 24702) (punctuation 24700 . 24701) (symbol 24694 . 24700) (punctuation 24693 . 24694) (symbol 24684 . 24693) (TYPENAME 24675 . 24683) (INLINE 24668 . 24674) (punctuation 24666 . 24667) (symbol 24664 . 24666) (CLASS 24658 . 24663) (punctuation 24656 . 24657) (symbol 24654 . 24656) (CLASS 24648 . 24653) (punctuation 24646 . 24647) (symbol 24644 . 24646) (CLASS 24638 . 24643) (punctuation 24636 . 24637) (symbol 24634 . 24636) (CLASS 24628 . 24633) (punctuation 24626 . 24627) (symbol 24624 . 24626) (CLASS 24618 . 24623) (punctuation 24617 . 24618) (TEMPLATE 24608 . 24616) (punctuation 24439 . 24440) (punctuation 24438 . 24439) (punctuation 24437 . 24438) (symbol 24435 . 24437) (punctuation 24433 . 24434) (symbol 24431 . 24433) (punctuation 24429 . 24430) (symbol 24427 . 24429) (punctuation 24425 . 24426) (symbol 24423 . 24425) (punctuation 24421 . 24422) (punctuation 24420 . 24421) (punctuation 24419 . 24420) (symbol 24413 . 24419) (punctuation 24412 . 24413) (symbol 24403 . 24412) (TYPENAME 24394 . 24402) (INLINE 24387 . 24393) (punctuation 24385 . 24386) (symbol 24383 . 24385) (CLASS 24377 . 24382) (punctuation 24375 . 24376) (symbol 24373 . 24375) (CLASS 24367 . 24372) (punctuation 24365 . 24366) (symbol 24363 . 24365) (CLASS 24357 . 24362) (punctuation 24355 . 24356) (symbol 24353 . 24355) (CLASS 24347 . 24352) (punctuation 24346 . 24347) (TEMPLATE 24337 . 24345) (punctuation 24183 . 24184) (punctuation 24182 . 24183) (punctuation 24181 . 24182) (symbol 24179 . 24181) (punctuation 24177 . 24178) (symbol 24175 . 24177) (punctuation 24173 . 24174) (symbol 24171 . 24173) (punctuation 24169 . 24170) (punctuation 24168 . 24169) (punctuation 24167 . 24168) (symbol 24161 . 24167) (punctuation 24160 . 24161) (symbol 24151 . 24160) (TYPENAME 24142 . 24150) (INLINE 24135 . 24141) (punctuation 24133 . 24134) (symbol 24131 . 24133) (CLASS 24125 . 24130) (punctuation 24123 . 24124) (symbol 24121 . 24123) (CLASS 24115 . 24120) (punctuation 24113 . 24114) (symbol 24111 . 24113) (CLASS 24105 . 24110) (punctuation 24104 . 24105) (TEMPLATE 24095 . 24103) (punctuation 23956 . 23957) (punctuation 23955 . 23956) (punctuation 23954 . 23955) (symbol 23952 . 23954) (punctuation 23950 . 23951) (symbol 23948 . 23950) (punctuation 23946 . 23947) (punctuation 23945 . 23946) (punctuation 23944 . 23945) (symbol 23938 . 23944) (punctuation 23937 . 23938) (symbol 23928 . 23937) (TYPENAME 23919 . 23927) (INLINE 23912 . 23918) (punctuation 23910 . 23911) (symbol 23908 . 23910) (CLASS 23902 . 23907) (punctuation 23900 . 23901) (symbol 23898 . 23900) (CLASS 23892 . 23897) (punctuation 23891 . 23892) (TEMPLATE 23882 . 23890) (punctuation 23758 . 23759) (punctuation 23757 . 23758) (punctuation 23756 . 23757) (symbol 23754 . 23756) (punctuation 23752 . 23753) (punctuation 23751 . 23752) (punctuation 23750 . 23751) (symbol 23744 . 23750) (punctuation 23743 . 23744) (symbol 23734 . 23743) (TYPENAME 23725 . 23733) (INLINE 23718 . 23724) (punctuation 23716 . 23717) (symbol 23714 . 23716) (CLASS 23708 . 23713) (punctuation 23707 . 23708) (TEMPLATE 23698 . 23706) (punctuation 22655 . 22656) (symbol 22650 . 22654) (punctuation 22649 . 22650) (punctuation 22648 . 22649) (punctuation 22647 . 22648) (punctuation 22645 . 22646) (number 22643 . 22645) (punctuation 22642 . 22643) (symbol 22638 . 22642) (punctuation 22637 . 22638) (punctuation 22636 . 22637) (symbol 22633 . 22636) (punctuation 22631 . 22632) (symbol 22620 . 22631) (punctuation 22619 . 22620) (symbol 22617 . 22619) (punctuation 22616 . 22617) (punctuation 22615 . 22616) (symbol 22612 . 22615) (TYPENAME 22603 . 22611) (punctuation 22595 . 22596) (symbol 22591 . 22595) (punctuation 22590 . 22591) (punctuation 22589 . 22590) (punctuation 22588 . 22589) (punctuation 22586 . 22587) (number 22584 . 22586) (punctuation 22583 . 22584) (symbol 22579 . 22583) (punctuation 22578 . 22579) (punctuation 22577 . 22578) (symbol 22574 . 22577) (punctuation 22572 . 22573) (symbol 22561 . 22572) (punctuation 22560 . 22561) (symbol 22558 . 22560) (punctuation 22557 . 22558) (punctuation 22556 . 22557) (symbol 22553 . 22556) (TYPENAME 22544 . 22552) (punctuation 22536 . 22537) (symbol 22532 . 22536) (punctuation 22531 . 22532) (punctuation 22530 . 22531) (punctuation 22529 . 22530) (punctuation 22527 . 22528) (number 22525 . 22527) (punctuation 22524 . 22525) (symbol 22520 . 22524) (punctuation 22519 . 22520) (punctuation 22518 . 22519) (symbol 22515 . 22518) (punctuation 22513 . 22514) (symbol 22502 . 22513) (punctuation 22501 . 22502) (symbol 22499 . 22501) (punctuation 22498 . 22499) (punctuation 22497 . 22498) (symbol 22494 . 22497) (TYPENAME 22485 . 22493) (punctuation 22477 . 22478) (symbol 22473 . 22477) (punctuation 22472 . 22473) (punctuation 22471 . 22472) (punctuation 22470 . 22471) (punctuation 22468 . 22469) (number 22467 . 22468) (punctuation 22466 . 22467) (symbol 22462 . 22466) (punctuation 22461 . 22462) (punctuation 22460 . 22461) (symbol 22457 . 22460) (punctuation 22455 . 22456) (symbol 22444 . 22455) (punctuation 22443 . 22444) (symbol 22441 . 22443) (punctuation 22440 . 22441) (punctuation 22439 . 22440) (symbol 22436 . 22439) (TYPENAME 22427 . 22435) (punctuation 22419 . 22420) (symbol 22415 . 22419) (punctuation 22414 . 22415) (punctuation 22413 . 22414) (punctuation 22412 . 22413) (punctuation 22410 . 22411) (number 22409 . 22410) (punctuation 22408 . 22409) (symbol 22404 . 22408) (punctuation 22403 . 22404) (punctuation 22402 . 22403) (symbol 22399 . 22402) (punctuation 22397 . 22398) (symbol 22386 . 22397) (punctuation 22385 . 22386) (symbol 22383 . 22385) (punctuation 22382 . 22383) (punctuation 22381 . 22382) (symbol 22378 . 22381) (TYPENAME 22369 . 22377) (punctuation 22361 . 22362) (symbol 22357 . 22361) (punctuation 22356 . 22357) (punctuation 22355 . 22356) (punctuation 22354 . 22355) (punctuation 22352 . 22353) (number 22351 . 22352) (punctuation 22350 . 22351) (symbol 22346 . 22350) (punctuation 22345 . 22346) (punctuation 22344 . 22345) (symbol 22341 . 22344) (punctuation 22339 . 22340) (symbol 22328 . 22339) (punctuation 22327 . 22328) (symbol 22325 . 22327) (punctuation 22324 . 22325) (punctuation 22323 . 22324) (symbol 22320 . 22323) (TYPENAME 22311 . 22319) (punctuation 22303 . 22304) (symbol 22299 . 22303) (punctuation 22298 . 22299) (punctuation 22297 . 22298) (punctuation 22296 . 22297) (punctuation 22294 . 22295) (number 22293 . 22294) (punctuation 22292 . 22293) (symbol 22288 . 22292) (punctuation 22287 . 22288) (punctuation 22286 . 22287) (symbol 22283 . 22286) (punctuation 22281 . 22282) (symbol 22270 . 22281) (punctuation 22269 . 22270) (symbol 22267 . 22269) (punctuation 22266 . 22267) (punctuation 22265 . 22266) (symbol 22262 . 22265) (TYPENAME 22253 . 22261) (punctuation 22245 . 22246) (symbol 22241 . 22245) (punctuation 22240 . 22241) (punctuation 22239 . 22240) (punctuation 22238 . 22239) (punctuation 22236 . 22237) (number 22235 . 22236) (punctuation 22234 . 22235) (symbol 22230 . 22234) (punctuation 22229 . 22230) (punctuation 22228 . 22229) (symbol 22225 . 22228) (punctuation 22223 . 22224) (symbol 22212 . 22223) (punctuation 22211 . 22212) (symbol 22209 . 22211) (punctuation 22208 . 22209) (punctuation 22207 . 22208) (symbol 22204 . 22207) (TYPENAME 22195 . 22203) (punctuation 22187 . 22188) (symbol 22183 . 22187) (punctuation 22182 . 22183) (punctuation 22181 . 22182) (punctuation 22180 . 22181) (punctuation 22178 . 22179) (number 22177 . 22178) (punctuation 22176 . 22177) (symbol 22172 . 22176) (punctuation 22171 . 22172) (punctuation 22170 . 22171) (symbol 22167 . 22170) (punctuation 22165 . 22166) (symbol 22154 . 22165) (punctuation 22153 . 22154) (symbol 22151 . 22153) (punctuation 22150 . 22151) (punctuation 22149 . 22150) (symbol 22146 . 22149) (TYPENAME 22137 . 22145) (punctuation 22129 . 22130) (symbol 22125 . 22129) (punctuation 22124 . 22125) (punctuation 22123 . 22124) (punctuation 22122 . 22123) (punctuation 22120 . 22121) (number 22119 . 22120) (punctuation 22118 . 22119) (symbol 22114 . 22118) (punctuation 22113 . 22114) (punctuation 22112 . 22113) (symbol 22109 . 22112) (punctuation 22107 . 22108) (symbol 22096 . 22107) (punctuation 22095 . 22096) (symbol 22093 . 22095) (punctuation 22092 . 22093) (punctuation 22091 . 22092) (symbol 22088 . 22091) (TYPENAME 22079 . 22087) (punctuation 22071 . 22072) (symbol 22067 . 22071) (punctuation 22066 . 22067) (punctuation 22065 . 22066) (punctuation 22064 . 22065) (punctuation 22062 . 22063) (number 22061 . 22062) (punctuation 22060 . 22061) (symbol 22056 . 22060) (punctuation 22055 . 22056) (punctuation 22054 . 22055) (symbol 22051 . 22054) (punctuation 22049 . 22050) (symbol 22038 . 22049) (punctuation 22037 . 22038) (symbol 22035 . 22037) (punctuation 22034 . 22035) (punctuation 22033 . 22034) (symbol 22030 . 22033) (TYPENAME 22021 . 22029) (punctuation 22013 . 22014) (symbol 22009 . 22013) (punctuation 22008 . 22009) (punctuation 22007 . 22008) (punctuation 22006 . 22007) (punctuation 22004 . 22005) (number 22003 . 22004) (punctuation 22002 . 22003) (symbol 21998 . 22002) (punctuation 21997 . 21998) (punctuation 21996 . 21997) (symbol 21993 . 21996) (punctuation 21991 . 21992) (symbol 21980 . 21991) (punctuation 21979 . 21980) (symbol 21977 . 21979) (punctuation 21976 . 21977) (punctuation 21975 . 21976) (symbol 21972 . 21975) (TYPENAME 21963 . 21971) (punctuation 21955 . 21956) (symbol 21951 . 21955) (punctuation 21950 . 21951) (punctuation 21949 . 21950) (punctuation 21948 . 21949) (punctuation 21946 . 21947) (number 21945 . 21946) (punctuation 21944 . 21945) (symbol 21940 . 21944) (punctuation 21939 . 21940) (punctuation 21938 . 21939) (symbol 21935 . 21938) (punctuation 21933 . 21934) (symbol 21922 . 21933) (punctuation 21921 . 21922) (symbol 21919 . 21921) (punctuation 21918 . 21919) (punctuation 21917 . 21918) (symbol 21914 . 21917) (TYPENAME 21905 . 21913) (punctuation 21897 . 21898) (symbol 21891 . 21897) (TYPEDEF 21883 . 21890) (punctuation 20963 . 20964) (punctuation 20962 . 20963) (punctuation 20961 . 20962) (symbol 20937 . 20961) (punctuation 20936 . 20937) (punctuation 20935 . 20936) (symbol 20929 . 20935) (TYPENAME 20920 . 20928) (punctuation 20918 . 20919) (punctuation 20917 . 20918) (symbol 20915 . 20917) (punctuation 20914 . 20915) (punctuation 20913 . 20914) (symbol 20910 . 20913) (punctuation 20909 . 20910) (symbol 20887 . 20909) (punctuation 20885 . 20886) (symbol 20877 . 20885) (punctuation 20876 . 20877) (symbol 20868 . 20876) (punctuation 20867 . 20868) (punctuation 20866 . 20867) (symbol 20860 . 20866) (TYPENAME 20851 . 20859) (TYPEDEF 20843 . 20850) (punctuation 20806 . 20807) (punctuation 20805 . 20806) (punctuation 20804 . 20805) (symbol 20778 . 20804) (punctuation 20777 . 20778) (punctuation 20776 . 20777) (symbol 20770 . 20776) (TYPENAME 20761 . 20769) (punctuation 20759 . 20760) (punctuation 20758 . 20759) (symbol 20756 . 20758) (punctuation 20755 . 20756) (punctuation 20754 . 20755) (symbol 20751 . 20754) (punctuation 20750 . 20751) (symbol 20726 . 20750) (punctuation 20724 . 20725) (symbol 20716 . 20724) (punctuation 20715 . 20716) (symbol 20707 . 20715) (punctuation 20706 . 20707) (punctuation 20705 . 20706) (symbol 20699 . 20705) (TYPENAME 20690 . 20698) (TYPEDEF 20682 . 20689) (punctuation 20616 . 20617) (punctuation 20615 . 20616) (punctuation 20614 . 20615) (symbol 20592 . 20613) (punctuation 20591 . 20592) (punctuation 20590 . 20591) (symbol 20584 . 20590) (TYPENAME 20575 . 20583) (punctuation 20573 . 20574) (punctuation 20572 . 20573) (symbol 20570 . 20572) (punctuation 20569 . 20570) (punctuation 20568 . 20569) (symbol 20565 . 20568) (punctuation 20564 . 20565) (symbol 20545 . 20564) (punctuation 20543 . 20544) (symbol 20535 . 20543) (punctuation 20534 . 20535) (symbol 20526 . 20534) (punctuation 20525 . 20526) (punctuation 20524 . 20525) (symbol 20518 . 20524) (TYPENAME 20509 . 20517) (TYPEDEF 20501 . 20508) (punctuation 20413 . 20414) (punctuation 20412 . 20413) (punctuation 20411 . 20412) (symbol 20388 . 20410) (punctuation 20387 . 20388) (punctuation 20386 . 20387) (symbol 20380 . 20386) (TYPENAME 20371 . 20379) (punctuation 20369 . 20370) (punctuation 20368 . 20369) (symbol 20366 . 20368) (punctuation 20365 . 20366) (punctuation 20364 . 20365) (symbol 20361 . 20364) (punctuation 20360 . 20361) (symbol 20340 . 20360) (punctuation 20338 . 20339) (symbol 20330 . 20338) (punctuation 20329 . 20330) (symbol 20321 . 20329) (punctuation 20320 . 20321) (punctuation 20319 . 20320) (symbol 20313 . 20319) (TYPENAME 20304 . 20312) (TYPEDEF 20296 . 20303) (punctuation 20228 . 20229) (punctuation 20227 . 20228) (punctuation 20226 . 20227) (symbol 20206 . 20225) (punctuation 20205 . 20206) (punctuation 20204 . 20205) (symbol 20198 . 20204) (TYPENAME 20189 . 20197) (punctuation 20187 . 20188) (punctuation 20186 . 20187) (symbol 20184 . 20186) (punctuation 20183 . 20184) (punctuation 20182 . 20183) (symbol 20179 . 20182) (punctuation 20178 . 20179) (symbol 20161 . 20178) (punctuation 20159 . 20160) (symbol 20151 . 20159) (punctuation 20150 . 20151) (symbol 20142 . 20150) (punctuation 20141 . 20142) (punctuation 20140 . 20141) (symbol 20134 . 20140) (TYPENAME 20125 . 20133) (TYPEDEF 20117 . 20124) (punctuation 20088 . 20089) (punctuation 20087 . 20088) (punctuation 20086 . 20087) (symbol 20067 . 20085) (punctuation 20066 . 20067) (punctuation 20065 . 20066) (symbol 20059 . 20065) (TYPENAME 20050 . 20058) (punctuation 20048 . 20049) (punctuation 20047 . 20048) (symbol 20045 . 20047) (punctuation 20044 . 20045) (punctuation 20043 . 20044) (symbol 20040 . 20043) (punctuation 20039 . 20040) (symbol 20023 . 20039) (punctuation 20021 . 20022) (symbol 20013 . 20021) (punctuation 20012 . 20013) (symbol 20004 . 20012) (punctuation 20003 . 20004) (punctuation 20002 . 20003) (symbol 19996 . 20002) (TYPENAME 19987 . 19995) (TYPEDEF 19979 . 19986) (punctuation 19815 . 19816) (punctuation 19814 . 19815) (punctuation 19813 . 19814) (symbol 19798 . 19812) (punctuation 19797 . 19798) (punctuation 19796 . 19797) (symbol 19790 . 19796) (TYPENAME 19781 . 19789) (punctuation 19779 . 19780) (punctuation 19778 . 19779) (symbol 19776 . 19778) (punctuation 19775 . 19776) (punctuation 19774 . 19775) (symbol 19771 . 19774) (punctuation 19770 . 19771) (symbol 19760 . 19770) (punctuation 19758 . 19759) (symbol 19750 . 19758) (punctuation 19749 . 19750) (symbol 19741 . 19749) (punctuation 19740 . 19741) (punctuation 19739 . 19740) (symbol 19733 . 19739) (TYPENAME 19724 . 19732) (TYPEDEF 19716 . 19723) (punctuation 19525 . 19526) (punctuation 19524 . 19525) (punctuation 19523 . 19524) (symbol 19491 . 19522) (punctuation 19490 . 19491) (punctuation 19489 . 19490) (symbol 19483 . 19489) (TYPENAME 19474 . 19482) (punctuation 19472 . 19473) (punctuation 19471 . 19472) (symbol 19469 . 19471) (punctuation 19468 . 19469) (punctuation 19467 . 19468) (symbol 19464 . 19467) (punctuation 19463 . 19464) (symbol 19434 . 19463) (punctuation 19432 . 19433) (symbol 19424 . 19432) (punctuation 19423 . 19424) (symbol 19415 . 19423) (punctuation 19414 . 19415) (punctuation 19413 . 19414) (symbol 19407 . 19413) (TYPENAME 19398 . 19406) (TYPEDEF 19390 . 19397) (punctuation 19360 . 19361) (punctuation 19359 . 19360) (punctuation 19358 . 19359) (symbol 19338 . 19357) (punctuation 19337 . 19338) (punctuation 19336 . 19337) (symbol 19330 . 19336) (TYPENAME 19321 . 19329) (punctuation 19319 . 19320) (punctuation 19318 . 19319) (symbol 19316 . 19318) (punctuation 19315 . 19316) (punctuation 19314 . 19315) (symbol 19311 . 19314) (punctuation 19310 . 19311) (symbol 19293 . 19310) (punctuation 19291 . 19292) (symbol 19283 . 19291) (punctuation 19282 . 19283) (symbol 19274 . 19282) (punctuation 19273 . 19274) (punctuation 19272 . 19273) (symbol 19266 . 19272) (TYPENAME 19257 . 19265) (TYPEDEF 19249 . 19256) (punctuation 19217 . 19218) (punctuation 19216 . 19217) (punctuation 19215 . 19216) (symbol 19193 . 19214) (punctuation 19192 . 19193) (punctuation 19191 . 19192) (symbol 19185 . 19191) (TYPENAME 19176 . 19184) (punctuation 19174 . 19175) (punctuation 19173 . 19174) (symbol 19171 . 19173) (punctuation 19170 . 19171) (punctuation 19169 . 19170) (symbol 19166 . 19169) (punctuation 19165 . 19166) (symbol 19146 . 19165) (punctuation 19144 . 19145) (symbol 19136 . 19144) (punctuation 19135 . 19136) (symbol 19127 . 19135) (punctuation 19126 . 19127) (punctuation 19125 . 19126) (symbol 19119 . 19125) (TYPENAME 19110 . 19118) (TYPEDEF 19102 . 19109) (punctuation 19074 . 19075) (punctuation 19073 . 19074) (punctuation 19072 . 19073) (symbol 19054 . 19071) (punctuation 19053 . 19054) (punctuation 19052 . 19053) (symbol 19046 . 19052) (TYPENAME 19037 . 19045) (punctuation 19035 . 19036) (punctuation 19034 . 19035) (symbol 19032 . 19034) (punctuation 19031 . 19032) (punctuation 19030 . 19031) (symbol 19027 . 19030) (punctuation 19026 . 19027) (symbol 19011 . 19026) (punctuation 19009 . 19010) (symbol 19001 . 19009) (punctuation 19000 . 19001) (symbol 18992 . 19000) (punctuation 18991 . 18992) (punctuation 18990 . 18991) (symbol 18984 . 18990) (TYPENAME 18975 . 18983) (TYPEDEF 18967 . 18974) (punctuation 18936 . 18937) (punctuation 18935 . 18936) (punctuation 18934 . 18935) (symbol 18913 . 18933) (punctuation 18912 . 18913) (punctuation 18911 . 18912) (symbol 18905 . 18911) (TYPENAME 18896 . 18904) (punctuation 18894 . 18895) (punctuation 18893 . 18894) (symbol 18891 . 18893) (punctuation 18890 . 18891) (punctuation 18889 . 18890) (symbol 18886 . 18889) (punctuation 18885 . 18886) (symbol 18867 . 18885) (punctuation 18865 . 18866) (symbol 18857 . 18865) (punctuation 18856 . 18857) (symbol 18848 . 18856) (punctuation 18847 . 18848) (punctuation 18846 . 18847) (symbol 18840 . 18846) (TYPENAME 18831 . 18839) (TYPEDEF 18823 . 18830) (punctuation 18793 . 18794) (punctuation 18792 . 18793) (punctuation 18791 . 18792) (symbol 18771 . 18790) (punctuation 18770 . 18771) (punctuation 18769 . 18770) (symbol 18763 . 18769) (TYPENAME 18754 . 18762) (punctuation 18752 . 18753) (punctuation 18751 . 18752) (symbol 18749 . 18751) (punctuation 18748 . 18749) (punctuation 18747 . 18748) (symbol 18744 . 18747) (punctuation 18743 . 18744) (symbol 18726 . 18743) (punctuation 18724 . 18725) (symbol 18716 . 18724) (punctuation 18715 . 18716) (symbol 18707 . 18715) (punctuation 18706 . 18707) (punctuation 18705 . 18706) (symbol 18699 . 18705) (TYPENAME 18690 . 18698) (TYPEDEF 18682 . 18689) (punctuation 18656 . 18657) (punctuation 18655 . 18656) (punctuation 18654 . 18655) (symbol 18638 . 18653) (punctuation 18637 . 18638) (punctuation 18636 . 18637) (symbol 18630 . 18636) (TYPENAME 18621 . 18629) (punctuation 18619 . 18620) (punctuation 18618 . 18619) (symbol 18616 . 18618) (punctuation 18615 . 18616) (punctuation 18614 . 18615) (symbol 18611 . 18614) (punctuation 18610 . 18611) (symbol 18597 . 18610) (punctuation 18595 . 18596) (symbol 18587 . 18595) (punctuation 18586 . 18587) (symbol 18578 . 18586) (punctuation 18577 . 18578) (punctuation 18576 . 18577) (symbol 18570 . 18576) (TYPENAME 18561 . 18569) (TYPEDEF 18553 . 18560) (punctuation 18525 . 18526) (punctuation 18524 . 18525) (punctuation 18523 . 18524) (symbol 18505 . 18522) (punctuation 18504 . 18505) (punctuation 18503 . 18504) (symbol 18497 . 18503) (TYPENAME 18488 . 18496) (punctuation 18486 . 18487) (punctuation 18485 . 18486) (symbol 18483 . 18485) (punctuation 18482 . 18483) (punctuation 18481 . 18482) (symbol 18478 . 18481) (punctuation 18477 . 18478) (symbol 18462 . 18477) (punctuation 18460 . 18461) (symbol 18452 . 18460) (punctuation 18451 . 18452) (symbol 18443 . 18451) (punctuation 18442 . 18443) (punctuation 18441 . 18442) (symbol 18435 . 18441) (TYPENAME 18426 . 18434) (TYPEDEF 18418 . 18425) (punctuation 12855 . 12856) (punctuation 12854 . 12855) (punctuation 12769 . 12770) (punctuation 12768 . 12769) (punctuation 12683 . 12684) (punctuation 12682 . 12683) (punctuation 12597 . 12598) (punctuation 12596 . 12597) (punctuation 12512 . 12513) (punctuation 12511 . 12512) (punctuation 12427 . 12428) (punctuation 12426 . 12427) (punctuation 12342 . 12343) (punctuation 12341 . 12342) (punctuation 12257 . 12258) (punctuation 12256 . 12257) (punctuation 12172 . 12173) (punctuation 12171 . 12172) (punctuation 12087 . 12088) (punctuation 12086 . 12087) (punctuation 12002 . 12003) (punctuation 12001 . 12002) (punctuation 11917 . 11918) (punctuation 11916 . 11917) (punctuation 11832 . 11833) (punctuation 11831 . 11832) (punctuation 11125 . 11126) (punctuation 11124 . 11125) (punctuation 11123 . 11124) (symbol "true" 11091 . 11123) (punctuation 11089 . 11090) (symbol "true" 11058 . 11089) (punctuation 11057 . 11058) (symbol 11045 . 11057) (TYPEDEF 11037 . 11044) (punctuation 11014 . 11015) (punctuation 11013 . 11014) (punctuation 11012 . 11013) (symbol "true" 10980 . 11012) (punctuation 10978 . 10979) (symbol "true" 10947 . 10978) (punctuation 10946 . 10947) (symbol 10934 . 10946) (TYPEDEF 10926 . 10933) (punctuation 10209 . 10210) (punctuation 10208 . 10209) (punctuation 10207 . 10208) (number 10206 . 10207) (punctuation 10205 . 10206) (symbol 10204 . 10205) (punctuation 10202 . 10203) (symbol 10201 . 10202) (punctuation 10199 . 10200) (symbol 10192 . 10199) (punctuation 10191 . 10192) (symbol 10183 . 10191) (TYPENAME 10174 . 10182) (TYPEDEF 10166 . 10173) (punctuation 10047 . 10048) (semantic-list 9954 . 10047) (punctuation 9952 . 9953) (symbol 9947 . 9952) (punctuation 9946 . 9947) (punctuation 9945 . 9946) (punctuation 9944 . 9945) (symbol 9943 . 9944) (punctuation 9942 . 9943) (symbol 9921 . 9942) (punctuation 9920 . 9921) (punctuation 9919 . 9920) (symbol 9913 . 9919) (punctuation 9912 . 9913) (punctuation 9911 . 9912) (symbol 9903 . 9911) (punctuation 9902 . 9903) (punctuation 9901 . 9902) (symbol 9897 . 9901) (punctuation 9896 . 9897) (punctuation 9895 . 9896) (symbol 9890 . 9895) (punctuation 9889 . 9890) (punctuation 9888 . 9889) (punctuation 9882 . 9883) (symbol 9877 . 9882) (punctuation 9876 . 9877) (punctuation 9875 . 9876) (symbol 9872 . 9875) (PUBLIC 9865 . 9871) (punctuation 9863 . 9864) (symbol 9844 . 9861) (STRUCT 9837 . 9843) (punctuation 9835 . 9836) (symbol 9834 . 9835) (CLASS 9828 . 9833) (punctuation 9827 . 9828) (TEMPLATE 9818 . 9826) (punctuation 9815 . 9816) (semantic-list 9813 . 9815) (punctuation 9811 . 9812) (symbol 9806 . 9811) (punctuation 9805 . 9806) (punctuation 9804 . 9805) (punctuation 9803 . 9804) (symbol 9802 . 9803) (punctuation 9801 . 9802) (symbol 9782 . 9801) (punctuation 9781 . 9782) (punctuation 9780 . 9781) (symbol 9774 . 9780) (punctuation 9773 . 9774) (punctuation 9772 . 9773) (symbol 9764 . 9772) (punctuation 9763 . 9764) (punctuation 9762 . 9763) (symbol 9758 . 9762) (punctuation 9757 . 9758) (punctuation 9756 . 9757) (symbol 9751 . 9756) (punctuation 9750 . 9751) (punctuation 9749 . 9750) (punctuation 9743 . 9744) (symbol 9738 . 9743) (punctuation 9737 . 9738) (punctuation 9736 . 9737) (symbol 9733 . 9736) (PUBLIC 9726 . 9732) (punctuation 9724 . 9725) (symbol 9707 . 9722) (STRUCT 9700 . 9706) (punctuation 9698 . 9699) (symbol 9697 . 9698) (CLASS 9691 . 9696) (punctuation 9690 . 9691) (TEMPLATE 9681 . 9689) (number 9673 . 9674) (punctuation 9671 . 9672) (punctuation 9670 . 9671) (semantic-list 9595 . 9669) (SIZEOF 9589 . 9595) (punctuation 9587 . 9588) (number 9492 . 9493) (punctuation 9490 . 9491) (punctuation 9489 . 9490) (semantic-list 9416 . 9488) (SIZEOF 9410 . 9416) (punctuation 9408 . 9409) (punctuation 9145 . 9146) (punctuation 9144 . 9145) (punctuation 9143 . 9144) (symbol 9138 . 9143) (punctuation 9137 . 9138) (punctuation 9136 . 9137) (punctuation 9135 . 9136) (symbol 9127 . 9135) (punctuation 9125 . 9126) (symbol 9121 . 9125) (punctuation 9120 . 9121) (symbol 9113 . 9120) (punctuation 9112 . 9113) (punctuation 9111 . 9112) (symbol 9106 . 9111) (punctuation 9105 . 9106) (punctuation 9104 . 9105) (punctuation 9096 . 9097) (symbol 9092 . 9096) (punctuation 9090 . 9091) (symbol 9079 . 9090) (punctuation 9071 . 9072) (symbol 9058 . 9071) (TYPENAME 9049 . 9057) (TYPEDEF 9041 . 9048) (punctuation 8287 . 8288) (punctuation 8286 . 8287) (punctuation 8285 . 8286) (punctuation 8280 . 8281) (number 8276 . 8280) (punctuation 8274 . 8275) (semantic-list 8242 . 8273) (punctuation 8241 . 8242) (symbol 8234 . 8241) (punctuation 8226 . 8227) (punctuation 8225 . 8226) (number 8224 . 8225) (punctuation 8223 . 8224) (symbol 8216 . 8223) (punctuation 8208 . 8209) (semantic-list 8186 . 8208) (punctuation 8178 . 8179) (symbol 8174 . 8178) (punctuation 8173 . 8174) (punctuation 8172 . 8173) (symbol 8169 . 8172) (TYPENAME 8160 . 8168) (TYPEDEF 8152 . 8159) (punctuation ";" 7660 . 7753) (semantic-list #("{}" 0 1 (macros (("Default" symbol "max_root_iterations" 7695 . 7714) ("name" LONG "long" 7689 . 7693) ("type" UNSIGNED "unsigned" 7680 . 7688)))) 7660 . 7753) (punctuation ">" 7660 . 7753) (symbol "value" 7660 . 7753) (punctuation ":" 7660 . 7753) (punctuation ":" 7660 . 7753) (punctuation ">" 7660 . 7753) (symbol "T" 7660 . 7753) (punctuation "<" 7660 . 7753) (symbol "is_long_imp" 7660 . 7753) (punctuation ":" 7660 . 7753) (punctuation ":" 7660 . 7753) (symbol "detail" 7660 . 7753) (punctuation ":" 7660 . 7753) (punctuation ":" 7660 . 7753) (symbol "policies" 7660 . 7753) (punctuation ":" 7660 . 7753) (punctuation ":" 7660 . 7753) (symbol "math" 7660 . 7753) (punctuation ":" 7660 . 7753) (punctuation ":" 7660 . 7753) (symbol "boost" 7660 . 7753) (punctuation ":" 7660 . 7753) (punctuation ":" 7660 . 7753) (punctuation "<" 7660 . 7753) (symbol "bool_" 7660 . 7753) (punctuation ":" 7660 . 7753) (punctuation ":" 7660 . 7753) (symbol "mpl" 7660 . 7753) (punctuation ":" 7660 . 7753) (punctuation ":" 7660 . 7753) (symbol "boost" 7660 . 7753) (PUBLIC "public" 7660 . 7753) (punctuation ":" 7660 . 7753) (symbol "is_long" 7660 . 7753) (STRUCT "struct" 7660 . 7753) (punctuation ">" 7660 . 7753) (symbol "T" 7660 . 7753) (CLASS "class" 7660 . 7753) (punctuation "<" 7660 . 7753) (TEMPLATE "template" 7660 . 7753) (PUBLIC "public" 7660 . 7753) (punctuation ":" 7660 . 7753) (LONG "long" 7660 . 7753) (STRUCT "struct" 7660 . 7753) (punctuation ">" 7660 . 7753) (symbol "max_root_iterations" 7660 . 7753) (punctuation "=" 7660 . 7753) (symbol "N" 7660 . 7753) (UNSIGNED "unsigned" 7660 . 7753) (punctuation "<" 7660 . 7753) (TEMPLATE "template" 7660 . 7753) (punctuation ";" 7562 . 7659) (semantic-list #("{}" 0 1 (macros (("Default" symbol "max_series_iterations" 7597 . 7618) ("name" LONG "long" 7591 . 7595) ("type" UNSIGNED "unsigned" 7582 . 7590)))) 7562 . 7659) (punctuation ">" 7562 . 7659) (symbol "value" 7562 . 7659) (punctuation ":" 7562 . 7659) (punctuation ":" 7562 . 7659) (punctuation ">" 7562 . 7659) (symbol "T" 7562 . 7659) (punctuation "<" 7562 . 7659) (symbol "is_long_imp" 7562 . 7659) (punctuation ":" 7562 . 7659) (punctuation ":" 7562 . 7659) (symbol "detail" 7562 . 7659) (punctuation ":" 7562 . 7659) (punctuation ":" 7562 . 7659) (symbol "policies" 7562 . 7659) (punctuation ":" 7562 . 7659) (punctuation ":" 7562 . 7659) (symbol "math" 7562 . 7659) (punctuation ":" 7562 . 7659) (punctuation ":" 7562 . 7659) (symbol "boost" 7562 . 7659) (punctuation ":" 7562 . 7659) (punctuation ":" 7562 . 7659) (punctuation "<" 7562 . 7659) (symbol "bool_" 7562 . 7659) (punctuation ":" 7562 . 7659) (punctuation ":" 7562 . 7659) (symbol "mpl" 7562 . 7659) (punctuation ":" 7562 . 7659) (punctuation ":" 7562 . 7659) (symbol "boost" 7562 . 7659) (PUBLIC "public" 7562 . 7659) (punctuation ":" 7562 . 7659) (symbol "is_long" 7562 . 7659) (STRUCT "struct" 7562 . 7659) (punctuation ">" 7562 . 7659) (symbol "T" 7562 . 7659) (CLASS "class" 7562 . 7659) (punctuation "<" 7562 . 7659) (TEMPLATE "template" 7562 . 7659) (PUBLIC "public" 7562 . 7659) (punctuation ":" 7562 . 7659) (LONG "long" 7562 . 7659) (STRUCT "struct" 7562 . 7659) (punctuation ">" 7562 . 7659) (symbol "max_series_iterations" 7562 . 7659) (punctuation "=" 7562 . 7659) (symbol "N" 7562 . 7659) (UNSIGNED "unsigned" 7562 . 7659) (punctuation "<" 7562 . 7659) (TEMPLATE "template" 7562 . 7659) (punctuation ";" 7504 . 7540) (semantic-list #("{}" 0 1 (macros (("Default" number "0" 7538 . 7539) ("name" symbol "digits2" 7529 . 7536) ("type" INT "int" 7524 . 7527)))) 7504 . 7540) (punctuation ">" 7504 . 7540) (symbol "value" 7504 . 7540) (punctuation ":" 7504 . 7540) (punctuation ":" 7504 . 7540) (punctuation ">" 7504 . 7540) (symbol "T" 7504 . 7540) (punctuation "<" 7504 . 7540) (symbol "is_digits2_imp" 7504 . 7540) (punctuation ":" 7504 . 7540) (punctuation ":" 7504 . 7540) (symbol "detail" 7504 . 7540) (punctuation ":" 7504 . 7540) (punctuation ":" 7504 . 7540) (symbol "policies" 7504 . 7540) (punctuation ":" 7504 . 7540) (punctuation ":" 7504 . 7540) (symbol "math" 7504 . 7540) (punctuation ":" 7504 . 7540) (punctuation ":" 7504 . 7540) (symbol "boost" 7504 . 7540) (punctuation ":" 7504 . 7540) (punctuation ":" 7504 . 7540) (punctuation "<" 7504 . 7540) (symbol "bool_" 7504 . 7540) (punctuation ":" 7504 . 7540) (punctuation ":" 7504 . 7540) (symbol "mpl" 7504 . 7540) (punctuation ":" 7504 . 7540) (punctuation ":" 7504 . 7540) (symbol "boost" 7504 . 7540) (PUBLIC "public" 7504 . 7540) (punctuation ":" 7504 . 7540) (symbol "is_digits2" 7504 . 7540) (STRUCT "struct" 7504 . 7540) (punctuation ">" 7504 . 7540) (symbol "T" 7504 . 7540) (CLASS "class" 7504 . 7540) (punctuation "<" 7504 . 7540) (TEMPLATE "template" 7504 . 7540) (punctuation ">" 7504 . 7540) (number "0" 7504 . 7540) (punctuation "=" 7504 . 7540) (symbol "N" 7504 . 7540) (INT "int" 7504 . 7540) (punctuation "<" 7504 . 7540) (TEMPLATE "template" 7504 . 7540) (punctuation ";" 7441 . 7503) (semantic-list #("{}" 0 1 (macros (("Default" number "0" 7476 . 7502) ("name" symbol "digits10" 7466 . 7474) ("type" INT "int" 7461 . 7464)))) 7441 . 7503) (punctuation ">" 7441 . 7503) (symbol "value" 7441 . 7503) (punctuation ":" 7441 . 7503) (punctuation ":" 7441 . 7503) (punctuation ">" 7441 . 7503) (symbol "T" 7441 . 7503) (punctuation "<" 7441 . 7503) (symbol "is_digits10_imp" 7441 . 7503) (punctuation ":" 7441 . 7503) (punctuation ":" 7441 . 7503) (symbol "detail" 7441 . 7503) (punctuation ":" 7441 . 7503) (punctuation ":" 7441 . 7503) (symbol "policies" 7441 . 7503) (punctuation ":" 7441 . 7503) (punctuation ":" 7441 . 7503) (symbol "math" 7441 . 7503) (punctuation ":" 7441 . 7503) (punctuation ":" 7441 . 7503) (symbol "boost" 7441 . 7503) (punctuation ":" 7441 . 7503) (punctuation ":" 7441 . 7503) (punctuation "<" 7441 . 7503) (symbol "bool_" 7441 . 7503) (punctuation ":" 7441 . 7503) (punctuation ":" 7441 . 7503) (symbol "mpl" 7441 . 7503) (punctuation ":" 7441 . 7503) (punctuation ":" 7441 . 7503) (symbol "boost" 7441 . 7503) (PUBLIC "public" 7441 . 7503) (punctuation ":" 7441 . 7503) (symbol "is_digits10" 7441 . 7503) (STRUCT "struct" 7441 . 7503) (punctuation ">" 7441 . 7503) (symbol "T" 7441 . 7503) (CLASS "class" 7441 . 7503) (punctuation "<" 7441 . 7503) (TEMPLATE "template" 7441 . 7503) (punctuation ">" 7441 . 7503) (number "0" 7441 . 7503) (punctuation "=" 7441 . 7503) (symbol "N" 7441 . 7503) (INT "int" 7441 . 7503) (punctuation "<" 7441 . 7503) (TEMPLATE "template" 7441 . 7503) (punctuation ";" 7314 . 7420) (semantic-list #("{}" 0 1 (macros (("Default" symbol "integer_round_outwards" 7384 . 7419) ("name" symbol "discrete_quantile" 7365 . 7382) ("type" symbol "discrete_quantile_policy_type" 7334 . 7363)))) 7314 . 7420) (punctuation ">" 7314 . 7420) (symbol "value" 7314 . 7420) (punctuation ":" 7314 . 7420) (punctuation ":" 7314 . 7420) (punctuation ">" 7314 . 7420) (symbol "T" 7314 . 7420) (punctuation "<" 7314 . 7420) (symbol "is_discrete_quantile_imp" 7314 . 7420) (punctuation ":" 7314 . 7420) (punctuation ":" 7314 . 7420) (symbol "detail" 7314 . 7420) (punctuation ":" 7314 . 7420) (punctuation ":" 7314 . 7420) (symbol "policies" 7314 . 7420) (punctuation ":" 7314 . 7420) (punctuation ":" 7314 . 7420) (symbol "math" 7314 . 7420) (punctuation ":" 7314 . 7420) (punctuation ":" 7314 . 7420) (symbol "boost" 7314 . 7420) (punctuation ":" 7314 . 7420) (punctuation ":" 7314 . 7420) (punctuation "<" 7314 . 7420) (symbol "bool_" 7314 . 7420) (punctuation ":" 7314 . 7420) (punctuation ":" 7314 . 7420) (symbol "mpl" 7314 . 7420) (punctuation ":" 7314 . 7420) (punctuation ":" 7314 . 7420) (symbol "boost" 7314 . 7420) (PUBLIC "public" 7314 . 7420) (punctuation ":" 7314 . 7420) (symbol "is_discrete_quantile" 7314 . 7420) (STRUCT "struct" 7314 . 7420) (punctuation ">" 7314 . 7420) (symbol "T" 7314 . 7420) (CLASS "class" 7314 . 7420) (punctuation "<" 7314 . 7420) (TEMPLATE "template" 7314 . 7420) (punctuation ";" 7021 . 7095) (semantic-list #("{}" 0 1 (macros (("Default" symbol "true" 7060 . 7094) ("name" symbol "assert_undefined" 7042 . 7058)))) 7021 . 7095) (punctuation ">" 7021 . 7095) (symbol "value" 7021 . 7095) (punctuation ":" 7021 . 7095) (punctuation ":" 7021 . 7095) (punctuation ">" 7021 . 7095) (symbol "T" 7021 . 7095) (punctuation "<" 7021 . 7095) (symbol "is_assert_undefined_imp" 7021 . 7095) (punctuation ":" 7021 . 7095) (punctuation ":" 7021 . 7095) (symbol "detail" 7021 . 7095) (punctuation ":" 7021 . 7095) (punctuation ":" 7021 . 7095) (symbol "policies" 7021 . 7095) (punctuation ":" 7021 . 7095) (punctuation ":" 7021 . 7095) (symbol "math" 7021 . 7095) (punctuation ":" 7021 . 7095) (punctuation ":" 7021 . 7095) (symbol "boost" 7021 . 7095) (punctuation ":" 7021 . 7095) (punctuation ":" 7021 . 7095) (punctuation "<" 7021 . 7095) (symbol "bool_" 7021 . 7095) (punctuation ":" 7021 . 7095) (punctuation ":" 7021 . 7095) (symbol "mpl" 7021 . 7095) (punctuation ":" 7021 . 7095) (punctuation ":" 7021 . 7095) (symbol "boost" 7021 . 7095) (PUBLIC "public" 7021 . 7095) (punctuation ":" 7021 . 7095) (symbol "is_assert_undefined" 7021 . 7095) (STRUCT "struct" 7021 . 7095) (punctuation ">" 7021 . 7095) (symbol "T" 7021 . 7095) (CLASS "class" 7021 . 7095) (punctuation "<" 7021 . 7095) (TEMPLATE "template" 7021 . 7095) (punctuation ";" 6950 . 7020) (semantic-list #("{}" 0 1 (macros (("Default" symbol "true" 6987 . 7019) ("name" symbol "promote_double" 6971 . 6985)))) 6950 . 7020) (punctuation ">" 6950 . 7020) (symbol "value" 6950 . 7020) (punctuation ":" 6950 . 7020) (punctuation ":" 6950 . 7020) (punctuation ">" 6950 . 7020) (symbol "T" 6950 . 7020) (punctuation "<" 6950 . 7020) (symbol "is_promote_double_imp" 6950 . 7020) (punctuation ":" 6950 . 7020) (punctuation ":" 6950 . 7020) (symbol "detail" 6950 . 7020) (punctuation ":" 6950 . 7020) (punctuation ":" 6950 . 7020) (symbol "policies" 6950 . 7020) (punctuation ":" 6950 . 7020) (punctuation ":" 6950 . 7020) (symbol "math" 6950 . 7020) (punctuation ":" 6950 . 7020) (punctuation ":" 6950 . 7020) (symbol "boost" 6950 . 7020) (punctuation ":" 6950 . 7020) (punctuation ":" 6950 . 7020) (punctuation "<" 6950 . 7020) (symbol "bool_" 6950 . 7020) (punctuation ":" 6950 . 7020) (punctuation ":" 6950 . 7020) (symbol "mpl" 6950 . 7020) (punctuation ":" 6950 . 7020) (punctuation ":" 6950 . 7020) (symbol "boost" 6950 . 7020) (PUBLIC "public" 6950 . 7020) (punctuation ":" 6950 . 7020) (symbol "is_promote_double" 6950 . 7020) (STRUCT "struct" 6950 . 7020) (punctuation ">" 6950 . 7020) (symbol "T" 6950 . 7020) (CLASS "class" 6950 . 7020) (punctuation "<" 6950 . 7020) (TEMPLATE "template" 6950 . 7020) (punctuation ";" 6881 . 6949) (semantic-list #("{}" 0 1 (macros (("Default" symbol "true" 6917 . 6948) ("name" symbol "promote_float" 6902 . 6915)))) 6881 . 6949) (punctuation ">" 6881 . 6949) (symbol "value" 6881 . 6949) (punctuation ":" 6881 . 6949) (punctuation ":" 6881 . 6949) (punctuation ">" 6881 . 6949) (symbol "T" 6881 . 6949) (punctuation "<" 6881 . 6949) (symbol "is_promote_float_imp" 6881 . 6949) (punctuation ":" 6881 . 6949) (punctuation ":" 6881 . 6949) (symbol "detail" 6881 . 6949) (punctuation ":" 6881 . 6949) (punctuation ":" 6881 . 6949) (symbol "policies" 6881 . 6949) (punctuation ":" 6881 . 6949) (punctuation ":" 6881 . 6949) (symbol "math" 6881 . 6949) (punctuation ":" 6881 . 6949) (punctuation ":" 6881 . 6949) (symbol "boost" 6881 . 6949) (punctuation ":" 6881 . 6949) (punctuation ":" 6881 . 6949) (punctuation "<" 6881 . 6949) (symbol "bool_" 6881 . 6949) (punctuation ":" 6881 . 6949) (punctuation ":" 6881 . 6949) (symbol "mpl" 6881 . 6949) (punctuation ":" 6881 . 6949) (punctuation ":" 6881 . 6949) (symbol "boost" 6881 . 6949) (PUBLIC "public" 6881 . 6949) (punctuation ":" 6881 . 6949) (symbol "is_promote_float" 6881 . 6949) (STRUCT "struct" 6881 . 6949) (punctuation ">" 6881 . 6949) (symbol "T" 6881 . 6949) (CLASS "class" 6881 . 6949) (punctuation "<" 6881 . 6949) (TEMPLATE "template" 6881 . 6949) (punctuation ";" 6721 . 6833) (semantic-list #("{}" 0 1 (macros (("Default" symbol "ignore_error" 6788 . 6832) ("name" symbol "indeterminate_result_error" 6760 . 6786) ("type" symbol "error_policy_type" 6741 . 6758)))) 6721 . 6833) (punctuation ">" 6721 . 6833) (symbol "value" 6721 . 6833) (punctuation ":" 6721 . 6833) (punctuation ":" 6721 . 6833) (punctuation ">" 6721 . 6833) (symbol "T" 6721 . 6833) (punctuation "<" 6721 . 6833) (symbol "is_indeterminate_result_error_imp" 6721 . 6833) (punctuation ":" 6721 . 6833) (punctuation ":" 6721 . 6833) (symbol "detail" 6721 . 6833) (punctuation ":" 6721 . 6833) (punctuation ":" 6721 . 6833) (symbol "policies" 6721 . 6833) (punctuation ":" 6721 . 6833) (punctuation ":" 6721 . 6833) (symbol "math" 6721 . 6833) (punctuation ":" 6721 . 6833) (punctuation ":" 6721 . 6833) (symbol "boost" 6721 . 6833) (punctuation ":" 6721 . 6833) (punctuation ":" 6721 . 6833) (punctuation "<" 6721 . 6833) (symbol "bool_" 6721 . 6833) (punctuation ":" 6721 . 6833) (punctuation ":" 6721 . 6833) (symbol "mpl" 6721 . 6833) (punctuation ":" 6721 . 6833) (punctuation ":" 6721 . 6833) (symbol "boost" 6721 . 6833) (PUBLIC "public" 6721 . 6833) (punctuation ":" 6721 . 6833) (symbol "is_indeterminate_result_error" 6721 . 6833) (STRUCT "struct" 6721 . 6833) (punctuation ">" 6721 . 6833) (symbol "T" 6721 . 6833) (CLASS "class" 6721 . 6833) (punctuation "<" 6721 . 6833) (TEMPLATE "template" 6721 . 6833) (punctuation ";" 6632 . 6720) (semantic-list #("{}" 0 1 (macros (("Default" symbol "throw_on_error" 6687 . 6719) ("name" symbol "rounding_error" 6671 . 6685) ("type" symbol "error_policy_type" 6652 . 6669)))) 6632 . 6720) (punctuation ">" 6632 . 6720) (symbol "value" 6632 . 6720) (punctuation ":" 6632 . 6720) (punctuation ":" 6632 . 6720) (punctuation ">" 6632 . 6720) (symbol "T" 6632 . 6720) (punctuation "<" 6632 . 6720) (symbol "is_rounding_error_imp" 6632 . 6720) (punctuation ":" 6632 . 6720) (punctuation ":" 6632 . 6720) (symbol "detail" 6632 . 6720) (punctuation ":" 6632 . 6720) (punctuation ":" 6632 . 6720) (symbol "policies" 6632 . 6720) (punctuation ":" 6632 . 6720) (punctuation ":" 6632 . 6720) (symbol "math" 6632 . 6720) (punctuation ":" 6632 . 6720) (punctuation ":" 6632 . 6720) (symbol "boost" 6632 . 6720) (punctuation ":" 6632 . 6720) (punctuation ":" 6632 . 6720) (punctuation "<" 6632 . 6720) (symbol "bool_" 6632 . 6720) (punctuation ":" 6632 . 6720) (punctuation ":" 6632 . 6720) (symbol "mpl" 6632 . 6720) (punctuation ":" 6632 . 6720) (punctuation ":" 6632 . 6720) (symbol "boost" 6632 . 6720) (PUBLIC "public" 6632 . 6720) (punctuation ":" 6632 . 6720) (symbol "is_rounding_error" 6632 . 6720) (STRUCT "struct" 6632 . 6720) (punctuation ">" 6632 . 6720) (symbol "T" 6632 . 6720) (CLASS "class" 6632 . 6720) (punctuation "<" 6632 . 6720) (TEMPLATE "template" 6632 . 6720) (punctuation ";" 6539 . 6631) (semantic-list #("{}" 0 1 (macros (("Default" symbol "throw_on_error" 6596 . 6630) ("name" symbol "evaluation_error" 6578 . 6594) ("type" symbol "error_policy_type" 6559 . 6576)))) 6539 . 6631) (punctuation ">" 6539 . 6631) (symbol "value" 6539 . 6631) (punctuation ":" 6539 . 6631) (punctuation ":" 6539 . 6631) (punctuation ">" 6539 . 6631) (symbol "T" 6539 . 6631) (punctuation "<" 6539 . 6631) (symbol "is_evaluation_error_imp" 6539 . 6631) (punctuation ":" 6539 . 6631) (punctuation ":" 6539 . 6631) (symbol "detail" 6539 . 6631) (punctuation ":" 6539 . 6631) (punctuation ":" 6539 . 6631) (symbol "policies" 6539 . 6631) (punctuation ":" 6539 . 6631) (punctuation ":" 6539 . 6631) (symbol "math" 6539 . 6631) (punctuation ":" 6539 . 6631) (punctuation ":" 6539 . 6631) (symbol "boost" 6539 . 6631) (punctuation ":" 6539 . 6631) (punctuation ":" 6539 . 6631) (punctuation "<" 6539 . 6631) (symbol "bool_" 6539 . 6631) (punctuation ":" 6539 . 6631) (punctuation ":" 6539 . 6631) (symbol "mpl" 6539 . 6631) (punctuation ":" 6539 . 6631) (punctuation ":" 6539 . 6631) (symbol "boost" 6539 . 6631) (PUBLIC "public" 6539 . 6631) (punctuation ":" 6539 . 6631) (symbol "is_evaluation_error" 6539 . 6631) (STRUCT "struct" 6539 . 6631) (punctuation ">" 6539 . 6631) (symbol "T" 6539 . 6631) (CLASS "class" 6539 . 6631) (punctuation "<" 6539 . 6631) (TEMPLATE "template" 6539 . 6631) (punctuation ";" 6454 . 6538) (semantic-list #("{}" 0 1 (macros (("Default" symbol "ignore_error" 6507 . 6537) ("name" symbol "denorm_error" 6493 . 6505) ("type" symbol "error_policy_type" 6474 . 6491)))) 6454 . 6538) (punctuation ">" 6454 . 6538) (symbol "value" 6454 . 6538) (punctuation ":" 6454 . 6538) (punctuation ":" 6454 . 6538) (punctuation ">" 6454 . 6538) (symbol "T" 6454 . 6538) (punctuation "<" 6454 . 6538) (symbol "is_denorm_error_imp" 6454 . 6538) (punctuation ":" 6454 . 6538) (punctuation ":" 6454 . 6538) (symbol "detail" 6454 . 6538) (punctuation ":" 6454 . 6538) (punctuation ":" 6454 . 6538) (symbol "policies" 6454 . 6538) (punctuation ":" 6454 . 6538) (punctuation ":" 6454 . 6538) (symbol "math" 6454 . 6538) (punctuation ":" 6454 . 6538) (punctuation ":" 6454 . 6538) (symbol "boost" 6454 . 6538) (punctuation ":" 6454 . 6538) (punctuation ":" 6454 . 6538) (punctuation "<" 6454 . 6538) (symbol "bool_" 6454 . 6538) (punctuation ":" 6454 . 6538) (punctuation ":" 6454 . 6538) (symbol "mpl" 6454 . 6538) (punctuation ":" 6454 . 6538) (punctuation ":" 6454 . 6538) (symbol "boost" 6454 . 6538) (PUBLIC "public" 6454 . 6538) (punctuation ":" 6454 . 6538) (symbol "is_denorm_error" 6454 . 6538) (STRUCT "struct" 6454 . 6538) (punctuation ">" 6454 . 6538) (symbol "T" 6454 . 6538) (CLASS "class" 6454 . 6538) (punctuation "<" 6454 . 6538) (TEMPLATE "template" 6454 . 6538) (punctuation ";" 6363 . 6453) (semantic-list #("{}" 0 1 (macros (("Default" symbol "ignore_error" 6419 . 6452) ("name" symbol "underflow_error" 6402 . 6417) ("type" symbol "error_policy_type" 6383 . 6400)))) 6363 . 6453) (punctuation ">" 6363 . 6453) (symbol "value" 6363 . 6453) (punctuation ":" 6363 . 6453) (punctuation ":" 6363 . 6453) (punctuation ">" 6363 . 6453) (symbol "T" 6363 . 6453) (punctuation "<" 6363 . 6453) (symbol "is_underflow_error_imp" 6363 . 6453) (punctuation ":" 6363 . 6453) (punctuation ":" 6363 . 6453) (symbol "detail" 6363 . 6453) (punctuation ":" 6363 . 6453) (punctuation ":" 6363 . 6453) (symbol "policies" 6363 . 6453) (punctuation ":" 6363 . 6453) (punctuation ":" 6363 . 6453) (symbol "math" 6363 . 6453) (punctuation ":" 6363 . 6453) (punctuation ":" 6363 . 6453) (symbol "boost" 6363 . 6453) (punctuation ":" 6363 . 6453) (punctuation ":" 6363 . 6453) (punctuation "<" 6363 . 6453) (symbol "bool_" 6363 . 6453) (punctuation ":" 6363 . 6453) (punctuation ":" 6363 . 6453) (symbol "mpl" 6363 . 6453) (punctuation ":" 6363 . 6453) (punctuation ":" 6363 . 6453) (symbol "boost" 6363 . 6453) (PUBLIC "public" 6363 . 6453) (punctuation ":" 6363 . 6453) (symbol "is_underflow_error" 6363 . 6453) (STRUCT "struct" 6363 . 6453) (punctuation ">" 6363 . 6453) (symbol "T" 6363 . 6453) (CLASS "class" 6363 . 6453) (punctuation "<" 6363 . 6453) (TEMPLATE "template" 6363 . 6453) (punctuation ";" 6274 . 6362) (semantic-list #("{}" 0 1 (macros (("Default" symbol "throw_on_error" 6329 . 6361) ("name" symbol "overflow_error" 6313 . 6327) ("type" symbol "error_policy_type" 6294 . 6311)))) 6274 . 6362) (punctuation ">" 6274 . 6362) (symbol "value" 6274 . 6362) (punctuation ":" 6274 . 6362) (punctuation ":" 6274 . 6362) (punctuation ">" 6274 . 6362) (symbol "T" 6274 . 6362) (punctuation "<" 6274 . 6362) (symbol "is_overflow_error_imp" 6274 . 6362) (punctuation ":" 6274 . 6362) (punctuation ":" 6274 . 6362) (symbol "detail" 6274 . 6362) (punctuation ":" 6274 . 6362) (punctuation ":" 6274 . 6362) (symbol "policies" 6274 . 6362) (punctuation ":" 6274 . 6362) (punctuation ":" 6274 . 6362) (symbol "math" 6274 . 6362) (punctuation ":" 6274 . 6362) (punctuation ":" 6274 . 6362) (symbol "boost" 6274 . 6362) (punctuation ":" 6274 . 6362) (punctuation ":" 6274 . 6362) (punctuation "<" 6274 . 6362) (symbol "bool_" 6274 . 6362) (punctuation ":" 6274 . 6362) (punctuation ":" 6274 . 6362) (symbol "mpl" 6274 . 6362) (punctuation ":" 6274 . 6362) (punctuation ":" 6274 . 6362) (symbol "boost" 6274 . 6362) (PUBLIC "public" 6274 . 6362) (punctuation ":" 6274 . 6362) (symbol "is_overflow_error" 6274 . 6362) (STRUCT "struct" 6274 . 6362) (punctuation ">" 6274 . 6362) (symbol "T" 6274 . 6362) (CLASS "class" 6274 . 6362) (punctuation "<" 6274 . 6362) (TEMPLATE "template" 6274 . 6362) (punctuation ";" 6193 . 6273) (semantic-list #("{}" 0 1 (macros (("Default" symbol "throw_on_error" 6244 . 6272) ("name" symbol "pole_error" 6232 . 6242) ("type" symbol "error_policy_type" 6213 . 6230)))) 6193 . 6273) (punctuation ">" 6193 . 6273) (symbol "value" 6193 . 6273) (punctuation ":" 6193 . 6273) (punctuation ":" 6193 . 6273) (punctuation ">" 6193 . 6273) (symbol "T" 6193 . 6273) (punctuation "<" 6193 . 6273) (symbol "is_pole_error_imp" 6193 . 6273) (punctuation ":" 6193 . 6273) (punctuation ":" 6193 . 6273) (symbol "detail" 6193 . 6273) (punctuation ":" 6193 . 6273) (punctuation ":" 6193 . 6273) (symbol "policies" 6193 . 6273) (punctuation ":" 6193 . 6273) (punctuation ":" 6193 . 6273) (symbol "math" 6193 . 6273) (punctuation ":" 6193 . 6273) (punctuation ":" 6193 . 6273) (symbol "boost" 6193 . 6273) (punctuation ":" 6193 . 6273) (punctuation ":" 6193 . 6273) (punctuation "<" 6193 . 6273) (symbol "bool_" 6193 . 6273) (punctuation ":" 6193 . 6273) (punctuation ":" 6193 . 6273) (symbol "mpl" 6193 . 6273) (punctuation ":" 6193 . 6273) (punctuation ":" 6193 . 6273) (symbol "boost" 6193 . 6273) (PUBLIC "public" 6193 . 6273) (punctuation ":" 6193 . 6273) (symbol "is_pole_error" 6193 . 6273) (STRUCT "struct" 6193 . 6273) (punctuation ">" 6193 . 6273) (symbol "T" 6193 . 6273) (CLASS "class" 6193 . 6273) (punctuation "<" 6193 . 6273) (TEMPLATE "template" 6193 . 6273) (punctuation ";" 6108 . 6192) (semantic-list #("{}" 0 1 (macros (("Default" symbol "throw_on_error" 6161 . 6191) ("name" symbol "domain_error" 6147 . 6159) ("type" symbol "error_policy_type" 6128 . 6145)))) 6108 . 6192) (punctuation ">" 6108 . 6192) (symbol "value" 6108 . 6192) (punctuation ":" 6108 . 6192) (punctuation ":" 6108 . 6192) (punctuation ">" 6108 . 6192) (symbol "T" 6108 . 6192) (punctuation "<" 6108 . 6192) (symbol "is_domain_error_imp" 6108 . 6192) (punctuation ":" 6108 . 6192) (punctuation ":" 6108 . 6192) (symbol "detail" 6108 . 6192) (punctuation ":" 6108 . 6192) (punctuation ":" 6108 . 6192) (symbol "policies" 6108 . 6192) (punctuation ":" 6108 . 6192) (punctuation ":" 6108 . 6192) (symbol "math" 6108 . 6192) (punctuation ":" 6108 . 6192) (punctuation ":" 6108 . 6192) (symbol "boost" 6108 . 6192) (punctuation ":" 6108 . 6192) (punctuation ":" 6108 . 6192) (punctuation "<" 6108 . 6192) (symbol "bool_" 6108 . 6192) (punctuation ":" 6108 . 6192) (punctuation ":" 6108 . 6192) (symbol "mpl" 6108 . 6192) (punctuation ":" 6108 . 6192) (punctuation ":" 6108 . 6192) (symbol "boost" 6108 . 6192) (PUBLIC "public" 6108 . 6192) (punctuation ":" 6108 . 6192) (symbol "is_domain_error" 6108 . 6192) (STRUCT "struct" 6108 . 6192) (punctuation ">" 6108 . 6192) (symbol "T" 6108 . 6192) (CLASS "class" 6108 . 6192) (punctuation "<" 6108 . 6192) (TEMPLATE "template" 6108 . 6192) (semantic-list 2908 . 2971) (punctuation 2907 . 2908) (punctuation 2905 . 2906) (punctuation 2904 . 2905) (semantic-list 1120 . 1123) (semantic-list 1052 . 1055))
      :lexical-table 
        '(("BOOST_MATH_DIGITS10_POLICY" . ((number "0" 2142 . 2143)))
          ("BOOST_MATH_META_BOOL" (spp-arg-list ("name" "Default") 3636 . 3651) . 
              ((TEMPLATE "template" 3656 . 3664) (punctuation "<" 3665 . 3666) (BOOL "bool" 3666 . 3670) (symbol "N" 3671 . 3672) (punctuation "=" 3673 . 3674) (symbol "Default" 3675 . 3682) (punctuation ">" 3682 . 3683) (STRUCT "struct" 3684 . 3690) (symbol "name" 3691 . 3695) (punctuation ":" 3696 . 3697) (PUBLIC "public" 3698 . 3704) (symbol "boost" 3705 . 3710) (punctuation ":" 3710 . 3711) (punctuation ":" 3711 . 3712) (symbol "mpl" 3712 . 3715) (punctuation ":" 3715 . 3716) (punctuation ":" 3716 . 3717) (symbol "bool_" 3717 . 3722) (punctuation "<" 3722 . 3723) (symbol "N" 3723 . 3724) (punctuation ">" 3724 . 3725) (semantic-list "{}" 3725 . 3727) (punctuation ";" 3727 . 3728) (NAMESPACE "namespace" 3733 . 3742) (symbol "detail" 3743 . 3749) (semantic-list "{\\
   template <bool N>\\
   char test_is_valid_arg(const name<N>*);\\
   char test_is_default_arg(const name<Default>*);\\
   template <class T> struct is_##name##_imp\\
   {\\
      template <bool N> static char test(const name<N>*);\\
      static double test(...);\\
      BOOST_STATIC_CONSTANT(bool, value = sizeof(test(static_cast<T*>(0))) == 1);\\
   };\\
   }" 3749 . 4107) (TEMPLATE "template" 4112 . 4120) (punctuation "<" 4121 . 4122) (CLASS "class" 4122 . 4127) (symbol "T" 4128 . 4129) (punctuation ">" 4129 . 4130) (STRUCT "struct" 4131 . 4137) (spp-symbol-merge ((symbol "is_" 4138 . 4141) (symbol "name" 4143 . 4147)) 4138 . 4147) (punctuation ":" 4148 . 4149) (PUBLIC "public" 4150 . 4156) (symbol "boost" 4157 . 4162) (punctuation ":" 4162 . 4163) (punctuation ":" 4163 . 4164) (symbol "mpl" 4164 . 4167) (punctuation ":" 4167 . 4168) (punctuation ":" 4168 . 4169) (symbol "bool_" 4169 . 4174) (punctuation "<" 4174 . 4175) (punctuation ":" 4176 . 4177) (punctuation ":" 4177 . 4178) (symbol "boost" 4178 . 4183) (punctuation ":" 4183 . 4184) (punctuation ":" 4184 . 4185) (symbol "math" 4185 . 4189) (punctuation ":" 4189 . 4190) (punctuation ":" 4190 . 4191) (symbol "policies" 4191 . 4199) (punctuation ":" 4199 . 4200) (punctuation ":" 4200 . 4201) (symbol "detail" 4201 . 4207) (punctuation ":" 4207 . 4208) (punctuation ":" 4208 . 4209) (spp-symbol-merge ((spp-symbol-merge ((symbol "is_" 4209 . 4212) (symbol "name" 4214 . 4218)) 4209 . 4218) (symbol "_imp" 4220 . 4224)) 4209 . 4224) (punctuation "<" 4224 . 4225) (symbol "T" 4225 . 4226) (punctuation ">" 4226 . 4227) (punctuation ":" 4227 . 4228) (punctuation ":" 4228 . 4229) (symbol "value" 4229 . 4234) (punctuation ">" 4234 . 4235) (semantic-list "{}" 4235 . 4237) (punctuation ";" 4237 . 4238)))
          ("BOOST_MATH_POLICY_HPP")
          ("BOOST_MATH_POLE_ERROR_POLICY" . ((symbol "throw_on_error" 1406 . 1420)))
          ("BOOST_MATH_MAX_SERIES_ITERATION_POLICY" . ((number "1000000" 2755 . 2762)))
          ("BOOST_MATH_ROUNDING_ERROR_POLICY" . ((symbol "throw_on_error" 1722 . 1736)))
          ("BOOST_MATH_EVALUATION_ERROR_POLICY" . ((symbol "throw_on_error" 1618 . 1632)))
          ("BOOST_MATH_MAX_ROOT_ITERATION_POLICY" . ((number "200" 2860 . 2863)))
          ("BOOST_MATH_PROMOTE_FLOAT_POLICY" . ((symbol "true" 2231 . 2235)))
          ("BOOST_MATH_DISCRETE_QUANTILE_POLICY" . ((symbol "integer_round_outwards" 2533 . 2555)))
          ("BOOST_MATH_DENORM_ERROR_POLICY" . ((symbol "ignore_error" 1926 . 1938)))
          ("BOOST_MATH_OVERFLOW_ERROR_POLICY" . ((symbol "throw_on_error" 1510 . 1524)))
          ("BOOST_MATH_UNDERFLOW_ERROR_POLICY" . ((symbol "ignore_error" 1828 . 1840)))
          ("BOOST_MATH_ASSERT_UNDEFINED_POLICY" . ((symbol "true" 2649 . 2653)))
          ("BOOST_MATH_META_INT" (spp-arg-list ("type" "name" "Default") 2999 . 3020) . 
              ((TEMPLATE "template" 3025 . 3033) (punctuation "<" 3034 . 3035) (symbol "type" 3035 . 3039) (symbol "N" 3040 . 3041) (punctuation "=" 3042 . 3043) (symbol "Default" 3044 . 3051) (punctuation ">" 3051 . 3052) (STRUCT "struct" 3053 . 3059) (symbol "name" 3060 . 3064) (punctuation ":" 3065 . 3066) (PUBLIC "public" 3067 . 3073) (symbol "boost" 3074 . 3079) (punctuation ":" 3079 . 3080) (punctuation ":" 3080 . 3081) (symbol "mpl" 3081 . 3084) (punctuation ":" 3084 . 3085) (punctuation ":" 3085 . 3086) (symbol "int_" 3086 . 3090) (punctuation "<" 3090 . 3091) (symbol "N" 3091 . 3092) (punctuation ">" 3092 . 3093) (semantic-list "{}" 3093 . 3095) (punctuation ";" 3095 . 3096) (NAMESPACE "namespace" 3101 . 3110) (symbol "detail" 3111 . 3117) (semantic-list "{\\
   template <type N>\\
   char test_is_valid_arg(const name<N>*);\\
   char test_is_default_arg(const name<Default>*);\\
   template <class T> struct is_##name##_imp\\
   {\\
      template <type N> static char test(const name<N>*);\\
      static double test(...);\\
      BOOST_STATIC_CONSTANT(bool, value = sizeof(test(static_cast<T*>(0))) == 1);\\
   };\\
   }" 3117 . 3475) (TEMPLATE "template" 3480 . 3488) (punctuation "<" 3489 . 3490) (CLASS "class" 3490 . 3495) (symbol "T" 3496 . 3497) (punctuation ">" 3497 . 3498) (STRUCT "struct" 3499 . 3505) (spp-symbol-merge ((symbol "is_" 3506 . 3509) (symbol "name" 3511 . 3515)) 3506 . 3515) (punctuation ":" 3516 . 3517) (PUBLIC "public" 3518 . 3524) (symbol "boost" 3525 . 3530) (punctuation ":" 3530 . 3531) (punctuation ":" 3531 . 3532) (symbol "mpl" 3532 . 3535) (punctuation ":" 3535 . 3536) (punctuation ":" 3536 . 3537) (symbol "bool_" 3537 . 3542) (punctuation "<" 3542 . 3543) (punctuation ":" 3544 . 3545) (punctuation ":" 3545 . 3546) (symbol "boost" 3546 . 3551) (punctuation ":" 3551 . 3552) (punctuation ":" 3552 . 3553) (symbol "math" 3553 . 3557) (punctuation ":" 3557 . 3558) (punctuation ":" 3558 . 3559) (symbol "policies" 3559 . 3567) (punctuation ":" 3567 . 3568) (punctuation ":" 3568 . 3569) (symbol "detail" 3569 . 3575) (punctuation ":" 3575 . 3576) (punctuation ":" 3576 . 3577) (spp-symbol-merge ((spp-symbol-merge ((symbol "is_" 3577 . 3580) (symbol "name" 3582 . 3586)) 3577 . 3586) (symbol "_imp" 3588 . 3592)) 3577 . 3592) (punctuation "<" 3592 . 3593) (symbol "T" 3593 . 3594) (punctuation ">" 3594 . 3595) (punctuation ":" 3595 . 3596) (punctuation ":" 3596 . 3597) (symbol "value" 3597 . 3602) (punctuation ">" 3602 . 3603) (semantic-list "{}" 3603 . 3605) (punctuation ";" 3605 . 3606)))
          ("BOOST_MATH_PARAMETER" (spp-arg-list ("name") 7834 . 7840) . 
              ((symbol "BOOST_PARAMETER_TEMPLATE_KEYWORD" 7845 . 7877) (semantic-list "(name##_name)" 7877 . 7890) (symbol "BOOST_PARAMETER_NAME" 7895 . 7915) (semantic-list "(name##_name)" 7915 . 7928)))
          ("BOOST_MATH_DOMAIN_ERROR_POLICY" . ((symbol "throw_on_error" 1310 . 1324)))
          ("BOOST_MATH_INDETERMINATE_RESULT_ERROR_POLICY" . ((symbol "ignore_error" 2052 . 2064)))
          ("BOOST_MATH_PROMOTE_DOUBLE_POLICY" . ((symbol "true" 2426 . 2430)))
          )
))
  :file "!usr!include!boost!math!policies!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
