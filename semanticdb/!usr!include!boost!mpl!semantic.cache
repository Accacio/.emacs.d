;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_IF_HPP_INCLUDED" variable (:constant-flag t) nil [44 69])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [466 506])
            ("boost/mpl/aux_/static_cast.hpp" include (:system-flag t) nil [507 548])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [549 586])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [587 631])
            ("boost/mpl/aux_/config/integral.hpp" include (:system-flag t) nil [632 677])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [678 719])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [720 767])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("if_c" type
                               (:template 
                                  ( ("bool" type (:typevar "C") nil nil)
                                    ("T1" type (:type "class") nil nil)
                                    ("T2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T1" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [943 959]))                                  )
                                (reparse-symbol namespacesubparts) [860 962])
                            ("if_c" type
                               (:template 
                                  ( ("T1" type (:type "class") nil nil)
                                    ("T2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T2" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1047 1063]))                                  
                                :template-specifier 
                                  ( ("false" type nil nil nil)
                                    ("T1" type nil nil nil)
                                    ("T2" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [964 1066])
                            ("if_" type
                               (:members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [1397 1405])
                                    ("almost_type_" variable (:type "int") (reparse-symbol classsubparts) [1721 1734])
                                    ("public" label nil (reparse-symbol classsubparts) [1738 1745])
                                    ("type" type
                                       (:typedef ("almost_type_::type" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1750 1791]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1383 1850]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [787 2975]))                  
                :type "namespace")
                nil [769 2976]))          
      :file "if.hpp"
      :pointmax 3014
      :fsize 3013
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 2964 . 2972) (symbol 2943 . 2964) (number 2965 . 2966) (semantic-list 1829 . 1847) (symbol 1801 . 1829) (semantic-list 1836 . 1846) (number 1830 . 1831) (punctuation 1719 . 1720) (symbol 1708 . 1710) (punctuation 1706 . 1707) (symbol 1695 . 1697) (punctuation 1693 . 1694) (semantic-list 1634 . 1677) (symbol 1609 . 1634) (punctuation 1670 . 1671) (punctuation 1669 . 1670) (semantic-list 1665 . 1669) (punctuation 1495 . 1496) (symbol 1491 . 1495) (TYPEDEF 1483 . 1490) (punctuation 1381 . 1382) (semantic-list 1372 . 1376) (symbol 1350 . 1372) (TYPENAME 1341 . 1349) (punctuation 1339 . 1340) (semantic-list 1330 . 1334) (symbol 1308 . 1330) (TYPENAME 1299 . 1307) (punctuation 1297 . 1298) (semantic-list 1288 . 1292) (symbol 1266 . 1288) (TYPENAME 1257 . 1265) (punctuation 1249 . 1250) (TEMPLATE 1241 . 1249))
      :lexical-table 
        '(("BOOST_MPL_IF_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_ASSERT_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [484 512])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [513 553])
            ("boost/mpl/aux_/nested_type_wknd.hpp" include (:system-flag t) nil [554 600])
            ("boost/mpl/aux_/yes_no.hpp" include (:system-flag t) nil [601 637])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [638 670])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [671 712])
            ("boost/mpl/aux_/config/nttp.hpp" include (:system-flag t) nil [714 755])
            ("boost/mpl/aux_/config/dtp.hpp" include (:system-flag t) nil [756 796])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [797 837])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [838 879])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [880 932])
            ("boost/mpl/aux_/config/pp_counter.hpp" include (:system-flag t) nil [933 980])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [981 1028])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [1030 1067])
            ("boost/config.hpp" include (:system-flag t) nil [1069 1096])
            ("cstddef" include (:system-flag t) nil [1140 1158])
            ("BOOST_MPL_AUX_ASSERT_CONSTANT" variable (:constant-flag t) nil [2097 2126])
            ("failed" type (:type "struct") nil [2218 2235])
            ("AUX778076_ASSERT_ARG" variable (:constant-flag t) nil [2530 2550])
            ("assert" type
               (:template 
                  ( ("bool" type (:typevar "C") nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("void")
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [2607 2626]))                  )
                nil [2564 2629])
            ("assert" type
               (:type "struct"
                :members 
                  ( ("type" variable (:type "int") (reparse-symbol classsubparts) [2710 2715]))                  
                :template-specifier 
                  ( ("false" type nil nil nil))                  )
                nil [2630 2718])
            ("assertion_failed" function
               (:template 
                  ( ("bool" type (:typevar "C") nil nil))                  
                :type "int"
                :arguments 
                  ( ("" variable
                       (:typemodifiers ("typename")
                        :type ("assert" type
                             (:template-specifier 
                                ( ("C" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [2761 2780])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2781 2787]))                  
                :prototype-flag t)
                nil [2720 2788])
            ("assertion" type
               (:template 
                  ( ("bool" type (:typevar "C") nil nil))                  
                :type "struct"
                :members 
                  ( ("failed" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("" variable (:type ("assert" type
                                 (:template-specifier 
                                    ( ("false" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol arg-sub-list) [2851 2866]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2832 2867]))                  )
                nil [2790 2870])
            ("assertion" type
               (:type "struct"
                :members 
                  ( ("failed" function
                       (:prototype-flag t
                        :typemodifiers ("static")
                        :arguments 
                          ( ("" variable
                               (:pointer 1
                                :type "void")
                                (reparse-symbol arg-sub-list) [2931 2938]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [2912 2939]))                  
                :template-specifier 
                  ( ("true" type nil nil nil))                  )
                nil [2872 2942])
            ("assert_" type
               (:members 
                  ( ("types" type
                       (:template 
                          ( ("T1" type (:type "class") nil nil)
                            ("T2" type (:type "class") nil nil)
                            ("T3" type (:type "class") nil nil)
                            ("T4" type (:type "class") nil nil))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [3035 3129])
                    ("arg" variable
                       (:typemodifiers ("static")
                        :type ("assert_" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3141 3166])
                    ("relations" type
                       (:members 
                          ( ("equal" variable
                               (:constant-flag t
                                :default-value (3196 3197)
                                :type "int")
                                (reparse-symbol enumsubparts) [3188 3197])
                            ("not_equal" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3199 3209])
                            ("greater" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3210 3218])
                            ("greater_equal" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3219 3233])
                            ("less" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3234 3239])
                            ("less_equal" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3240 3252]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [3171 3253]))                  
                :type "struct")
                nil [2944 3256])
            ("==" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3331 3338])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3339 3347]))                  
                :type "bool")
                nil [3314 3348])
            ("!=" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3366 3373])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3374 3382]))                  
                :type "bool")
                nil [3349 3383])
            (">" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3400 3407])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3408 3416]))                  
                :type "bool")
                nil [3384 3417])
            (">=" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3435 3442])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3443 3451]))                  
                :type "bool")
                nil [3418 3452])
            ("<" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3469 3476])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3477 3485]))                  
                :type "bool")
                nil [3453 3486])
            ("<=" function
               (:prototype-flag t
                :operator-flag t
                :arguments 
                  ( ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3504 3511])
                    ("" variable (:type ("failed" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3512 3520]))                  
                :type "bool")
                nil [3487 3521])
            ("assert_relation" type (:type "struct") nil [3817 3843])
            ("BOOST_MPL_AUX_ASSERT_RELATION" variable (:constant-flag t) nil [3855 3884])
            ("assert_arg_pred_impl" type
               (:template 
                  ( ("bool" type nil nil nil))                  
                :type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("int")
                        :type "typedef")
                        (reparse-symbol classsubparts) [5458 5475]))                  )
                nil [5411 5478])
            ("assert_arg_pred_impl" type
               (:type "struct"
                :members 
                  ( ("type" type
                       (:typedef ("void")
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [5526 5545]))                  
                :template-specifier 
                  ( ("true" type nil nil nil))                  )
                nil [5479 5548])
            ("assert_arg_pred" type
               (:template 
                  ( ("P" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("p_type" type
                       (:typedef ("P::type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5602 5634])
                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5695 5705]))                  )
                nil [5550 5708])
            ("assert_arg_pred_not" type
               (:template 
                  ( ("P" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("p_type" type
                       (:typedef ("P::type" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [5766 5798])
                    ("BOOST_STATIC_CONSTANT" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) nil)
                            ("" variable (:type ("p" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                          
                        :type "int")
                        (reparse-symbol classsubparts) [5803 5861])
                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5908 5918]))                  )
                nil [5710 5921])
            ("assert_arg" function
               (:template 
                  ( ("Pred" type (:type "class") nil nil))                  
                :type ("assert" type (:type "class") nil nil)
                :arguments 
                  ( ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Pred" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6328 6333]))                          
                        :type "void")
                        nil nil)
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("assert_arg_pred_not" type
                             (:template-specifier 
                                ( ("Pred" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6335 6370])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6371 6377]))                  
                :prototype-flag t)
                nil [6245 6378])
            ("assert_not_arg" function
               (:template 
                  ( ("Pred" type (:type "class") nil nil))                  
                :type ("assert" type (:type "class") nil nil)
                :arguments 
                  ( ("" function
                       (:function-pointer t
                        :arguments 
                          ( ("" variable (:type ("Pred" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6467 6472]))                          
                        :type "void")
                        nil nil)
                    ("" variable
                       (:typemodifiers ("typename")
                        :type ("assert_arg_pred" type
                             (:template-specifier 
                                ( ("Pred" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [6474 6505])
                    ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6506 6512]))                  
                :prototype-flag t)
                nil [6380 6513])
            ("BOOST_MPL_ASSERT" variable (:constant-flag t) nil [8805 8821])
            ("BOOST_MPL_ASSERT_NOT" variable (:constant-flag t) nil [9500 9520])
            ("BOOST_MPL_ASSERT_RELATION" variable (:constant-flag t) nil [12317 12342])
            ("BOOST_MPL_ASSERT_MSG_IMPL" variable (:constant-flag t) nil [13470 13495])
            ("BOOST_MPL_ASSERT_MSG" variable (:constant-flag t) nil [14011 14031]))          
      :file "assert.hpp"
      :pointmax 14172
      :fsize 14171
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((symbol 7792 . 7833) (punctuation 6505 . 6506) (punctuation 6504 . 6505) (punctuation 6370 . 6371) (punctuation 6369 . 6370) (punctuation 6242 . 6243) (semantic-list 6117 . 6242) (punctuation 6115 . 6116) (punctuation 6114 . 6115) (punctuation 6113 . 6114) (punctuation 6112 . 6113) (punctuation 6111 . 6112) (punctuation 6110 . 6111) (punctuation 6109 . 6110) (punctuation 6108 . 6109) (punctuation 6107 . 6108) (punctuation 6106 . 6107) (punctuation 6105 . 6106) (punctuation 6104 . 6105) (symbol 6097 . 6103) (punctuation 6095 . 6096) (symbol 6090 . 6094) (TYPENAME 6081 . 6089) (punctuation 6079 . 6080) (TEMPLATE 6071 . 6079) (punctuation 6068 . 6069) (semantic-list 5969 . 6068) (punctuation 5967 . 5968) (punctuation 5966 . 5967) (punctuation 5965 . 5966) (punctuation 5964 . 5965) (punctuation 5963 . 5964) (punctuation 5962 . 5963) (punctuation 5961 . 5962) (punctuation 5960 . 5961) (punctuation 5959 . 5960) (punctuation 5958 . 5959) (punctuation 5957 . 5958) (punctuation 5956 . 5957) (symbol 5949 . 5955) (punctuation 5947 . 5948) (symbol 5942 . 5946) (TYPENAME 5933 . 5941) (punctuation 5931 . 5932) (TEMPLATE 5923 . 5931) (punctuation 5907 . 5908) (punctuation 5906 . 5907) (punctuation 5905 . 5906) (symbol 5904 . 5905) (punctuation 5903 . 5904) (symbol 5883 . 5903) (TYPENAME 5874 . 5882) (TYPEDEF 5866 . 5873) (punctuation 5694 . 5695) (punctuation 5693 . 5694) (punctuation 5692 . 5693) (symbol 5686 . 5691) (punctuation 5685 . 5686) (punctuation 5684 . 5685) (symbol 5678 . 5684) (punctuation 5676 . 5677) (symbol 5656 . 5676) (TYPENAME 5647 . 5655) (TYPEDEF 5639 . 5646) (punctuation 3814 . 3815) (semantic-list 3797 . 3813) (semantic-list 3794 . 3797) (BOOL 3789 . 3793) (punctuation 3787 . 3788) (semantic-list 3778 . 3787) (symbol 3755 . 3778) (punctuation 3753 . 3754) (semantic-list 3744 . 3753) (symbol 3721 . 3744) (punctuation 3719 . 3720) (TEMPLATE 3711 . 3719) (punctuation 2780 . 2781) (punctuation 2779 . 2780) (semantic-list 2701 . 2709) (symbol 2681 . 2701) (TYPEDEF 2673 . 2680) (symbol 2176 . 2216))
      :lexical-table 
        '(("BOOST_MPL_ASSERT_HPP_INCLUDED")
          ("BOOST_MPL_ASSERT_MSG_IMPL" (spp-arg-list ("counter" "c" "msg" "types_") 13495 . 13522) . 
              ((STRUCT "struct" 13526 . 13532) (symbol "msg" 13533 . 13536) (punctuation ";" 13536 . 13537) (TYPEDEF "typedef" 13540 . 13547) (STRUCT "struct" 13548 . 13554) (symbol "BOOST_PP_CAT" 13555 . 13567) (semantic-list "(msg,counter)" 13567 . 13580) (punctuation ":" 13581 . 13582) (symbol "boost" 13583 . 13588) (punctuation ":" 13588 . 13589) (punctuation ":" 13589 . 13590) (symbol "mpl" 13590 . 13593) (punctuation ":" 13593 . 13594) (punctuation ":" 13594 . 13595) (symbol "assert_" 13595 . 13602) (semantic-list "{ \\
    static boost::mpl::failed ************ (msg::************ assert_arg()) types_ \\
    { return 0; } \\
}" 13605 . 13715) (symbol "BOOST_PP_CAT" 13716 . 13728) (semantic-list "(mpl_assert_arg,counter)" 13728 . 13752) (punctuation ";" 13752 . 13753) (symbol "BOOST_MPL_AUX_ASSERT_CONSTANT" 13756 . 13785) (semantic-list "( \\
      std::size_t \\
    , BOOST_PP_CAT(mpl_assertion_in_line_,counter) = sizeof( \\
        boost::mpl::assertion_failed<(c)>( BOOST_PP_CAT(mpl_assert_arg,counter)::assert_arg() ) \\
        ) \\
    )" 13785 . 13987)))
          ("BOOST_MPL_ASSERT_NOT" (spp-arg-list ("pred") 9520 . 9526) . ((symbol "BOOST_MPL_AUX_ASSERT_CONSTANT" 9529 . 9558) (semantic-list "( \\
      std::size_t \\
    , BOOST_PP_CAT(mpl_assertion_in_line_,BOOST_MPL_AUX_PP_COUNTER()) = sizeof( \\
          boost::mpl::assertion_failed<false>( \\
              boost::mpl::assert_not_arg( (void (*) pred)0, 1 ) \\
            ) \\
        ) \\
   )" 9558 . 9811)))
          ("BOOST_MPL_AUX_ASSERT_CONSTANT" (spp-arg-list ("T" "expr") 2126 . 2135) . ((symbol "BOOST_STATIC_CONSTANT" 2136 . 2157) (semantic-list "(T, expr)" 2157 . 2166)))
          ("BOOST_MPL_ASSERT_MSG" (spp-arg-list ("c" "msg" "types_") 14031 . 14049) . ((symbol "BOOST_MPL_ASSERT_MSG_IMPL" 14052 . 14077) (semantic-list "( BOOST_MPL_AUX_PP_COUNTER(), c, msg, types_ )" 14077 . 14123)))
          ("BOOST_MPL_ASSERT" (spp-arg-list ("pred") 8821 . 8827) . ((symbol "BOOST_MPL_AUX_ASSERT_CONSTANT" 8830 . 8859) (semantic-list "( \\
      std::size_t \\
    , BOOST_PP_CAT(mpl_assertion_in_line_,BOOST_MPL_AUX_PP_COUNTER()) = sizeof( \\
          boost::mpl::assertion_failed<false>( \\
              boost::mpl::assert_arg( (void (*) pred)0, 1 ) \\
            ) \\
        ) \\
    )" 8859 . 9109)))
          ("BOOST_MPL_ASSERT_RELATION" (spp-arg-list ("x" "rel" "y") 12342 . 12353) . ((symbol "BOOST_MPL_AUX_ASSERT_CONSTANT" 12356 . 12385) (semantic-list "( \\
      std::size_t \\
    , BOOST_PP_CAT(mpl_assertion_in_line_,BOOST_MPL_AUX_PP_COUNTER()) = sizeof( \\
        boost::mpl::assertion_failed<(x rel y)>( (boost::mpl::failed ************ ( \\
            boost::mpl::BOOST_MPL_AUX_ASSERT_RELATION(x,y,(&boost::mpl::operator rel))::************))0 ) \\
        ) \\
    )" 12385 . 12702)))
          ("BOOST_MPL_AUX_ASSERT_RELATION" (spp-arg-list ("x" "y" "r") 3884 . 3893) . 
              ((symbol "assert_relation" 3894 . 3909) (punctuation "<" 3909 . 3910) (symbol "x" 3910 . 3911) (punctuation "," 3911 . 3912) (symbol "y" 3912 . 3913) (punctuation "," 3913 . 3914) (symbol "r" 3914 . 3915) (punctuation ">" 3915 . 3916)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_LOGICAL_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/or.hpp" include (:system-flag t) nil [481 508])
            ("boost/mpl/and.hpp" include (:system-flag t) nil [509 537])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [538 566]))          
      :file "logical.hpp"
      :pointmax 609
      :fsize 608
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_LOGICAL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_EVAL_IF_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [482 509])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [510 547])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [548 592])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [593 634])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [635 675])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [676 723])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("eval_if" type
                               (:superclasses 
                                  ( ("if_::type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [901 1281])
                            ("eval_if_c" type
                               (:template 
                                  ( ("bool" type (:typevar "C") nil nil)
                                    ("F1" type (:type "class") nil nil)
                                    ("F2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("if_c::type" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1388 1783]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [743 1865]))                  
                :type "namespace")
                nil [725 1865]))          
      :file "eval_if.hpp"
      :pointmax 1865
      :fsize 1864
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1806 . 1818) (symbol 1785 . 1806) (number 1807 . 1808) (semantic-list 1257 . 1278) (symbol 1229 . 1257) (semantic-list 1268 . 1277) (number 1258 . 1259) (punctuation 899 . 900) (semantic-list 890 . 894) (symbol 868 . 890) (TYPENAME 859 . 867) (punctuation 857 . 858) (semantic-list 848 . 852) (symbol 826 . 848) (TYPENAME 817 . 825) (punctuation 815 . 816) (semantic-list 807 . 810) (symbol 785 . 807) (TYPENAME 776 . 784) (punctuation 768 . 769) (TEMPLATE 760 . 768))
      :lexical-table 
        '(("BOOST_MPL_EVAL_IF_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_NOT_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [469 498])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [499 538])
            ("boost/mpl/aux_/nested_type_wknd.hpp" include (:system-flag t) nil [539 585])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [586 623])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [624 668])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [705 838]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [688 1092]))                  
                :type "namespace")
                nil [670 1093]))          
      :file "not.hpp"
      :pointmax 1132
      :fsize 1131
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1081 . 1089) (symbol 1060 . 1081) (number 1082 . 1083) (punctuation 1057 . 1058) (semantic-list 1009 . 1057) (punctuation 1007 . 1008) (symbol 993 . 998) (punctuation 992 . 993) (punctuation 991 . 992) (semantic-list 988 . 991) (symbol 958 . 988) (punctuation 946 . 947) (symbol 938 . 946) (punctuation 937 . 938) (punctuation 936 . 937) (symbol 933 . 936) (punctuation 931 . 932) (symbol 922 . 926) (STRUCT 915 . 921) (punctuation 913 . 914) (semantic-list 905 . 908) (symbol 883 . 905) (TYPENAME 874 . 882) (punctuation 866 . 867) (TEMPLATE 858 . 866) (punctuation 834 . 835) (semantic-list 831 . 834) (punctuation 829 . 830) (symbol 827 . 829) (punctuation 826 . 827) (punctuation 825 . 826) (symbol 820 . 825) (punctuation 818 . 819) (symbol 805 . 813) (STRUCT 798 . 804) (punctuation 766 . 767) (semantic-list 755 . 765) (symbol 732 . 755) (punctuation 730 . 731) (TEMPLATE 722 . 730))
      :lexical-table 
        '(("BOOST_MPL_NOT_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_OR_HPP_INCLUDED" variable (:constant-flag t) nil [44 69])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [466 519])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [622 654])
            ("boost/mpl/aux_/nested_type_wknd.hpp" include (:system-flag t) nil [655 704])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [705 745])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [746 793])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [794 838])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1239 1268])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1276 1329]))          
      :file "or.hpp"
      :pointmax 1680
      :fsize 1679
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 590 . 620) (symbol 583 . 590) (punctuation 582 . 583) (punctuation 580 . 581) (punctuation 579 . 580))
      :lexical-table 
        '(("BOOST_MPL_OR_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "or" 1269 . 1271) (punctuation "." 1271 . 1272) (symbol "hpp" 1272 . 1275)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AND_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [469 522])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [625 657])
            ("boost/mpl/aux_/nested_type_wknd.hpp" include (:system-flag t) nil [658 707])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [708 748])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [749 796])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1205 1234])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1243 1296]))          
      :file "and.hpp"
      :pointmax 1651
      :fsize 1650
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 593 . 623) (symbol 586 . 593) (punctuation 585 . 586) (punctuation 583 . 584) (punctuation 582 . 583))
      :lexical-table 
        '(("BOOST_MPL_AND_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "and" 1235 . 1238) (punctuation "." 1238 . 1239) (symbol "hpp" 1239 . 1242)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_LAMBDA_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/void_fwd.hpp" include (:system-flag t) nil [490 523])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [524 556])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [557 600])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [654 685])
            ("boost/mpl/aux_/lambda_arity_param.hpp" include (:system-flag t) nil [686 737])
            ("boost/mpl/aux_/template_arity_fwd.hpp" include (:system-flag t) nil [738 789])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("lambda" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1005 1019]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [809 1022]))                  
                :type "namespace")
                nil [791 1023]))          
      :file "lambda_fwd.hpp"
      :pointmax 1311
      :fsize 1310
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((punctuation 1003 . 1004) (semantic-list 922 . 998) (symbol 890 . 922) (punctuation 987 . 988) (punctuation 955 . 956) (symbol 880 . 885) (punctuation 987 . 988) (punctuation 955 . 956) (punctuation 878 . 879) (symbol 874 . 877) (TYPENAME 865 . 873) (punctuation 863 . 864) (symbol 856 . 858) (punctuation 854 . 855) (symbol 852 . 853) (TYPENAME 843 . 851) (punctuation 834 . 835) (TEMPLATE 826 . 834))
      :lexical-table 
        '(("BOOST_MPL_LAMBDA_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_INT_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/int_fwd.hpp" include (:system-flag t) nil [469 501])
            ("AUX_WRAPPER_VALUE_TYPE" variable (:constant-flag t) nil [511 533])
            ("boost/mpl/aux_/integral_wrapper.hpp" include (:system-flag t) nil [538 584]))          
      :file "int.hpp"
      :pointmax 623
      :fsize 622
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("AUX_WRAPPER_VALUE_TYPE" . ((INT "int" 534 . 537)))
          ("BOOST_MPL_INT_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_BOOL_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/bool_fwd.hpp" include (:system-flag t) nil [472 505])
            ("boost/mpl/integral_c_tag.hpp" include (:system-flag t) nil [506 545])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [546 598])
            ("bool_" type
               (:template 
                  ( ("bool" type (:typevar "C_") nil nil))                  
                :type "struct"
                :members 
                  ( ("BOOST_STATIC_CONSTANT" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [703 708])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [709 719]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [681 721])
                    ("tag" type
                       (:typedef ("integral_c_tag" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [726 753])
                    ("type" type
                       (:typedef ("bool_" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [758 777])
                    ("value_type" type
                       (:typedef ("bool")
                        :type "typedef")
                        (reparse-symbol classsubparts) [782 806]))                  )
                nil [642 859])
            ("bool_::value" variable (:type "bool") nil [914 962]))          
      :file "bool.hpp"
      :pointmax 1052
      :fsize 1051
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((symbol 971 . 1012) (semantic-list 833 . 856) (CONST 827 . 832) (semantic-list 824 . 826) (BOOL 820 . 824) (OPERATOR 811 . 819) (symbol 600 . 640))
      :lexical-table 
        '(("BOOST_MPL_BOOL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_COMPARISON_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/equal_to.hpp" include (:system-flag t) nil [490 523])
            ("boost/mpl/not_equal_to.hpp" include (:system-flag t) nil [524 561])
            ("boost/mpl/less.hpp" include (:system-flag t) nil [562 591])
            ("boost/mpl/greater.hpp" include (:system-flag t) nil [592 624])
            ("boost/mpl/less_equal.hpp" include (:system-flag t) nil [625 660])
            ("boost/mpl/greater_equal.hpp" include (:system-flag t) nil [661 699]))          
      :file "comparison.hpp"
      :pointmax 745
      :fsize 744
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_COMPARISON_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_ALWAYS_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/aux_/preprocessor/def_params_tail.hpp" include (:system-flag t) nil [478 536])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [537 569])
            ("boost/mpl/aux_/arity_spec.hpp" include (:system-flag t) nil [570 610])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("always" type
                               (:template 
                                  ( ("Value" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:members 
                                          ( ("type" type
                                               (:typedef ("Value" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [829 848]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [802 855]))                                  )
                                (reparse-symbol namespacesubparts) [647 858]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [630 898]))                  
                :type "namespace")
                nil [612 899]))          
      :file "always.hpp"
      :pointmax 941
      :fsize 940
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 884 . 895) (symbol 860 . 884) (number 885 . 886) (punctuation 796 . 797) (semantic-list 768 . 787) (symbol 733 . 768) (number 769 . 770) (symbol 723 . 724) (number 769 . 770) (TYPENAME 714 . 722) (number 769 . 770) (punctuation 702 . 703) (TEMPLATE 694 . 702))
      :lexical-table 
        '(("BOOST_MPL_ALWAYS_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_APPLY_HPP_INCLUDED" variable (:constant-flag t) nil [103 131])
            ("boost/mpl/apply_fwd.hpp" include (:system-flag t) nil [574 611])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [612 650])
            ("boost/mpl/placeholders.hpp" include (:system-flag t) nil [651 691])
            ("boost/mpl/lambda.hpp" include (:system-flag t) nil [692 726])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [727 762])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [763 810])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [819 872])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [986 1015])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1026 1079]))          
      :file "apply.hpp"
      :pointmax 6192
      :fsize 6191
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 943 . 973) (symbol 936 . 943) (punctuation 935 . 936) (punctuation 933 . 934) (punctuation 932 . 933))
      :lexical-table 
        '(("BOOST_MPL_APPLY_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "apply" 1016 . 1021) (punctuation "." 1021 . 1022) (symbol "hpp" 1022 . 1025)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_IDENTITY_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [484 521])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [522 566])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("identity" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [682 697]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [660 751])
                            ("make_identity" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("identity" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [837 862]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [810 921]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [586 1014]))                  
                :type "namespace")
                nil [568 1015]))          
      :file "identity.hpp"
      :pointmax 1059
      :fsize 1058
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 993 . 1011) (symbol 965 . 993) (number 994 . 995) (semantic-list 951 . 964) (symbol 923 . 951) (number 952 . 953) (semantic-list 895 . 918) (symbol 867 . 895) (semantic-list 914 . 917) (number 896 . 897) (punctuation 808 . 809) (semantic-list 800 . 803) (symbol 778 . 800) (TYPENAME 769 . 777) (punctuation 761 . 762) (TEMPLATE 753 . 761) (semantic-list 730 . 748) (symbol 702 . 730) (semantic-list 744 . 747) (number 731 . 732) (punctuation 658 . 659) (semantic-list 650 . 653) (symbol 628 . 650) (TYPENAME 619 . 627) (punctuation 611 . 612) (TEMPLATE 603 . 611))
      :lexical-table 
        '(("BOOST_MPL_IDENTITY_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_BOOL_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [484 525])
            ("bool_" type
               (:template 
                  ( ("bool" type (:typevar "C_") nil nil))                  
                :type "struct"
                :prototype t)
                nil [569 602])
            ("true_" type
               (:typedef ("bool_" type
                     (:template-specifier 
                        ( ("true" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [616 642])
            ("false_" type
               (:typedef ("bool_" type
                     (:template-specifier 
                        ( ("false" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [643 671]))          
      :file "bool_fwd.hpp"
      :pointmax 874
      :fsize 873
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 822 . 830) (symbol 792 . 822) (semantic-list 784 . 791) (symbol 754 . 784) (semantic-list 746 . 753) (symbol 716 . 746) (symbol 673 . 714) (symbol 527 . 567))
      :lexical-table 
        '(("BOOST_MPL_BOOL_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_HAS_XXX_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [550 579])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [580 617])
            ("boost/mpl/aux_/type_wrapper.hpp" include (:system-flag t) nil [618 660])
            ("boost/mpl/aux_/yes_no.hpp" include (:system-flag t) nil [661 697])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [698 738])
            ("boost/mpl/aux_/config/has_xxx.hpp" include (:system-flag t) nil [739 783])
            ("boost/mpl/aux_/config/msvc_typename.hpp" include (:system-flag t) nil [784 834])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [835 876])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [877 929])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [930 977])
            ("boost/preprocessor/array/elem.hpp" include (:system-flag t) nil [979 1023])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [1024 1061])
            ("boost/preprocessor/control/if.hpp" include (:system-flag t) nil [1062 1106])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [1107 1163])
            ("boost/preprocessor/repetition/enum_trailing_params.hpp" include (:system-flag t) nil [1164 1229])
            ("BOOST_MPL_HAS_XXX_TRAIT_NAMED_DEF" variable (:constant-flag t) nil [7619 7652])
            ("BOOST_MPL_HAS_XXX_TRAIT_DEF" variable (:constant-flag t) nil [8795 8822])
            ("BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME" variable (:constant-flag t) nil [10071 10110])
            ("BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME" variable (:constant-flag t) nil [10205 10255])
            ("BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME" variable (:constant-flag t) nil [10370 10414])
            ("BOOST_MPL_HAS_MEMBER_MULTI_SUBSTITUTE" variable (:constant-flag t) nil [10749 10786])
            ("BOOST_MPL_HAS_MEMBER_SUBSTITUTE" variable (:constant-flag t) nil [11021 11052])
            ("BOOST_MPL_HAS_MEMBER_REJECT" variable (:constant-flag t) nil [11297 11324])
            ("BOOST_MPL_HAS_MEMBER_MULTI_ACCEPT" variable (:constant-flag t) nil [11757 11790])
            ("BOOST_MPL_HAS_MEMBER_ACCEPT" variable (:constant-flag t) nil [12200 12227])
            ("BOOST_MPL_HAS_MEMBER_TEST" variable (:constant-flag t) nil [12795 12820])
            ("BOOST_MPL_HAS_MEMBER_INTROSPECT" variable (:constant-flag t) nil [13621 13652])
            ("BOOST_MPL_HAS_MEMBER_IMPLEMENTATION" variable (:constant-flag t) nil [14204 14239])
            ("BOOST_MPL_HAS_MEMBER_WITH_FUNCTION_SFINAE" variable (:constant-flag t) nil [15058 15099])
            ("BOOST_MPL_HAS_XXX_TEMPLATE_NAMED_DEF" variable (:constant-flag t) nil [20517 20553])
            ("BOOST_MPL_HAS_XXX_TEMPLATE_DEF" variable (:constant-flag t) nil [21675 21705]))          
      :file "has_xxx.hpp"
      :pointmax 21871
      :fsize 21870
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME" (spp-arg-list ("args") 10414 . 10420) . ((symbol "BOOST_PP_CAT" 10429 . 10441) (semantic-list "(BOOST_PP_ARRAY_ELEM(0, args) , _test)" 10441 . 10479)))
          ("BOOST_MPL_HAS_MEMBER_ACCEPT" (spp-arg-list ("args" "member_macro") 12227 . 12247) . ((symbol "BOOST_PP_REPEAT" 12258 . 12273) (semantic-list "( \\
            BOOST_PP_ARRAY_ELEM(2, args) \\
          , BOOST_MPL_HAS_MEMBER_MULTI_ACCEPT \\
          , args \\
        )" 12273 . 12396)))
          ("BOOST_MPL_HAS_XXX_TEMPLATE_DEF" (spp-arg-list ("name") 21705 . 21711) . ((symbol "BOOST_MPL_HAS_XXX_TEMPLATE_NAMED_DEF" 21720 . 21756) (semantic-list "( \\
          BOOST_PP_CAT(has_, name), name, false \\
      )" 21756 . 21817)))
          ("BOOST_MPL_HAS_XXX_HPP_INCLUDED")
          ("BOOST_MPL_HAS_XXX_TRAIT_DEF" (spp-arg-list ("name") 8822 . 8828) . ((symbol "BOOST_MPL_HAS_XXX_TRAIT_NAMED_DEF" 8835 . 8868) (semantic-list "(BOOST_PP_CAT(has_,name), name, false)" 8868 . 8906)))
          ("BOOST_MPL_HAS_MEMBER_MULTI_SUBSTITUTE" (spp-arg-list ("z" "n" "args") 10786 . 10798) . 
              ((TEMPLATE "template" 10807 . 10815) (punctuation "<" 10815 . 10816) (TEMPLATE "template" 10829 . 10837) (punctuation "<" 10837 . 10838) (symbol "BOOST_PP_ENUM_PARAMS" 10839 . 10859) (semantic-list "(BOOST_PP_INC(n), typename V)" 10859 . 10888) (punctuation ">" 10889 . 10890) (CLASS "class" 10891 . 10896) (symbol "V" 10897 . 10898) (punctuation ">" 10908 . 10909) (STRUCT "struct" 10918 . 10924) (symbol "BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME" 10925 . 10975) (semantic-list "(args, n)" 10975 . 10984) (semantic-list "{ \\
      }" 10985 . 10996) (punctuation ";" 10996 . 10997)))
          ("BOOST_MPL_HAS_MEMBER_WITH_FUNCTION_SFINAE" (spp-arg-list ("\\
" "args" "substitute_macro" "member_macro" "\\
") 15099 . 15169) . ((symbol "BOOST_MPL_HAS_MEMBER_IMPLEMENTATION" 15178 . 15213) (semantic-list "( \\
          args \\
        , BOOST_MPL_HAS_MEMBER_INTROSPECT \\
        , substitute_macro \\
        , member_macro \\
      )" 15213 . 15339)))
          ("BOOST_MPL_HAS_XXX_TEMPLATE_NAMED_DEF" (spp-arg-list ("trait" "name" "default_") 20553 . 20576) . ((symbol "BOOST_MPL_HAS_MEMBER_WITH_FUNCTION_SFINAE" 20587 . 20628) (semantic-list "( \\
            ( 4, ( trait, name, BOOST_MPL_LIMIT_METAFUNCTION_ARITY, default_ ) ) \\
          , BOOST_MPL_HAS_MEMBER_TEMPLATE_SUBSTITUTE_PARAMETER \\
          , BOOST_MPL_HAS_MEMBER_TEMPLATE_ACCESS \\
        )" 20628 . 20840)))
          ("BOOST_MPL_HAS_MEMBER_SUBSTITUTE" (spp-arg-list ("args" "substitute_macro") 11052 . 11076) . ((symbol "BOOST_PP_REPEAT" 11085 . 11100) (semantic-list "( \\
          BOOST_PP_ARRAY_ELEM(2, args) \\
        , BOOST_MPL_HAS_MEMBER_MULTI_SUBSTITUTE \\
        , args \\
      )" 11100 . 11219)))
          ("BOOST_MPL_HAS_MEMBER_IMPLEMENTATION" (spp-arg-list ("\\
" "args" "introspect_macro" "substitute_macro" "member_macro" "\\
") 14239 . 14327) . 
              ((TEMPLATE "template" 14336 . 14344) (punctuation "<" 14344 . 14345) (TYPENAME "typename" 14358 . 14366) (symbol "T" 14367 . 14368) (punctuation "," 14379 . 14380) (TYPENAME "typename" 14381 . 14389) (symbol "fallback_" 14390 . 14399) (punctuation "=" 14416 . 14417) (symbol "boost" 14418 . 14423) (punctuation ":" 14423 . 14424) (punctuation ":" 14424 . 14425) (symbol "mpl" 14425 . 14428) (punctuation ":" 14428 . 14429) (punctuation ":" 14429 . 14430) (symbol "bool_" 14430 . 14435) (punctuation "<" 14435 . 14436) (symbol "BOOST_PP_ARRAY_ELEM" 14437 . 14456) (semantic-list "(3, args)" 14456 . 14465) (punctuation ">" 14466 . 14467) (punctuation ">" 14476 . 14477) (CLASS "class" 14486 . 14491) (symbol "BOOST_PP_ARRAY_ELEM" 14492 . 14511) (semantic-list "(0, args)" 14511 . 14520) (semantic-list "{ \\
          introspect_macro(args, substitute_macro, member_macro) \\
      public: \\
          static const bool value \\
              = BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME(args)< T >::value; \\
          typedef typename BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME(args)< \\
              T \\
          >::type type; \\
      }" 14521 . 14848) (punctuation ";" 14848 . 14849)))
          ("BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME" (spp-arg-list ("args") 10110 . 10116) . ((symbol "BOOST_PP_CAT" 10125 . 10137) (semantic-list "(BOOST_PP_ARRAY_ELEM(0, args) , _introspect)" 10137 . 10181)))
          ("BOOST_MPL_HAS_MEMBER_TEST" (spp-arg-list ("args") 12820 . 12826) . 
              ((SIZEOF "sizeof" 12839 . 12845) (semantic-list "(BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME(args)< U >(0))" 12845 . 12905) (punctuation "=" 12922 . 12923) (punctuation "=" 12923 . 12924) (SIZEOF "sizeof" 12925 . 12931) (semantic-list "(boost::mpl::aux::yes_tag)" 12931 . 12957)))
          ("BOOST_MPL_HAS_XXX_TRAIT_NAMED_DEF" (spp-arg-list ("trait" "name" "default_") 7652 . 7675) . 
              ((TEMPLATE "template" 7678 . 7686) (punctuation "<" 7686 . 7687) (TYPENAME "typename" 7688 . 7696) (symbol "T" 7697 . 7698) (punctuation "," 7698 . 7699) (TYPENAME "typename" 7700 . 7708) (symbol "fallback_" 7709 . 7718) (punctuation "=" 7719 . 7720) (symbol "boost" 7721 . 7726) (punctuation ":" 7726 . 7727) (punctuation ":" 7727 . 7728) (symbol "mpl" 7728 . 7731) (punctuation ":" 7731 . 7732) (punctuation ":" 7732 . 7733) (symbol "bool_" 7733 . 7738) (punctuation "<" 7738 . 7739) (symbol "default_" 7739 . 7747) (punctuation ">" 7747 . 7748) (punctuation ">" 7749 . 7750) (STRUCT "struct" 7753 . 7759) (symbol "trait" 7760 . 7765) (semantic-list "{ \\
    struct gcc_3_2_wknd \\
    { \\
        template< typename U > \\
        static boost::mpl::aux::yes_tag test( \\
              boost::mpl::aux::type_wrapper<U> const volatile* \\
            , boost::mpl::aux::type_wrapper<BOOST_MSVC_TYPENAME U::name>* = 0 \\
            ); \\
    \\
        static boost::mpl::aux::no_tag test(...); \\
    }; \\
    \\
    typedef boost::mpl::aux::type_wrapper<T> t_; \\
    BOOST_STATIC_CONSTANT(bool, value = \\
          sizeof(gcc_3_2_wknd::test(static_cast<t_*>(0))) \\
            == sizeof(boost::mpl::aux::yes_tag) \\
        ); \\
    typedef boost::mpl::bool_<value> type; \\
}" 7768 . 8384) (punctuation ";" 8384 . 8385)))
          ("BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME" (spp-arg-list ("args" "n") 10255 . 10264) . ((symbol "BOOST_PP_CAT" 10273 . 10285) (semantic-list "(BOOST_PP_CAT(BOOST_PP_ARRAY_ELEM(0, args) , _substitute), n)" 10285 . 10346)))
          ("BOOST_MPL_HAS_MEMBER_INTROSPECT" (spp-arg-list ("\\
" "args" "substitute_macro" "member_macro" "\\
") 13652 . 13722) . 
              ((TEMPLATE "template" 13731 . 13739) (punctuation "<" 13739 . 13740) (TYPENAME "typename" 13741 . 13749) (symbol "U" 13750 . 13751) (punctuation ">" 13752 . 13753) (STRUCT "struct" 13762 . 13768) (symbol "BOOST_MPL_HAS_MEMBER_INTROSPECTION_NAME" 13769 . 13808) (semantic-list "(args)" 13808 . 13814) (semantic-list "{ \\
          BOOST_MPL_HAS_MEMBER_SUBSTITUTE(args, substitute_macro) \\
          BOOST_MPL_HAS_MEMBER_REJECT(args, member_macro) \\
          BOOST_MPL_HAS_MEMBER_ACCEPT(args, member_macro) \\
          BOOST_STATIC_CONSTANT( \\
              bool, value = BOOST_MPL_HAS_MEMBER_TEST(args) \\
          ); \\
          typedef boost::mpl::bool_< value > type; \\
      }" 13815 . 14179) (punctuation ";" 14179 . 14180)))
          ("BOOST_MPL_HAS_MEMBER_REJECT" (spp-arg-list ("args" "member_macro") 11324 . 11344) . 
              ((TEMPLATE "template" 11355 . 11363) (punctuation "<" 11363 . 11364) (TYPENAME "typename" 11365 . 11373) (symbol "V" 11374 . 11375) (punctuation ">" 11376 . 11377) (STATIC "static" 11388 . 11394) (symbol "boost" 11395 . 11400) (punctuation ":" 11400 . 11401) (punctuation ":" 11401 . 11402) (symbol "mpl" 11402 . 11405) (punctuation ":" 11405 . 11406) (punctuation ":" 11406 . 11407) (symbol "aux" 11407 . 11410) (punctuation ":" 11410 . 11411) (punctuation ":" 11411 . 11412) (symbol "no_tag" 11412 . 11418) (symbol "BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME" 11429 . 11473) (semantic-list "(args)" 11473 . 11479) (semantic-list "(...)" 11479 . 11484) (punctuation ";" 11484 . 11485)))
          ("BOOST_MPL_HAS_MEMBER_MULTI_ACCEPT" (spp-arg-list ("z" "n" "args") 11790 . 11802) . 
              ((TEMPLATE "template" 11813 . 11821) (punctuation "<" 11821 . 11822) (TYPENAME "typename" 11823 . 11831) (symbol "V" 11832 . 11833) (punctuation ">" 11834 . 11835) (STATIC "static" 11846 . 11852) (symbol "boost" 11853 . 11858) (punctuation ":" 11858 . 11859) (punctuation ":" 11859 . 11860) (symbol "mpl" 11860 . 11863) (punctuation ":" 11863 . 11864) (punctuation ":" 11864 . 11865) (symbol "aux" 11865 . 11868) (punctuation ":" 11868 . 11869) (punctuation ":" 11869 . 11870) (symbol "yes_tag" 11870 . 11877) (symbol "BOOST_MPL_HAS_MEMBER_INTROSPECTION_TEST_NAME" 11888 . 11932) (semantic-list "(args)" 11932 . 11938) (semantic-list "( \\
            boost::mpl::aux::type_wrapper< V > const volatile* \\
          , BOOST_MPL_HAS_MEMBER_INTROSPECTION_SUBSTITUTE_NAME(args, n) < \\
                V::template BOOST_PP_ARRAY_ELEM(1, args) \\
            >* = 0 \\
        )" 11938 . 12172) (punctuation ";" 12172 . 12173)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_VOID_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [484 525])
            ("void_" type
               (:prototype t
                :type "struct")
                nil [569 582]))          
      :file "void_fwd.hpp"
      :pointmax 707
      :fsize 706
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 656 . 663) (symbol 626 . 656) (symbol 584 . 625) (symbol 527 . 567))
      :lexical-table 
        '(("BOOST_MPL_VOID_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_INT_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [481 522])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [523 562])
            ("int_" type
               (:prototype t
                :type "struct")
                nil [650 662]))          
      :file "int_fwd.hpp"
      :pointmax 785
      :fsize 784
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 736 . 742) (symbol 706 . 736) (symbol 664 . 705) (punctuation 648 . 649) (semantic-list 639 . 647) (symbol 616 . 639) (punctuation 614 . 615) (TEMPLATE 606 . 614) (symbol 564 . 604))
      :lexical-table 
        '(("BOOST_MPL_INT_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_INTEGRAL_C_TAG_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [498 539])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [540 592])
            ("integral_c_tag" type
               (:members 
                  ( ("BOOST_STATIC_CONSTANT" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [681 685])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [686 695]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [659 697]))                  
                :type "struct")
                nil [635 700]))          
      :file "integral_c_tag.hpp"
      :pointmax 839
      :fsize 838
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 773 . 789) (symbol 743 . 773) (symbol 701 . 742) (symbol 594 . 634))
      :lexical-table 
        '(("BOOST_MPL_INTEGRAL_C_TAG_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_INTEGRAL_C_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/integral_c_fwd.hpp" include (:system-flag t) nil [490 529])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [530 571])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [572 624])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [625 672])
            ("AUX_WRAPPER_PARAMS" variable (:constant-flag t) nil [864 882])
            ("AUX_WRAPPER_NAME" variable (:constant-flag t) nil [918 934])
            ("AUX_WRAPPER_VALUE_TYPE" variable (:constant-flag t) nil [954 976])
            ("AUX_WRAPPER_INST" variable (:constant-flag t) nil [987 1003])
            ("boost/mpl/aux_/integral_wrapper.hpp" include (:system-flag t) nil [1040 1086])
            ("integral_c" type
               (:template 
                  ( ("bool" type (:typevar "C") nil nil))                  
                :type "struct"
                :members 
                  ( ("BOOST_STATIC_CONSTANT" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [1362 1367])
                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1368 1377]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1340 1379])
                    ("tag" type
                       (:typedef ("integral_c_tag" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [1384 1411])
                    ("type" type
                       (:typedef ("integral_c" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [1416 1440])
                    ("value_type" type
                       (:typedef ("bool")
                        :type "typedef")
                        (reparse-symbol classsubparts) [1445 1469]))                  
                :template-specifier 
                  ( ("bool" type nil nil nil)
                    ("C" type nil nil nil))                  )
                nil [1288 1522]))          
      :file "integral_c.hpp"
      :pointmax 1617
      :fsize 1616
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((symbol 1523 . 1564) (semantic-list 1496 . 1519) (CONST 1490 . 1495) (semantic-list 1487 . 1489) (BOOL 1483 . 1487) (OPERATOR 1474 . 1482) (symbol 1192 . 1232) (semantic-list 1167 . 1191) (symbol 1151 . 1167) (number 1185 . 1190) (punctuation 1183 . 1184) (punctuation 1182 . 1183) (punctuation 1150 . 1151) (punctuation 1148 . 1149) (punctuation 1147 . 1148))
      :lexical-table 
        '(("AUX_WRAPPER_VALUE_TYPE" . ((symbol "T" 977 . 978)))
          ("AUX_WRAPPER_INST" (spp-arg-list ("value") 1003 . 1010) . 
              ((symbol "AUX_WRAPPER_NAME" 1011 . 1027) (punctuation "<" 1027 . 1028) (symbol "T" 1029 . 1030) (punctuation "," 1030 . 1031) (symbol "value" 1032 . 1037) (punctuation ">" 1038 . 1039)))
          ("AUX_WRAPPER_PARAMS" (spp-arg-list ("N") 882 . 885) . 
              ((TYPENAME "typename" 886 . 894) (symbol "T" 895 . 896) (punctuation "," 896 . 897) (symbol "T" 898 . 899) (symbol "N" 900 . 901)))
          ("BOOST_MPL_INTEGRAL_C_HPP_INCLUDED")
          ("AUX_WRAPPER_NAME" . ((symbol "integral_c" 935 . 945)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_LIST_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/limits/list.hpp" include (:system-flag t) nil [515 554])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [555 590])
            ("boost/mpl/aux_/config/preprocessor.hpp" include (:system-flag t) nil [591 643])
            ("boost/preprocessor/inc.hpp" include (:system-flag t) nil [645 685])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [686 726])
            ("boost/preprocessor/stringize.hpp" include (:system-flag t) nil [727 773])
            ("AUX778076_LIST_HEADER" variable (:constant-flag t) nil [852 873])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1164 1217])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1331 1360])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1370 1423]))          
      :file "list.hpp"
      :pointmax 1712
      :fsize 1711
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1288 . 1318) (symbol 1281 . 1288) (punctuation 1280 . 1281) (punctuation 1278 . 1279) (punctuation 1277 . 1278) (semantic-list 1085 . 1123) (symbol 1067 . 1085) (punctuation 1100 . 1101) (punctuation 1095 . 1096) (punctuation 1091 . 1092) (symbol 1059 . 1066) (punctuation 1100 . 1101) (punctuation 1095 . 1096) (punctuation 1091 . 1092) (punctuation 1055 . 1056))
      :lexical-table 
        '(("BOOST_MPL_LIST_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "list" 1361 . 1365) (punctuation "." 1365 . 1366) (symbol "hpp" 1366 . 1369)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_CONTAINS_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/contains_fwd.hpp" include (:system-flag t) nil [511 548])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [549 586])
            ("boost/mpl/aux_/contains_impl.hpp" include (:system-flag t) nil [587 630])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [631 668])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [669 713])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [951 1033]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [733 1072]))                  
                :type "namespace")
                nil [715 1073]))          
      :file "contains.hpp"
      :pointmax 1117
      :fsize 1116
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1056 . 1069) (symbol 1035 . 1056) (number 1057 . 1058) (TEMPLATE 942 . 950) (punctuation 941 . 942) (punctuation 940 . 941) (punctuation 930 . 931) (symbol 925 . 929) (punctuation 924 . 925) (punctuation 923 . 924) (punctuation 922 . 923) (symbol 914 . 922) (punctuation 913 . 914) (symbol 901 . 913) (TYPENAME 892 . 900) (punctuation 890 . 891) (symbol 877 . 890) (punctuation 875 . 876) (symbol 862 . 870) (STRUCT 855 . 861) (punctuation 853 . 854) (semantic-list 845 . 848) (symbol 823 . 845) (TYPENAME 814 . 822) (punctuation 812 . 813) (semantic-list 797 . 807) (symbol 775 . 797) (TYPENAME 766 . 774) (punctuation 758 . 759) (TEMPLATE 750 . 758))
      :lexical-table 
        '(("BOOST_MPL_CONTAINS_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_FIND_IF_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/aux_/find_if_pred.hpp" include (:system-flag t) nil [481 523])
            ("boost/mpl/arg.hpp" include (:system-flag t) nil [524 552])
            ("boost/mpl/iter_fold_if.hpp" include (:system-flag t) nil [553 590])
            ("boost/mpl/aux_/common_name_wknd.hpp" include (:system-flag t) nil [591 637])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [638 675])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [676 720])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("find_if" type
                               (:members 
                                  ( ("result_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1090 1103])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1143 1153]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [911 1222]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [740 1259]))                  
                :type "namespace")
                nil [722 1260]))          
      :file "find_if.hpp"
      :pointmax 1303
      :fsize 1302
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1245 . 1256) (symbol 1224 . 1245) (number 1246 . 1247) (semantic-list 1187 . 1219) (symbol 1159 . 1187) (semantic-list 1198 . 1218) (number 1188 . 1189) (punctuation 1142 . 1143) (punctuation 1141 . 1142) (punctuation 1140 . 1141) (symbol 1133 . 1140) (punctuation 1132 . 1133) (symbol 1126 . 1132) (TYPENAME 1117 . 1125) (TYPEDEF 1109 . 1116) (punctuation 1089 . 1090) (punctuation 1088 . 1089) (punctuation 1087 . 1088) (punctuation 1077 . 1078) (punctuation 1075 . 1076) (symbol 1066 . 1075) (punctuation 1065 . 1066) (symbol 1053 . 1065) (punctuation 1052 . 1053) (punctuation 1051 . 1052) (symbol 1048 . 1051) (punctuation 1046 . 1047) (symbol 1039 . 1046) (punctuation 1037 . 1038) (punctuation 1017 . 1018) (number 1016 . 1017) (punctuation 1015 . 1016) (symbol 1012 . 1015) (punctuation 1011 . 1012) (punctuation 1010 . 1011) (symbol 1007 . 1010) (punctuation 1005 . 1006) (VOID 992 . 996) (punctuation 990 . 991) (symbol 973 . 981) (punctuation 961 . 962) (symbol 949 . 961) (TYPENAME 940 . 948) (TYPEDEF 932 . 939) (punctuation 909 . 910) (semantic-list 893 . 904) (symbol 871 . 893) (TYPENAME 862 . 870) (punctuation 860 . 861) (semantic-list 845 . 855) (symbol 823 . 845) (TYPENAME 814 . 822) (punctuation 806 . 807) (TEMPLATE 798 . 806) (semantic-list 787 . 796) (symbol 757 . 787))
      :lexical-table 
        '(("BOOST_MPL_FIND_IF_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_REMOVE_IF_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost/mpl/fold.hpp" include (:system-flag t) nil [525 554])
            ("boost/mpl/reverse_fold.hpp" include (:system-flag t) nil [555 592])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [593 625])
            ("boost/mpl/identity.hpp" include (:system-flag t) nil [626 659])
            ("boost/mpl/protect.hpp" include (:system-flag t) nil [660 692])
            ("boost/mpl/lambda.hpp" include (:system-flag t) nil [693 724])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [725 755])
            ("boost/mpl/aux_/inserter_algorithm.hpp" include (:system-flag t) nil [756 804])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("remove_if_helper" type
                                       (:template 
                                          ( ("Pred" type (:type "class") nil nil)
                                            ("InsertOp" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil)
                                                    ("U" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1162 1172]))                                                  )
                                                (reparse-symbol classsubparts) [933 1179]))                                          )
                                        (reparse-symbol namespacesubparts) [858 1182]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [841 1883]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [824 1955]))                  
                :type "namespace")
                nil [806 1956]))          
      :file "remove_if.hpp"
      :pointmax 2001
      :fsize 2000
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1938 . 1952) (symbol 1902 . 1938) (number 1939 . 1940) (punctuation 1879 . 1880) (semantic-list 1876 . 1879) (punctuation 1874 . 1875) (punctuation 1864 . 1865) (punctuation 1862 . 1863) (symbol 1840 . 1849) (punctuation 1839 . 1840) (punctuation 1838 . 1839) (symbol 1830 . 1838) (TYPENAME 1821 . 1829) (punctuation 1819 . 1820) (symbol 1802 . 1806) (punctuation 1801 . 1802) (punctuation 1800 . 1801) (punctuation 1799 . 1800) (symbol 1790 . 1799) (punctuation 1789 . 1790) (symbol 1783 . 1789) (TYPENAME 1774 . 1782) (punctuation 1758 . 1759) (symbol 1742 . 1758) (punctuation 1741 . 1742) (punctuation 1740 . 1741) (symbol 1737 . 1740) (punctuation 1735 . 1736) (symbol 1728 . 1735) (punctuation 1726 . 1727) (symbol 1712 . 1717) (punctuation 1711 . 1712) (punctuation 1710 . 1711) (symbol 1702 . 1710) (TYPENAME 1693 . 1701) (punctuation 1691 . 1692) (symbol 1674 . 1682) (punctuation 1662 . 1663) (symbol 1650 . 1662) (punctuation 1648 . 1649) (symbol 1621 . 1643) (STRUCT 1614 . 1620) (punctuation 1612 . 1613) (symbol 1599 . 1607) (TYPENAME 1590 . 1598) (punctuation 1588 . 1589) (symbol 1574 . 1583) (TYPENAME 1565 . 1573) (punctuation 1563 . 1564) (symbol 1550 . 1558) (TYPENAME 1541 . 1549) (punctuation 1533 . 1534) (TEMPLATE 1525 . 1533) (punctuation 1522 . 1523) (semantic-list 1519 . 1522) (punctuation 1517 . 1518) (punctuation 1507 . 1508) (punctuation 1505 . 1506) (symbol 1483 . 1492) (punctuation 1482 . 1483) (punctuation 1481 . 1482) (symbol 1473 . 1481) (TYPENAME 1464 . 1472) (punctuation 1462 . 1463) (symbol 1445 . 1449) (punctuation 1444 . 1445) (punctuation 1443 . 1444) (punctuation 1442 . 1443) (symbol 1433 . 1442) (punctuation 1432 . 1433) (symbol 1426 . 1432) (TYPENAME 1417 . 1425) (punctuation 1401 . 1402) (symbol 1385 . 1401) (punctuation 1384 . 1385) (punctuation 1383 . 1384) (symbol 1380 . 1383) (punctuation 1378 . 1379) (symbol 1371 . 1378) (punctuation 1369 . 1370) (symbol 1355 . 1360) (punctuation 1354 . 1355) (punctuation 1353 . 1354) (symbol 1345 . 1353) (TYPENAME 1336 . 1344) (punctuation 1334 . 1335) (symbol 1317 . 1325) (punctuation 1305 . 1306) (symbol 1301 . 1305) (punctuation 1299 . 1300) (symbol 1280 . 1294) (STRUCT 1273 . 1279) (punctuation 1271 . 1272) (symbol 1258 . 1266) (TYPENAME 1249 . 1257) (punctuation 1247 . 1248) (symbol 1233 . 1242) (TYPENAME 1224 . 1232) (punctuation 1222 . 1223) (symbol 1209 . 1217) (TYPENAME 1200 . 1208) (punctuation 1192 . 1193) (TEMPLATE 1184 . 1192) (punctuation 1161 . 1162) (punctuation 1160 . 1161) (punctuation 1159 . 1160) (punctuation 1145 . 1146) (symbol 1144 . 1145) (punctuation 1143 . 1144) (symbol 1135 . 1143) (punctuation 1134 . 1135) (symbol 1126 . 1134) (punctuation 1125 . 1126) (symbol 1119 . 1125) (punctuation 1117 . 1118) (punctuation 1103 . 1104) (symbol 1095 . 1103) (punctuation 1094 . 1095) (symbol 1086 . 1094) (punctuation 1084 . 1085) (symbol 1067 . 1071) (punctuation 1066 . 1067) (punctuation 1065 . 1066) (punctuation 1064 . 1065) (symbol 1063 . 1064) (punctuation 1062 . 1063) (symbol 1058 . 1062) (punctuation 1057 . 1058) (symbol 1051 . 1057) (TYPENAME 1042 . 1050) (punctuation 1026 . 1027) (symbol 1019 . 1026) (TYPENAME 1010 . 1018) (TYPEDEF 1002 . 1009))
      :lexical-table 
        '(("BOOST_MPL_REMOVE_IF_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_VECTOR_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/limits/vector.hpp" include (:system-flag t) nil [521 562])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [563 598])
            ("boost/mpl/aux_/config/preprocessor.hpp" include (:system-flag t) nil [599 651])
            ("boost/preprocessor/inc.hpp" include (:system-flag t) nil [653 693])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [694 734])
            ("boost/preprocessor/stringize.hpp" include (:system-flag t) nil [735 781])
            ("AUX778076_VECTOR_HEADER" variable (:constant-flag t) nil [860 883])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1192 1245])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1359 1388])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1400 1453]))          
      :file "vector.hpp"
      :pointmax 1750
      :fsize 1749
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1316 . 1346) (symbol 1309 . 1316) (punctuation 1308 . 1309) (punctuation 1306 . 1307) (punctuation 1305 . 1306) (semantic-list 1107 . 1149) (symbol 1089 . 1107) (punctuation 1124 . 1125) (punctuation 1117 . 1118) (punctuation 1113 . 1114) (symbol 1081 . 1088) (punctuation 1124 . 1125) (punctuation 1117 . 1118) (punctuation 1113 . 1114) (punctuation 1077 . 1078))
      :lexical-table 
        '(("BOOST_MPL_VECTOR_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "vector" 1389 . 1395) (punctuation "." 1395 . 1396) (symbol "hpp" 1396 . 1399)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_PUSH_BACK_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost/mpl/push_back_fwd.hpp" include (:system-flag t) nil [487 525])
            ("boost/mpl/aux_/push_back_impl.hpp" include (:system-flag t) nil [526 570])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [571 608])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [609 646])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [647 691])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [931 1014])
                            ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [1188 1271]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [711 1352]))                  
                :type "namespace")
                nil [693 1353]))          
      :file "push_back.hpp"
      :pointmax 1398
      :fsize 1397
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1331 . 1349) (symbol 1310 . 1331) (number 1332 . 1333) (semantic-list 1295 . 1309) (symbol 1274 . 1295) (number 1296 . 1297) (TEMPLATE 1179 . 1187) (punctuation 1178 . 1179) (punctuation 1177 . 1178) (punctuation 1167 . 1168) (symbol 1162 . 1166) (punctuation 1161 . 1162) (punctuation 1160 . 1161) (punctuation 1159 . 1160) (symbol 1151 . 1159) (punctuation 1150 . 1151) (symbol 1138 . 1150) (TYPENAME 1129 . 1137) (punctuation 1127 . 1128) (symbol 1109 . 1127) (punctuation 1107 . 1108) (symbol 1089 . 1102) (STRUCT 1082 . 1088) (punctuation 1080 . 1081) (semantic-list 1065 . 1075) (symbol 1043 . 1065) (TYPENAME 1034 . 1042) (punctuation 1025 . 1026) (TEMPLATE 1017 . 1025) (TEMPLATE 922 . 930) (punctuation 921 . 922) (punctuation 920 . 921) (punctuation 910 . 911) (symbol 905 . 909) (punctuation 904 . 905) (punctuation 903 . 904) (punctuation 902 . 903) (symbol 894 . 902) (punctuation 893 . 894) (symbol 881 . 893) (TYPENAME 872 . 880) (punctuation 870 . 871) (symbol 856 . 870) (punctuation 854 . 855) (symbol 840 . 849) (STRUCT 833 . 839) (punctuation 831 . 832) (semantic-list 823 . 826) (symbol 801 . 823) (TYPENAME 792 . 800) (punctuation 790 . 791) (semantic-list 775 . 785) (symbol 753 . 775) (TYPENAME 744 . 752) (punctuation 736 . 737) (TEMPLATE 728 . 736))
      :lexical-table 
        '(("BOOST_MPL_PUSH_BACK_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AT_HPP_INCLUDED" variable (:constant-flag t) nil [44 69])
            ("boost/mpl/at_fwd.hpp" include (:system-flag t) nil [466 497])
            ("boost/mpl/aux_/at_impl.hpp" include (:system-flag t) nil [498 535])
            ("boost/mpl/long.hpp" include (:system-flag t) nil [536 565])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [566 603])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [604 641])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [642 686])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [687 726])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [952 1028])
                            ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [1195 1231]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [746 1264]))                  
                :type "namespace")
                nil [728 1265]))          
      :file "at.hpp"
      :pointmax 1303
      :fsize 1302
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1254 . 1261) (symbol 1233 . 1254) (number 1255 . 1256) (TEMPLATE 1186 . 1194) (punctuation 1185 . 1186) (punctuation 1184 . 1185) (punctuation 1174 . 1175) (symbol 1169 . 1173) (punctuation 1168 . 1169) (punctuation 1167 . 1168) (punctuation 1166 . 1167) (symbol 1158 . 1166) (punctuation 1157 . 1158) (symbol 1145 . 1157) (TYPENAME 1136 . 1144) (punctuation 1134 . 1135) (symbol 1127 . 1134) (punctuation 1125 . 1126) (symbol 1116 . 1120) (STRUCT 1109 . 1115) (punctuation 1107 . 1108) (semantic-list 1093 . 1102) (symbol 1070 . 1093) (punctuation 1068 . 1069) (symbol 1055 . 1063) (TYPENAME 1046 . 1054) (punctuation 1038 . 1039) (TEMPLATE 1030 . 1038) (TEMPLATE 943 . 951) (punctuation 942 . 943) (punctuation 941 . 942) (punctuation 931 . 932) (symbol 926 . 930) (punctuation 925 . 926) (punctuation 924 . 925) (punctuation 923 . 924) (symbol 915 . 923) (punctuation 914 . 915) (symbol 902 . 914) (TYPENAME 893 . 901) (punctuation 891 . 892) (symbol 884 . 891) (punctuation 882 . 883) (symbol 875 . 877) (STRUCT 868 . 874) (punctuation 866 . 867) (semantic-list 858 . 861) (symbol 836 . 858) (TYPENAME 827 . 835) (punctuation 825 . 826) (semantic-list 810 . 820) (symbol 788 . 810) (TYPENAME 779 . 787) (punctuation 771 . 772) (TEMPLATE 763 . 771))
      :lexical-table 
        '(("BOOST_MPL_AT_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_SIZE_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/size_fwd.hpp" include (:system-flag t) nil [472 505])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [506 543])
            ("boost/mpl/aux_/size_impl.hpp" include (:system-flag t) nil [544 583])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [584 621])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [622 666])
            ("boost/mpl/aux_/msvc_eti_base.hpp" include (:system-flag t) nil [667 710])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("type" variable (:type "int") (reparse-symbol namespacesubparts) [973 1036]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [730 1071]))                  
                :type "namespace")
                nil [712 1072]))          
      :file "size.hpp"
      :pointmax 1112
      :fsize 1111
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1059 . 1068) (symbol 1038 . 1059) (number 1060 . 1061) (punctuation 972 . 973) (punctuation 971 . 972) (punctuation 970 . 971) (symbol 959 . 963) (punctuation 958 . 959) (punctuation 957 . 958) (punctuation 956 . 957) (symbol 947 . 955) (punctuation 945 . 946) (symbol 940 . 945) (TEMPLATE 931 . 939) (punctuation 930 . 931) (punctuation 929 . 930) (punctuation 915 . 916) (symbol 910 . 914) (punctuation 909 . 910) (punctuation 908 . 909) (punctuation 907 . 908) (symbol 899 . 907) (punctuation 898 . 899) (symbol 886 . 898) (TYPENAME 877 . 885) (punctuation 875 . 876) (symbol 866 . 875) (TYPENAME 857 . 865) (punctuation 847 . 848) (symbol 834 . 847) (punctuation 833 . 834) (punctuation 832 . 833) (symbol 829 . 832) (punctuation 827 . 828) (symbol 818 . 822) (STRUCT 811 . 817) (punctuation 809 . 810) (semantic-list 794 . 804) (symbol 772 . 794) (TYPENAME 763 . 771) (punctuation 755 . 756) (TEMPLATE 747 . 755))
      :lexical-table 
        '(("BOOST_MPL_SIZE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_EQUAL_TO_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [492 509])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [527 545])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [549 592]))          
      :file "equal_to.hpp"
      :pointmax 636
      :fsize 635
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_EQUAL_TO_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "equal_to" 510 . 518)))
          ("AUX778076_OP_TOKEN" . ((punctuation "=" 546 . 547) (punctuation "=" 547 . 548)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_NOT_EQUAL_TO_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [504 521])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [543 561])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [565 608]))          
      :file "not_equal_to.hpp"
      :pointmax 656
      :fsize 655
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_NOT_EQUAL_TO_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "not_equal_to" 522 . 534)))
          ("AUX778076_OP_TOKEN" . ((punctuation "!" 562 . 563) (punctuation "=" 563 . 564)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_LESS_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [480 497])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [511 529])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [532 575]))          
      :file "less.hpp"
      :pointmax 615
      :fsize 614
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_LESS_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "less" 498 . 502)))
          ("AUX778076_OP_TOKEN" . ((punctuation "<" 530 . 531)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_GREATER_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [489 506])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [523 541])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [544 587]))          
      :file "greater.hpp"
      :pointmax 630
      :fsize 629
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_GREATER_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "greater" 507 . 514)))
          ("AUX778076_OP_TOKEN" . ((punctuation ">" 542 . 543)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_LESS_EQUAL_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [498 515])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [535 553])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [557 600]))          
      :file "less_equal.hpp"
      :pointmax 646
      :fsize 645
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_LESS_EQUAL_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "less_equal" 516 . 526)))
          ("AUX778076_OP_TOKEN" . ((punctuation "<" 554 . 555) (punctuation "=" 555 . 556)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_GREATER_EQUAL_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [507 524])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [547 565])
            ("boost/mpl/aux_/comparison_op.hpp" include (:system-flag t) nil [569 612]))          
      :file "greater_equal.hpp"
      :pointmax 661
      :fsize 660
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_GREATER_EQUAL_HPP_INCLUDED")
          ("AUX778076_OP_NAME" . ((symbol "greater_equal" 525 . 538)))
          ("AUX778076_OP_TOKEN" . ((punctuation ">" 566 . 567) (punctuation "=" 567 . 568)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_APPLY_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [107 139])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [586 621])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [630 683])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [797 826])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [841 894]))          
      :file "apply_fwd.hpp"
      :pointmax 2772
      :fsize 2771
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 754 . 784) (symbol 747 . 754) (punctuation 746 . 747) (punctuation 744 . 745) (punctuation 743 . 744))
      :lexical-table 
        '(("BOOST_MPL_APPLY_FWD_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "apply_fwd" 827 . 836) (punctuation "." 836 . 837) (symbol "hpp" 837 . 840)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_APPLY_WRAP_HPP_INCLUDED" variable (:constant-flag t) nil [108 141])
            ("boost/mpl/aux_/arity.hpp" include (:system-flag t) nil [589 627])
            ("boost/mpl/aux_/has_apply.hpp" include (:system-flag t) nil [628 670])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [671 706])
            ("boost/mpl/aux_/msvc_never_true.hpp" include (:system-flag t) nil [707 755])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [764 817])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [931 960])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [976 1029]))          
      :file "apply_wrap.hpp"
      :pointmax 6287
      :fsize 6286
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 888 . 918) (symbol 881 . 888) (punctuation 880 . 881) (punctuation 878 . 879) (punctuation 877 . 878))
      :lexical-table 
        '(("BOOST_MPL_APPLY_WRAP_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "apply_wrap" 961 . 971) (punctuation "." 971 . 972) (symbol "hpp" 972 . 975)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_PLACEHOLDERS_HPP_INCLUDED" variable (:constant-flag t) nil [110 145])
            ("boost/mpl/arg.hpp" include (:system-flag t) nil [631 662])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [663 707])
            ("BOOST_MPL_AUX_ARG_ADL_BARRIER_DECL" variable (:constant-flag t) nil [780 814])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [986 1039])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1150 1179])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1197 1250]))          
      :file "placeholders.hpp"
      :pointmax 2562
      :fsize 2561
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1107 . 1137) (symbol 1100 . 1107) (punctuation 1099 . 1100) (punctuation 1097 . 1098) (punctuation 1096 . 1097))
      :lexical-table 
        '(("BOOST_MPL_AUX_ARG_ADL_BARRIER_DECL" (spp-arg-list ("type") 814 . 820) . 
              ((USING "using" 831 . 836) (punctuation ":" 837 . 838) (punctuation ":" 838 . 839) (symbol "BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE" 839 . 874) (punctuation ":" 874 . 875) (punctuation ":" 875 . 876) (symbol "type" 876 . 880) (punctuation ";" 880 . 881)))
          ("BOOST_MPL_PLACEHOLDERS_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "placeholders" 1180 . 1192) (punctuation "." 1192 . 1193) (symbol "hpp" 1193 . 1196)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_LAMBDA_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/lambda_fwd.hpp" include (:system-flag t) nil [478 513])
            ("boost/mpl/bind.hpp" include (:system-flag t) nil [514 543])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [544 587])
            ("boost/mpl/aux_/full_lambda.hpp" include (:system-flag t) nil [640 684]))          
      :file "lambda.hpp"
      :pointmax 886
      :fsize 885
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_LAMBDA_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_INTEGRAL_C_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [502 549])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [550 591])
            ("integral_c" type
               (:template 
                  ( ("T" type (:type "class") nil nil)
                    ("T" type (:typevar "N") nil nil))                  
                :type "struct"
                :prototype t)
                nil [812 858]))          
      :file "integral_c_fwd.hpp"
      :pointmax 1001
      :fsize 1000
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 939 . 951) (symbol 909 . 939) (symbol 867 . 908) (symbol 593 . 633))
      :lexical-table 
        '(("BOOST_MPL_INTEGRAL_C_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_CONTAINS_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("contains_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [558 604])
                            ("contains" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [605 663]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [541 666]))                  
                :type "namespace")
                nil [523 667]))          
      :file "contains_fwd.hpp"
      :pointmax 715
      :fsize 714
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_CONTAINS_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_SEQUENCE_TAG_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/sequence_tag_fwd.hpp" include (:system-flag t) nil [496 537])
            ("boost/mpl/aux_/has_tag.hpp" include (:system-flag t) nil [538 575])
            ("boost/mpl/aux_/has_begin.hpp" include (:system-flag t) nil [576 615])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [616 653])
            ("boost/mpl/aux_/is_msvc_eti_arg.hpp" include (:system-flag t) nil [654 699])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [700 740])
            ("boost/mpl/aux_/yes_no.hpp" include (:system-flag t) nil [741 777])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [778 825])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("sequence_tag_impl" type
                                       (:template 
                                          ( ("bool" type (:typevar "has_tag_") nil nil)
                                            ("bool" type (:typevar "has_begin_") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result2_" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [2106 2152]))                                          )
                                        (reparse-symbol namespacesubparts) [1897 2155])
                                    ("AUX_CLASS_SEQUENCE_TAG_SPEC" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2168 2195])
                                    ("sequence_tag_impl" type
                                       (:type "struct"
                                        :members 
                                          ( ("result2_" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable
                                                       (:typemodifiers ("typename")
                                                        :type "int")
                                                        (reparse-symbol classsubparts) nil))                                                  )
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("true" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2408 2471])
                                    ("sequence_tag_impl" type
                                       (:type "struct"
                                        :members 
                                          ( ("result2_" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable
                                                       (:typemodifiers ("typename")
                                                        :type "int")
                                                        (reparse-symbol classsubparts) nil))                                                  )
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("true" type nil nil nil)
                                            ("false" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2472 2536])
                                    ("sequence_tag_impl" type
                                       (:type "struct"
                                        :members 
                                          ( ("result2_" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("nested_begin_end_tag" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) nil))                                                  )
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("false" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2537 2599])
                                    ("sequence_tag_impl" type
                                       (:type "struct"
                                        :members 
                                          ( ("result2_" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("non_sequence_tag" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) nil))                                                  )
                                                (reparse-symbol classsubparts) nil))                                          
                                        :template-specifier 
                                          ( ("false" type nil nil nil)
                                            ("false" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2600 2659]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1880 2701])
                            ("result2_" variable (:type "int") (reparse-symbol namespacesubparts) [2964 2987]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [845 3052]))                  
                :type "namespace")
                nil [827 3053]))          
      :file "sequence_tag.hpp"
      :pointmax 3101
      :fsize 3100
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 3032 . 3049) (symbol 3011 . 3032) (number 3033 . 3034) (TEMPLATE 2955 . 2963) (punctuation 2954 . 2955) (punctuation 2953 . 2954) (punctuation 2952 . 2953) (symbol 2938 . 2943) (punctuation 2937 . 2938) (punctuation 2936 . 2937) (punctuation 2935 . 2936) (symbol 2927 . 2935) (punctuation 2926 . 2927) (symbol 2917 . 2926) (punctuation 2916 . 2917) (punctuation 2915 . 2916) (symbol 2912 . 2915) (punctuation 2911 . 2912) (punctuation 2910 . 2911) (symbol 2907 . 2910) (punctuation 2906 . 2907) (punctuation 2905 . 2906) (symbol 2900 . 2905) (punctuation 2899 . 2900) (punctuation 2898 . 2899) (punctuation 2896 . 2897) (symbol 2882 . 2887) (punctuation 2881 . 2882) (punctuation 2880 . 2881) (punctuation 2879 . 2880) (symbol 2871 . 2879) (punctuation 2870 . 2871) (symbol 2863 . 2870) (punctuation 2862 . 2863) (punctuation 2861 . 2862) (symbol 2858 . 2861) (punctuation 2857 . 2858) (punctuation 2856 . 2857) (symbol 2853 . 2856) (punctuation 2852 . 2853) (punctuation 2851 . 2852) (symbol 2846 . 2851) (punctuation 2845 . 2846) (punctuation 2844 . 2845) (punctuation 2832 . 2833) (symbol 2815 . 2832) (punctuation 2814 . 2815) (punctuation 2813 . 2814) (symbol 2810 . 2813) (punctuation 2808 . 2809) (symbol 2791 . 2803) (STRUCT 2784 . 2790) (punctuation 2782 . 2783) (semantic-list 2767 . 2777) (symbol 2745 . 2767) (TYPENAME 2736 . 2744) (punctuation 2728 . 2729) (TEMPLATE 2720 . 2728))
      :lexical-table 
        '(("BOOST_MPL_SEQUENCE_TAG_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_ARG_HPP_INCLUDED" variable (:constant-flag t) nil [101 127])
            ("boost/mpl/arg_fwd.hpp" include (:system-flag t) nil [603 638])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [639 674])
            ("boost/mpl/aux_/na_assert.hpp" include (:system-flag t) nil [675 717])
            ("boost/mpl/aux_/arity_spec.hpp" include (:system-flag t) nil [718 761])
            ("boost/mpl/aux_/arg_typedef.hpp" include (:system-flag t) nil [762 806])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [815 867])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [868 921])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1035 1064])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1073 1126]))          
      :file "arg.hpp"
      :pointmax 3319
      :fsize 3318
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 992 . 1022) (symbol 985 . 992) (punctuation 984 . 985) (punctuation 982 . 983) (punctuation 981 . 982))
      :lexical-table 
        '(("BOOST_MPL_ARG_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "arg" 1065 . 1068) (punctuation "." 1068 . 1069) (symbol "hpp" 1069 . 1072)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_ITER_FOLD_IF_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [528 562])
            ("boost/mpl/logical.hpp" include (:system-flag t) nil [563 595])
            ("boost/mpl/always.hpp" include (:system-flag t) nil [596 627])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [628 660])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [661 688])
            ("boost/mpl/pair.hpp" include (:system-flag t) nil [689 718])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [719 749])
            ("boost/mpl/aux_/iter_fold_if_impl.hpp" include (:system-flag t) nil [750 797])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [798 835])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [836 880])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [881 928])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [929 976])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [978 1018])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("iter_fold_if" type
                                       (:members 
                                          ( ("first_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1963 1975])
                                            ("last_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2012 2023])
                                            ("backward_pred_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2205 2225])
                                            ("result_" type
                                               (:superclasses 
                                                  ( ("aux::iter_fold_if_impl" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) [2410 2785])
                                            ("public" label nil (reparse-symbol classsubparts) [2813 2820])
                                            ("type" variable (:type "int") (reparse-symbol classsubparts) [2921 2926]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [1902 3092]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1055 3135]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1038 3136]))                  
                :type "namespace")
                nil [1020 3184]))          
      :file "iter_fold_if.hpp"
      :pointmax 3184
      :fsize 3183
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 3115 . 3132) (symbol 3094 . 3115) (number 3116 . 3117) (semantic-list 2960 . 3089) (symbol 2932 . 2960) (semantic-list 3007 . 3079) (number 2972 . 2973) (punctuation 2919 . 2920) (symbol 2902 . 2910) (punctuation 2901 . 2902) (punctuation 2900 . 2901) (symbol 2893 . 2900) (TYPENAME 2884 . 2892) (punctuation 2882 . 2883) (symbol 2868 . 2873) (punctuation 2867 . 2868) (punctuation 2866 . 2867) (symbol 2859 . 2866) (TYPENAME 2850 . 2858) (punctuation 2838 . 2839) (symbol 2834 . 2838) (TYPEDEF 2826 . 2833) (punctuation 2204 . 2205) (punctuation 2203 . 2204) (punctuation 2202 . 2203) (punctuation 2192 . 2193) (symbol 2175 . 2192) (punctuation 2174 . 2175) (symbol 2166 . 2174) (punctuation 2164 . 2165) (punctuation 2154 . 2155) (punctuation 2152 . 2153) (symbol 2147 . 2152) (punctuation 2146 . 2147) (symbol 2140 . 2146) (punctuation 2138 . 2139) (punctuation 2137 . 2138) (symbol 2131 . 2137) (punctuation 2130 . 2131) (symbol 2124 . 2130) (punctuation 2122 . 2123) (punctuation 2121 . 2122) (symbol 2111 . 2121) (punctuation 2110 . 2111) (symbol 2105 . 2110) (punctuation 2103 . 2104) (symbol 2100 . 2103) (punctuation 2098 . 2099) (punctuation 2088 . 2089) (symbol 2071 . 2088) (punctuation 2070 . 2071) (symbol 2065 . 2070) (punctuation 2053 . 2054) (symbol 2046 . 2053) (TYPENAME 2037 . 2045) (TYPEDEF 2029 . 2036) (punctuation 2011 . 2012) (punctuation 2010 . 2011) (punctuation 2009 . 2010) (symbol 2001 . 2009) (punctuation 2000 . 2001) (symbol 1997 . 2000) (TYPENAME 1988 . 1996) (TYPEDEF 1980 . 1987) (punctuation 1962 . 1963) (punctuation 1961 . 1962) (punctuation 1960 . 1961) (symbol 1952 . 1960) (punctuation 1951 . 1952) (symbol 1946 . 1951) (TYPENAME 1937 . 1945) (TYPEDEF 1929 . 1936) (punctuation 1900 . 1901) (semantic-list 1876 . 1895) (symbol 1854 . 1876) (TYPENAME 1845 . 1853) (punctuation 1843 . 1844) (semantic-list 1826 . 1838) (symbol 1804 . 1826) (TYPENAME 1795 . 1803) (punctuation 1793 . 1794) (semantic-list 1770 . 1788) (symbol 1748 . 1770) (TYPENAME 1739 . 1747) (punctuation 1737 . 1738) (semantic-list 1721 . 1732) (symbol 1699 . 1721) (TYPENAME 1690 . 1698) (punctuation 1688 . 1689) (semantic-list 1676 . 1683) (symbol 1654 . 1676) (TYPENAME 1645 . 1653) (punctuation 1643 . 1644) (semantic-list 1628 . 1638) (symbol 1606 . 1628) (TYPENAME 1597 . 1605) (punctuation 1589 . 1590) (TEMPLATE 1581 . 1589) (semantic-list 1151 . 1562) (symbol 1133 . 1150) (STRUCT 1126 . 1132) (punctuation 1555 . 1556) (punctuation 1555 . 1556) (punctuation 1124 . 1125) (symbol 1111 . 1123) (TYPENAME 1102 . 1110) (punctuation 1100 . 1101) (symbol 1091 . 1100) (TYPENAME 1082 . 1090) (punctuation 1080 . 1081) (TEMPLATE 1072 . 1080) (punctuation 1555 . 1556) (punctuation 1555 . 1556))
      :lexical-table 
        '(("BOOST_MPL_ITER_FOLD_IF_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_FOLD_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [510 544])
            ("boost/mpl/O1_size.hpp" include (:system-flag t) nil [545 577])
            ("boost/mpl/aux_/fold_impl.hpp" include (:system-flag t) nil [578 617])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [618 655])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [656 700])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("fold" type
                               (:members 
                                  ( ("type" variable (:type ("state" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1122 1133]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [895 1205]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [720 1240]))                  
                :type "namespace")
                nil [702 1241]))          
      :file "fold.hpp"
      :pointmax 1281
      :fsize 1280
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1228 . 1237) (symbol 1207 . 1228) (number 1229 . 1230) (semantic-list 1167 . 1202) (symbol 1139 . 1167) (semantic-list 1175 . 1201) (number 1168 . 1169) (punctuation 1121 . 1122) (punctuation 1120 . 1121) (punctuation 1119 . 1120) (symbol 1101 . 1110) (punctuation 1099 . 1100) (symbol 1085 . 1090) (punctuation 1083 . 1084) (symbol 1070 . 1074) (punctuation 1069 . 1070) (punctuation 1068 . 1069) (punctuation 1067 . 1068) (symbol 1059 . 1067) (punctuation 1058 . 1059) (symbol 1055 . 1058) (TYPENAME 1046 . 1054) (punctuation 1044 . 1045) (symbol 1031 . 1035) (punctuation 1030 . 1031) (punctuation 1029 . 1030) (punctuation 1028 . 1029) (symbol 1020 . 1028) (punctuation 1019 . 1020) (symbol 1014 . 1019) (TYPENAME 1005 . 1013) (punctuation 1003 . 1004) (symbol 989 . 994) (punctuation 988 . 989) (punctuation 987 . 988) (punctuation 986 . 987) (symbol 978 . 986) (punctuation 977 . 978) (symbol 970 . 977) (punctuation 969 . 970) (punctuation 968 . 969) (symbol 965 . 968) (punctuation 964 . 965) (punctuation 963 . 964) (symbol 958 . 963) (punctuation 957 . 958) (punctuation 956 . 957) (punctuation 944 . 945) (symbol 935 . 944) (punctuation 934 . 935) (punctuation 933 . 934) (symbol 930 . 933) (TYPENAME 921 . 929) (TYPEDEF 913 . 920) (punctuation 893 . 894) (semantic-list 877 . 888) (symbol 855 . 877) (TYPENAME 846 . 854) (punctuation 844 . 845) (semantic-list 832 . 839) (symbol 810 . 832) (TYPENAME 801 . 809) (punctuation 799 . 800) (semantic-list 784 . 794) (symbol 762 . 784) (TYPENAME 753 . 761) (punctuation 745 . 746) (TEMPLATE 737 . 745))
      :lexical-table 
        '(("BOOST_MPL_FOLD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_REVERSE_FOLD_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [534 568])
            ("boost/mpl/O1_size.hpp" include (:system-flag t) nil [569 601])
            ("boost/mpl/arg.hpp" include (:system-flag t) nil [602 630])
            ("boost/mpl/aux_/reverse_fold_impl.hpp" include (:system-flag t) nil [631 678])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [679 716])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("reverse_fold" type
                               (:members 
                                  ( ("type" variable (:type ("state" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1210 1221]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [946 1302]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [736 1345]))                  
                :type "namespace")
                nil [718 1346]))          
      :file "reverse_fold.hpp"
      :pointmax 1394
      :fsize 1393
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1325 . 1342) (symbol 1304 . 1325) (number 1326 . 1327) (semantic-list 1255 . 1299) (symbol 1227 . 1255) (semantic-list 1271 . 1298) (number 1256 . 1257) (punctuation 1209 . 1210) (punctuation 1208 . 1209) (punctuation 1207 . 1208) (symbol 1189 . 1198) (punctuation 1187 . 1188) (symbol 1168 . 1178) (punctuation 1166 . 1167) (symbol 1152 . 1157) (punctuation 1150 . 1151) (symbol 1137 . 1141) (punctuation 1136 . 1137) (punctuation 1135 . 1136) (punctuation 1134 . 1135) (symbol 1126 . 1134) (punctuation 1125 . 1126) (symbol 1122 . 1125) (TYPENAME 1113 . 1121) (punctuation 1111 . 1112) (symbol 1098 . 1102) (punctuation 1097 . 1098) (punctuation 1096 . 1097) (punctuation 1095 . 1096) (symbol 1087 . 1095) (punctuation 1086 . 1087) (symbol 1081 . 1086) (TYPENAME 1072 . 1080) (punctuation 1070 . 1071) (symbol 1056 . 1061) (punctuation 1055 . 1056) (punctuation 1054 . 1055) (punctuation 1053 . 1054) (symbol 1045 . 1053) (punctuation 1044 . 1045) (symbol 1037 . 1044) (punctuation 1036 . 1037) (punctuation 1035 . 1036) (symbol 1032 . 1035) (punctuation 1031 . 1032) (punctuation 1030 . 1031) (symbol 1025 . 1030) (punctuation 1024 . 1025) (punctuation 1023 . 1024) (punctuation 1011 . 1012) (symbol 994 . 1011) (punctuation 993 . 994) (punctuation 992 . 993) (symbol 989 . 992) (TYPENAME 980 . 988) (TYPEDEF 972 . 979) (punctuation 944 . 945) (punctuation 938 . 939) (number 937 . 938) (punctuation 936 . 937) (symbol 933 . 936) (punctuation 931 . 932) (symbol 921 . 930) (TYPENAME 912 . 920) (punctuation 910 . 911) (semantic-list 893 . 905) (symbol 871 . 893) (TYPENAME 862 . 870) (punctuation 860 . 861) (semantic-list 848 . 855) (symbol 826 . 848) (TYPENAME 817 . 825) (punctuation 815 . 816) (semantic-list 800 . 810) (symbol 778 . 800) (TYPENAME 769 . 777) (punctuation 761 . 762) (TEMPLATE 753 . 761))
      :lexical-table 
        '(("BOOST_MPL_REVERSE_FOLD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_PROTECT_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/aux_/arity.hpp" include (:system-flag t) nil [511 546])
            ("boost/mpl/aux_/config/dtp.hpp" include (:system-flag t) nil [547 587])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [588 627])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [628 665])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("protect" type
                               (:superclasses 
                                  ( ("T" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("type" type
                                       (:typedef ("protect" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [889 910]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [781 920]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [685 1300]))                  
                :type "namespace")
                nil [667 1301]))          
      :file "protect.hpp"
      :pointmax 1344
      :fsize 1343
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1275 . 1290) (symbol 1239 . 1275) (number 1279 . 1280) (number 1276 . 1277) (semantic-list 1175 . 1187) (symbol 1149 . 1175) (number 1176 . 1177) (punctuation 779 . 780) (number 773 . 774) (punctuation 771 . 772) (symbol 763 . 770) (INT 759 . 762) (punctuation 757 . 758) (semantic-list 749 . 752) (symbol 727 . 749) (TYPENAME 718 . 726) (punctuation 710 . 711) (TEMPLATE 702 . 710))
      :lexical-table 
        '(("BOOST_MPL_PROTECT_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_PUSH_BACK_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("push_back_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [534 581])
                            ("push_back" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [582 641]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [517 644]))                  
                :type "namespace")
                nil [499 645]))          
      :file "push_back_fwd.hpp"
      :pointmax 694
      :fsize 693
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_PUSH_BACK_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AT_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("at_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [513 553])
                            ("at" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("N" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [554 606]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [496 609]))                  
                :type "namespace")
                nil [478 610]))          
      :file "at_fwd.hpp"
      :pointmax 652
      :fsize 651
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AT_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_LONG_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/long_fwd.hpp" include (:system-flag t) nil [472 505])
            ("AUX_WRAPPER_VALUE_TYPE" variable (:constant-flag t) nil [515 537])
            ("boost/mpl/aux_/integral_wrapper.hpp" include (:system-flag t) nil [543 589]))          
      :file "long.hpp"
      :pointmax 629
      :fsize 628
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("AUX_WRAPPER_VALUE_TYPE" . ((LONG "long" 538 . 542)))
          ("BOOST_MPL_LONG_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_SIZE_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("size_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [519 561])
                            ("size" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [562 604]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [502 607]))                  
                :type "namespace")
                nil [484 608]))          
      :file "size_fwd.hpp"
      :pointmax 652
      :fsize 651
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_SIZE_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_BIND_HPP_INCLUDED" variable (:constant-flag t) nil [102 129])
            ("boost/mpl/bind_fwd.hpp" include (:system-flag t) nil [601 637])
            ("boost/mpl/placeholders.hpp" include (:system-flag t) nil [638 678])
            ("boost/mpl/next.hpp" include (:system-flag t) nil [679 711])
            ("boost/mpl/protect.hpp" include (:system-flag t) nil [712 747])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [748 786])
            ("boost/mpl/limits/arity.hpp" include (:system-flag t) nil [787 827])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [828 863])
            ("boost/mpl/aux_/arity_spec.hpp" include (:system-flag t) nil [864 907])
            ("boost/mpl/aux_/type_wrapper.hpp" include (:system-flag t) nil [908 953])
            ("boost/mpl/aux_/yes_no.hpp" include (:system-flag t) nil [954 993])
            ("boost/mpl/aux_/config/bind.hpp" include (:system-flag t) nil [1123 1164])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [1165 1217])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1218 1271])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1519 1548])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1568 1621]))          
      :file "bind.hpp"
      :pointmax 15055
      :fsize 15054
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1342 . 1372) (symbol 1335 . 1342) (punctuation 1334 . 1335) (punctuation 1332 . 1333) (punctuation 1331 . 1332))
      :lexical-table 
        '(("BOOST_MPL_BIND_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "bind" 1549 . 1553) (punctuation "." 1553 . 1554) (symbol "hpp" 1554 . 1557)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_MULTIPLIES_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/times.hpp" include (:system-flag t) nil [490 520])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [521 558])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [559 603])
            ("boost/mpl/aux_/preprocessor/default_params.hpp" include (:system-flag t) nil [604 661])
            ("boost/mpl/aux_/preprocessor/params.hpp" include (:system-flag t) nil [662 711])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [712 753])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("AUX778076_OP_ARITY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [902 920]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [819 1404]))                  
                :type "namespace")
                nil [801 1405]))          
      :file "multiplies.hpp"
      :pointmax 1451
      :fsize 1450
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1342 . 1374) (symbol 1321 . 1342) (punctuation 1318 . 1319) (semantic-list 1164 . 1318) (punctuation 1162 . 1163) (semantic-list 1138 . 1161) (symbol 1119 . 1138) (punctuation 1117 . 1118) (symbol 1112 . 1117) (punctuation 1110 . 1111) (symbol 1095 . 1105) (STRUCT 1088 . 1094) (punctuation 1086 . 1087) (semantic-list 1045 . 1081) (symbol 1018 . 1045) (punctuation 1010 . 1011) (TEMPLATE 1002 . 1010))
      :lexical-table 
        '(("BOOST_MPL_MULTIPLIES_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_SEQUENCE_TAG_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [58 97])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("nested_begin_end_tag" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [543 571])
                            ("non_sequence_tag" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [572 596])
                            ("sequence_tag" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [598 648]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [526 651]))                  
                :type "namespace")
                nil [508 652]))          
      :file "sequence_tag_fwd.hpp"
      :pointmax 704
      :fsize 703
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_SEQUENCE_TAG_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_BEGIN_END_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost/mpl/begin_end_fwd.hpp" include (:system-flag t) nil [487 525])
            ("boost/mpl/aux_/begin_end_impl.hpp" include (:system-flag t) nil [526 570])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [571 608])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [609 646])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [647 691])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("begin" type
                               (:members 
                                  ( ("tag_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1009 1019])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1098 1108]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [949 1165])
                            ("end" type
                               (:members 
                                  ( ("tag_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1289 1299])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1376 1386]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1231 1441]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [711 1507]))                  
                :type "namespace")
                nil [693 1508]))          
      :file "begin_end.hpp"
      :pointmax 1553
      :fsize 1552
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1496 . 1504) (symbol 1475 . 1496) (number 1497 . 1498) (semantic-list 1464 . 1474) (symbol 1443 . 1464) (number 1465 . 1466) (semantic-list 1420 . 1438) (symbol 1392 . 1420) (semantic-list 1427 . 1437) (number 1421 . 1422) (punctuation 1375 . 1376) (punctuation 1374 . 1375) (punctuation 1373 . 1374) (symbol 1364 . 1372) (punctuation 1362 . 1363) (symbol 1357 . 1362) (TEMPLATE 1348 . 1356) (punctuation 1347 . 1348) (punctuation 1346 . 1347) (punctuation 1336 . 1337) (symbol 1331 . 1335) (punctuation 1329 . 1330) (symbol 1321 . 1329) (TYPENAME 1312 . 1320) (TYPEDEF 1304 . 1311) (punctuation 1288 . 1289) (punctuation 1287 . 1288) (punctuation 1286 . 1287) (symbol 1278 . 1286) (punctuation 1277 . 1278) (symbol 1265 . 1277) (TYPENAME 1256 . 1264) (TYPEDEF 1248 . 1255) (punctuation 1229 . 1230) (semantic-list 1214 . 1224) (symbol 1192 . 1214) (TYPENAME 1183 . 1191) (punctuation 1175 . 1176) (TEMPLATE 1167 . 1175) (semantic-list 1142 . 1162) (symbol 1114 . 1142) (semantic-list 1151 . 1161) (number 1143 . 1144) (punctuation 1097 . 1098) (punctuation 1096 . 1097) (punctuation 1095 . 1096) (symbol 1086 . 1094) (punctuation 1084 . 1085) (symbol 1079 . 1084) (TEMPLATE 1070 . 1078) (punctuation 1069 . 1070) (punctuation 1068 . 1069) (punctuation 1058 . 1059) (symbol 1053 . 1057) (punctuation 1051 . 1052) (symbol 1041 . 1051) (TYPENAME 1032 . 1040) (TYPEDEF 1024 . 1031) (punctuation 1008 . 1009) (punctuation 1007 . 1008) (punctuation 1006 . 1007) (symbol 998 . 1006) (punctuation 997 . 998) (symbol 985 . 997) (TYPENAME 976 . 984) (TYPEDEF 968 . 975) (punctuation 947 . 948) (semantic-list 932 . 942) (symbol 910 . 932) (TYPENAME 901 . 909) (punctuation 893 . 894) (TEMPLATE 885 . 893))
      :lexical-table 
        '(("BOOST_MPL_BEGIN_END_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_FIND_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/find_if.hpp" include (:system-flag t) nil [472 504])
            ("boost/mpl/same_as.hpp" include (:system-flag t) nil [505 537])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [538 575])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [576 620])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("find" type
                               (:superclasses 
                                  ( ("find_if" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [762 869]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [640 904]))                  
                :type "namespace")
                nil [622 905]))          
      :file "find.hpp"
      :pointmax 945
      :fsize 944
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 892 . 901) (symbol 871 . 892) (number 893 . 894) (semantic-list 845 . 866) (symbol 817 . 845) (semantic-list 853 . 865) (number 846 . 847) (punctuation 760 . 761) (semantic-list 752 . 755) (symbol 730 . 752) (TYPENAME 721 . 729) (punctuation 719 . 720) (semantic-list 704 . 714) (symbol 682 . 704) (TYPENAME 673 . 681) (punctuation 665 . 666) (TEMPLATE 657 . 665))
      :lexical-table 
        '(("BOOST_MPL_FIND_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_ARG_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [516 557])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [558 597])
            ("arg" type
               (:prototype t
                :type "struct")
                nil [685 696]))          
      :file "arg_fwd.hpp"
      :pointmax 818
      :fsize 817
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 770 . 775) (symbol 740 . 770) (symbol 698 . 739) (punctuation 683 . 684) (semantic-list 674 . 682) (symbol 651 . 674) (punctuation 649 . 650) (TEMPLATE 641 . 649) (symbol 599 . 639))
      :lexical-table 
        '(("BOOST_MPL_ARG_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_PAIR_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/aux_/msvc_eti_base.hpp" include (:system-flag t) nil [472 515])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [516 553])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [554 598])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [599 639])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("pair" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("pair" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [794 812])
                                    ("first" type
                                       (:typedef ("T1" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [817 834])
                                    ("second" type
                                       (:typedef ("T2" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [839 857]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [776 910])
                            ("first" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("P::first" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1032 1063]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [969 1181])
                            ("second" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("P::second" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1304 1336]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [1240 1456]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [659 1564]))                  
                :type "namespace")
                nil [641 1565]))          
      :file "pair.hpp"
      :pointmax 1605
      :fsize 1604
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1550 . 1561) (symbol 1529 . 1550) (number 1551 . 1552) (semantic-list 1518 . 1528) (symbol 1497 . 1518) (number 1519 . 1520) (semantic-list 1487 . 1496) (symbol 1459 . 1487) (number 1488 . 1489) (semantic-list 1439 . 1453) (symbol 1411 . 1439) (semantic-list 1449 . 1452) (number 1440 . 1441) (punctuation 1238 . 1239) (semantic-list 1230 . 1233) (symbol 1208 . 1230) (TYPENAME 1199 . 1207) (punctuation 1191 . 1192) (TEMPLATE 1183 . 1191) (semantic-list 1165 . 1178) (symbol 1137 . 1165) (semantic-list 1174 . 1177) (number 1166 . 1167) (punctuation 967 . 968) (semantic-list 959 . 962) (symbol 937 . 959) (TYPENAME 928 . 936) (punctuation 920 . 921) (TEMPLATE 912 . 920) (semantic-list 891 . 907) (symbol 863 . 891) (semantic-list 899 . 906) (number 892 . 893) (punctuation 774 . 775) (semantic-list 765 . 769) (symbol 743 . 765) (TYPENAME 734 . 742) (punctuation 732 . 733) (semantic-list 723 . 727) (symbol 701 . 723) (TYPENAME 692 . 700) (punctuation 684 . 685) (TEMPLATE 676 . 684))
      :lexical-table 
        '(("BOOST_MPL_PAIR_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_O1_SIZE_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/O1_size_fwd.hpp" include (:system-flag t) nil [481 517])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [518 555])
            ("boost/mpl/aux_/O1_size_impl.hpp" include (:system-flag t) nil [556 598])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [599 636])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [637 681])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [949 1028]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [701 1066]))                  
                :type "namespace")
                nil [683 1067]))          
      :file "O1_size.hpp"
      :pointmax 1110
      :fsize 1109
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1051 . 1063) (symbol 1030 . 1051) (number 1052 . 1053) (TEMPLATE 940 . 948) (punctuation 939 . 940) (punctuation 938 . 939) (punctuation 928 . 929) (symbol 923 . 927) (punctuation 922 . 923) (punctuation 921 . 922) (punctuation 920 . 921) (symbol 912 . 920) (punctuation 911 . 912) (symbol 899 . 911) (TYPENAME 890 . 898) (punctuation 888 . 889) (symbol 876 . 888) (punctuation 874 . 875) (symbol 862 . 869) (STRUCT 855 . 861) (punctuation 853 . 854) (semantic-list 838 . 848) (symbol 816 . 838) (TYPENAME 807 . 815) (punctuation 799 . 800) (TEMPLATE 791 . 799))
      :lexical-table 
        '(("BOOST_MPL_O1_SIZE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_BACK_INSERTER_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/push_back.hpp" include (:system-flag t) nil [537 571])
            ("boost/mpl/inserter.hpp" include (:system-flag t) nil [572 605])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("back_inserter" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("inserter" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [642 746]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [625 749]))                  
                :type "namespace")
                nil [607 750]))          
      :file "back_inserter.hpp"
      :pointmax 799
      :fsize 798
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_BACK_INSERTER_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_FRONT_INSERTER_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/push_front.hpp" include (:system-flag t) nil [540 575])
            ("boost/mpl/inserter.hpp" include (:system-flag t) nil [576 609])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("front_inserter" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("inserter" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [646 752]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [629 755]))                  
                :type "namespace")
                nil [611 756]))          
      :file "front_inserter.hpp"
      :pointmax 806
      :fsize 805
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_FRONT_INSERTER_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_PUSH_FRONT_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/push_front_fwd.hpp" include (:system-flag t) nil [490 529])
            ("boost/mpl/aux_/push_front_impl.hpp" include (:system-flag t) nil [530 575])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [576 613])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [614 651])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [652 696])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [938 1022])
                            ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [1198 1282]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [716 1364]))                  
                :type "namespace")
                nil [698 1365]))          
      :file "push_front.hpp"
      :pointmax 1411
      :fsize 1410
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1342 . 1361) (symbol 1321 . 1342) (number 1343 . 1344) (semantic-list 1305 . 1320) (symbol 1284 . 1305) (number 1306 . 1307) (TEMPLATE 1189 . 1197) (punctuation 1188 . 1189) (punctuation 1187 . 1188) (punctuation 1177 . 1178) (symbol 1172 . 1176) (punctuation 1171 . 1172) (punctuation 1170 . 1171) (punctuation 1169 . 1170) (symbol 1161 . 1169) (punctuation 1160 . 1161) (symbol 1148 . 1160) (TYPENAME 1139 . 1147) (punctuation 1137 . 1138) (symbol 1118 . 1137) (punctuation 1116 . 1117) (symbol 1097 . 1111) (STRUCT 1090 . 1096) (punctuation 1088 . 1089) (semantic-list 1073 . 1083) (symbol 1051 . 1073) (TYPENAME 1042 . 1050) (punctuation 1033 . 1034) (TEMPLATE 1025 . 1033) (TEMPLATE 929 . 937) (punctuation 928 . 929) (punctuation 927 . 928) (punctuation 917 . 918) (symbol 912 . 916) (punctuation 911 . 912) (punctuation 910 . 911) (punctuation 909 . 910) (symbol 901 . 909) (punctuation 900 . 901) (symbol 888 . 900) (TYPENAME 879 . 887) (punctuation 877 . 878) (symbol 862 . 877) (punctuation 860 . 861) (symbol 845 . 855) (STRUCT 838 . 844) (punctuation 836 . 837) (semantic-list 828 . 831) (symbol 806 . 828) (TYPENAME 797 . 805) (punctuation 795 . 796) (semantic-list 780 . 790) (symbol 758 . 780) (TYPENAME 749 . 757) (punctuation 741 . 742) (TEMPLATE 733 . 741))
      :lexical-table 
        '(("BOOST_MPL_PUSH_FRONT_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_CLEAR_HPP_INCLUDED" variable (:constant-flag t) nil [47 75])
            ("boost/mpl/clear_fwd.hpp" include (:system-flag t) nil [475 509])
            ("boost/mpl/aux_/clear_impl.hpp" include (:system-flag t) nil [510 550])
            ("boost/mpl/sequence_tag.hpp" include (:system-flag t) nil [551 588])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [589 626])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [627 671])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [862 937]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [691 973]))                  
                :type "namespace")
                nil [673 974]))          
      :file "clear.hpp"
      :pointmax 1015
      :fsize 1014
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 960 . 970) (symbol 939 . 960) (number 961 . 962) (TEMPLATE 853 . 861) (punctuation 852 . 853) (punctuation 851 . 852) (punctuation 841 . 842) (symbol 836 . 840) (punctuation 835 . 836) (punctuation 834 . 835) (punctuation 833 . 834) (symbol 825 . 833) (punctuation 824 . 825) (symbol 812 . 824) (TYPENAME 803 . 811) (punctuation 801 . 802) (symbol 791 . 801) (punctuation 789 . 790) (symbol 779 . 784) (STRUCT 772 . 778) (punctuation 770 . 771) (semantic-list 755 . 765) (symbol 733 . 755) (TYPENAME 724 . 732) (punctuation 716 . 717) (TEMPLATE 708 . 716))
      :lexical-table 
        '(("BOOST_MPL_CLEAR_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_ADVANCE_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/advance_fwd.hpp" include (:system-flag t) nil [481 517])
            ("boost/mpl/less.hpp" include (:system-flag t) nil [518 547])
            ("boost/mpl/negate.hpp" include (:system-flag t) nil [548 579])
            ("boost/mpl/long.hpp" include (:system-flag t) nil [580 609])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [610 637])
            ("boost/mpl/tag.hpp" include (:system-flag t) nil [638 666])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [667 702])
            ("boost/mpl/aux_/advance_forward.hpp" include (:system-flag t) nil [703 748])
            ("boost/mpl/aux_/advance_backward.hpp" include (:system-flag t) nil [749 795])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [796 836])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [837 874])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [875 914])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("advance_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Iterator" type (:type "class") nil nil)
                                            ("N" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("backward_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1170 1185])
                                            ("offset_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1243 1256])
                                            ("f_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1486 1494])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1547 1557]))                                          )
                                        (reparse-symbol classsubparts) [1064 1564]))                                  )
                                (reparse-symbol namespacesubparts) [1013 1567])
                            ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [1760 1782])
                            ("apply" variable (:type "int") (reparse-symbol namespacesubparts) [1950 1980]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [934 2018]))                  
                :type "namespace")
                nil [916 2019]))          
      :file "advance.hpp"
      :pointmax 2062
      :fsize 2061
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 2003 . 2015) (symbol 1982 . 2003) (number 2004 . 2005) (TEMPLATE 1941 . 1949) (punctuation 1940 . 1941) (punctuation 1939 . 1940) (punctuation 1929 . 1930) (symbol 1924 . 1928) (punctuation 1923 . 1924) (punctuation 1922 . 1923) (punctuation 1921 . 1922) (symbol 1913 . 1921) (punctuation 1912 . 1913) (symbol 1909 . 1912) (TYPENAME 1900 . 1908) (punctuation 1898 . 1899) (symbol 1886 . 1898) (punctuation 1884 . 1885) (symbol 1870 . 1879) (STRUCT 1863 . 1869) (punctuation 1861 . 1862) (semantic-list 1847 . 1856) (symbol 1824 . 1847) (punctuation 1822 . 1823) (symbol 1809 . 1817) (TYPENAME 1800 . 1808) (punctuation 1792 . 1793) (TEMPLATE 1784 . 1792) (TEMPLATE 1751 . 1759) (punctuation 1750 . 1751) (punctuation 1749 . 1750) (punctuation 1739 . 1740) (symbol 1734 . 1738) (punctuation 1733 . 1734) (punctuation 1732 . 1733) (punctuation 1731 . 1732) (symbol 1723 . 1731) (punctuation 1722 . 1723) (symbol 1719 . 1722) (TYPENAME 1710 . 1718) (punctuation 1708 . 1709) (symbol 1696 . 1708) (punctuation 1694 . 1695) (symbol 1682 . 1689) (STRUCT 1675 . 1681) (punctuation 1673 . 1674) (semantic-list 1665 . 1668) (symbol 1643 . 1665) (TYPENAME 1634 . 1642) (punctuation 1632 . 1633) (semantic-list 1617 . 1627) (symbol 1595 . 1617) (TYPENAME 1586 . 1594) (punctuation 1578 . 1579) (TEMPLATE 1570 . 1578) (punctuation 1546 . 1547) (punctuation 1545 . 1546) (punctuation 1544 . 1545) (symbol 1536 . 1544) (punctuation 1535 . 1536) (symbol 1533 . 1535) (punctuation 1532 . 1533) (symbol 1521 . 1532) (TYPENAME 1512 . 1520) (TYPEDEF 1504 . 1511) (punctuation 1485 . 1486) (punctuation 1484 . 1485) (punctuation 1483 . 1484) (punctuation 1469 . 1470) (symbol 1463 . 1468) (punctuation 1462 . 1463) (punctuation 1461 . 1462) (semantic-list 1452 . 1461) (symbol 1428 . 1452) (punctuation 1426 . 1427) (symbol 1411 . 1426) (punctuation 1410 . 1411) (punctuation 1409 . 1410) (symbol 1406 . 1409) (punctuation 1404 . 1405) (punctuation 1390 . 1391) (symbol 1384 . 1389) (punctuation 1383 . 1384) (punctuation 1382 . 1383) (semantic-list 1373 . 1382) (symbol 1349 . 1373) (punctuation 1347 . 1348) (symbol 1331 . 1347) (punctuation 1330 . 1331) (punctuation 1329 . 1330) (symbol 1326 . 1329) (punctuation 1324 . 1325) (symbol 1302 . 1311) (punctuation 1286 . 1287) (symbol 1283 . 1286) (TYPENAME 1274 . 1282) (TYPEDEF 1266 . 1273) (punctuation 1242 . 1243) (punctuation 1241 . 1242) (punctuation 1240 . 1241) (symbol 1238 . 1239) (punctuation 1236 . 1237) (punctuation 1235 . 1236) (symbol 1234 . 1235) (punctuation 1233 . 1234) (symbol 1227 . 1233) (punctuation 1225 . 1226) (symbol 1216 . 1225) (punctuation 1214 . 1215) (symbol 1211 . 1214) (TYPENAME 1202 . 1210) (TYPEDEF 1194 . 1201) (punctuation 1169 . 1170) (punctuation 1168 . 1169) (punctuation 1167 . 1168) (punctuation 1165 . 1166) (number 1164 . 1165) (punctuation 1163 . 1164) (symbol 1158 . 1163) (punctuation 1157 . 1158) (symbol 1156 . 1157) (punctuation 1154 . 1155) (symbol 1150 . 1154) (TYPENAME 1141 . 1149) (TYPEDEF 1133 . 1140))
      :lexical-table 
        '(("BOOST_MPL_ADVANCE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_DEREF_HPP_INCLUDED" variable (:constant-flag t) nil [47 75])
            ("boost/mpl/aux_/msvc_type.hpp" include (:system-flag t) nil [475 514])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [515 552])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [553 597])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [598 638])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("deref" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("Iterator::type" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [802 839]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [739 966]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [658 1002]))                  
                :type "namespace")
                nil [640 1003]))          
      :file "deref.hpp"
      :pointmax 1044
      :fsize 1043
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 989 . 999) (symbol 968 . 989) (number 990 . 991) (semantic-list 943 . 963) (symbol 915 . 943) (semantic-list 952 . 962) (number 944 . 945) (punctuation 737 . 738) (semantic-list 722 . 732) (symbol 700 . 722) (TYPENAME 691 . 699) (punctuation 683 . 684) (TEMPLATE 675 . 683))
      :lexical-table 
        '(("BOOST_MPL_DEREF_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_LONG_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [484 525])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [526 565])
            ("long_" type
               (:prototype t
                :type "struct")
                nil [654 667]))          
      :file "long_fwd.hpp"
      :pointmax 792
      :fsize 791
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 741 . 748) (symbol 711 . 741) (symbol 669 . 710) (punctuation 652 . 653) (semantic-list 642 . 651) (symbol 619 . 642) (punctuation 617 . 618) (TEMPLATE 609 . 617) (symbol 567 . 607))
      :lexical-table 
        '(("BOOST_MPL_LONG_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_DISTANCE_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost/mpl/distance_fwd.hpp" include (:system-flag t) nil [484 521])
            ("boost/mpl/iter_fold.hpp" include (:system-flag t) nil [522 556])
            ("boost/mpl/iterator_range.hpp" include (:system-flag t) nil [557 596])
            ("boost/mpl/long.hpp" include (:system-flag t) nil [597 626])
            ("boost/mpl/next.hpp" include (:system-flag t) nil [627 656])
            ("boost/mpl/tag.hpp" include (:system-flag t) nil [657 685])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [686 721])
            ("boost/mpl/aux_/msvc_eti_base.hpp" include (:system-flag t) nil [722 765])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [766 806])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [807 844])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [845 892])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [893 945])
            ("boost" type
               (:members 
                  ( ("mpl" type (:type "namespace") (reparse-symbol namespacesubparts) [966 2092]))                  
                :type "namespace")
                nil [948 2136]))          
      :file "distance.hpp"
      :pointmax 2136
      :fsize 2135
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1091 . 2091) (symbol 1077 . 1090) (STRUCT 1070 . 1076) (semantic-list 2075 . 2088) (symbol 2054 . 2075) (number 2076 . 2077) (TEMPLATE 1959 . 1967) (punctuation 1958 . 1959) (punctuation 1957 . 1958) (punctuation 1947 . 1948) (symbol 1942 . 1946) (punctuation 1941 . 1942) (punctuation 1940 . 1941) (punctuation 1939 . 1940) (symbol 1934 . 1939) (punctuation 1933 . 1934) (symbol 1930 . 1933) (TYPENAME 1921 . 1929) (punctuation 1919 . 1920) (symbol 1906 . 1919) (punctuation 1904 . 1905) (symbol 1891 . 1899) (STRUCT 1884 . 1890) (punctuation 1882 . 1883) (semantic-list 1871 . 1877) (symbol 1849 . 1871) (TYPENAME 1840 . 1848) (punctuation 1838 . 1839) (semantic-list 1826 . 1833) (symbol 1804 . 1826) (TYPENAME 1795 . 1803) (punctuation 1787 . 1788) (TEMPLATE 1779 . 1787) (punctuation 1776 . 1777) (semantic-list 1367 . 1776) (punctuation 1361 . 1362) (symbol 1356 . 1360) (punctuation 1355 . 1356) (punctuation 1354 . 1355) (punctuation 1353 . 1354) (punctuation 1339 . 1340) (punctuation 1338 . 1339) (symbol 1334 . 1338) (punctuation 1332 . 1333) (punctuation 1318 . 1319) (number 1317 . 1318) (punctuation 1316 . 1317) (symbol 1311 . 1316) (punctuation 1310 . 1311) (punctuation 1309 . 1310) (symbol 1306 . 1309) (punctuation 1304 . 1305) (punctuation 1290 . 1291) (symbol 1286 . 1290) (punctuation 1285 . 1286) (symbol 1280 . 1285) (punctuation 1279 . 1280) (symbol 1265 . 1279) (punctuation 1249 . 1250) (symbol 1240 . 1249) (TYPENAME 1231 . 1239) (punctuation 1229 . 1230) (symbol 1216 . 1229) (punctuation 1215 . 1216) (punctuation 1214 . 1215) (symbol 1211 . 1214) (punctuation 1209 . 1210) (symbol 1146 . 1151) (STRUCT 1139 . 1145) (punctuation 1137 . 1138) (symbol 1132 . 1136) (TYPENAME 1123 . 1131) (punctuation 1121 . 1122) (symbol 1116 . 1121) (TYPENAME 1107 . 1115) (punctuation 1105 . 1106) (TEMPLATE 1097 . 1105) (semantic-list 2075 . 2088) (symbol 2054 . 2075) (number 2076 . 2077) (TEMPLATE 1959 . 1967) (punctuation 1958 . 1959) (punctuation 1957 . 1958) (punctuation 1947 . 1948) (symbol 1942 . 1946) (punctuation 1941 . 1942) (punctuation 1940 . 1941) (punctuation 1939 . 1940) (symbol 1934 . 1939) (punctuation 1933 . 1934) (symbol 1930 . 1933) (TYPENAME 1921 . 1929) (punctuation 1919 . 1920) (symbol 1906 . 1919) (punctuation 1904 . 1905) (symbol 1891 . 1899) (STRUCT 1884 . 1890) (punctuation 1882 . 1883) (semantic-list 1871 . 1877) (symbol 1849 . 1871) (TYPENAME 1840 . 1848) (punctuation 1838 . 1839) (semantic-list 1826 . 1833) (symbol 1804 . 1826) (TYPENAME 1795 . 1803) (punctuation 1787 . 1788) (TEMPLATE 1779 . 1787) (punctuation 1776 . 1777) (semantic-list 1367 . 1776) (punctuation 1361 . 1362) (symbol 1356 . 1360) (punctuation 1355 . 1356) (punctuation 1354 . 1355) (punctuation 1353 . 1354) (punctuation 1339 . 1340) (punctuation 1338 . 1339) (symbol 1334 . 1338) (punctuation 1332 . 1333) (punctuation 1318 . 1319) (number 1317 . 1318) (punctuation 1316 . 1317) (symbol 1311 . 1316) (punctuation 1310 . 1311) (punctuation 1309 . 1310) (symbol 1306 . 1309) (punctuation 1304 . 1305) (punctuation 1290 . 1291) (symbol 1286 . 1290) (punctuation 1285 . 1286) (symbol 1280 . 1285) (punctuation 1279 . 1280) (symbol 1265 . 1279) (punctuation 1249 . 1250) (symbol 1240 . 1249) (TYPENAME 1231 . 1239) (punctuation 1229 . 1230) (symbol 1216 . 1229) (punctuation 1215 . 1216) (punctuation 1214 . 1215) (symbol 1211 . 1214) (punctuation 1209 . 1210) (symbol 1146 . 1151) (STRUCT 1139 . 1145) (punctuation 1137 . 1138) (symbol 1132 . 1136) (TYPENAME 1123 . 1131) (punctuation 1121 . 1122) (symbol 1116 . 1121) (TYPENAME 1107 . 1115) (punctuation 1105 . 1106) (TEMPLATE 1097 . 1105) (punctuation 1068 . 1069) (symbol 1064 . 1067) (TYPENAME 1055 . 1063) (punctuation 1053 . 1054) (TEMPLATE 1045 . 1053) (semantic-list 2075 . 2088) (symbol 2054 . 2075) (number 2076 . 2077) (TEMPLATE 1959 . 1967) (punctuation 1958 . 1959) (punctuation 1957 . 1958) (punctuation 1947 . 1948) (symbol 1942 . 1946) (punctuation 1941 . 1942) (punctuation 1940 . 1941) (punctuation 1939 . 1940) (symbol 1934 . 1939) (punctuation 1933 . 1934) (symbol 1930 . 1933) (TYPENAME 1921 . 1929) (punctuation 1919 . 1920) (symbol 1906 . 1919) (punctuation 1904 . 1905) (symbol 1891 . 1899) (STRUCT 1884 . 1890) (punctuation 1882 . 1883) (semantic-list 1871 . 1877) (symbol 1849 . 1871) (TYPENAME 1840 . 1848) (punctuation 1838 . 1839) (semantic-list 1826 . 1833) (symbol 1804 . 1826) (TYPENAME 1795 . 1803) (punctuation 1787 . 1788) (TEMPLATE 1779 . 1787) (punctuation 1776 . 1777) (semantic-list 1367 . 1776) (punctuation 1361 . 1362) (symbol 1356 . 1360) (punctuation 1355 . 1356) (punctuation 1354 . 1355) (punctuation 1353 . 1354) (punctuation 1339 . 1340) (punctuation 1338 . 1339) (symbol 1334 . 1338) (punctuation 1332 . 1333) (punctuation 1318 . 1319) (number 1317 . 1318) (punctuation 1316 . 1317) (symbol 1311 . 1316) (punctuation 1310 . 1311) (punctuation 1309 . 1310) (symbol 1306 . 1309) (punctuation 1304 . 1305) (punctuation 1290 . 1291) (symbol 1286 . 1290) (punctuation 1285 . 1286) (symbol 1280 . 1285) (punctuation 1279 . 1280) (symbol 1265 . 1279) (punctuation 1249 . 1250) (symbol 1240 . 1249) (TYPENAME 1231 . 1239) (punctuation 1229 . 1230) (symbol 1216 . 1229) (punctuation 1215 . 1216) (punctuation 1214 . 1215) (symbol 1211 . 1214) (punctuation 1209 . 1210) (symbol 1146 . 1151) (STRUCT 1139 . 1145) (punctuation 1137 . 1138) (symbol 1132 . 1136) (TYPENAME 1123 . 1131) (punctuation 1121 . 1122) (symbol 1116 . 1121) (TYPENAME 1107 . 1115) (punctuation 1105 . 1106) (TEMPLATE 1097 . 1105) (semantic-list 2075 . 2088) (symbol 2054 . 2075) (number 2076 . 2077) (TEMPLATE 1959 . 1967) (punctuation 1958 . 1959) (punctuation 1957 . 1958) (punctuation 1947 . 1948) (symbol 1942 . 1946) (punctuation 1941 . 1942) (punctuation 1940 . 1941) (punctuation 1939 . 1940) (symbol 1934 . 1939) (punctuation 1933 . 1934) (symbol 1930 . 1933) (TYPENAME 1921 . 1929) (punctuation 1919 . 1920) (symbol 1906 . 1919) (punctuation 1904 . 1905) (symbol 1891 . 1899) (STRUCT 1884 . 1890) (punctuation 1882 . 1883) (semantic-list 1871 . 1877) (symbol 1849 . 1871) (TYPENAME 1840 . 1848) (punctuation 1838 . 1839) (semantic-list 1826 . 1833) (symbol 1804 . 1826) (TYPENAME 1795 . 1803) (punctuation 1787 . 1788) (TEMPLATE 1779 . 1787) (punctuation 1776 . 1777) (semantic-list 1367 . 1776) (punctuation 1361 . 1362) (symbol 1356 . 1360) (punctuation 1355 . 1356) (punctuation 1354 . 1355) (punctuation 1353 . 1354) (punctuation 1339 . 1340) (punctuation 1338 . 1339) (symbol 1334 . 1338) (punctuation 1332 . 1333) (punctuation 1318 . 1319) (number 1317 . 1318) (punctuation 1316 . 1317) (symbol 1311 . 1316) (punctuation 1310 . 1311) (punctuation 1309 . 1310) (symbol 1306 . 1309) (punctuation 1304 . 1305) (punctuation 1290 . 1291) (symbol 1286 . 1290) (punctuation 1285 . 1286) (symbol 1280 . 1285) (punctuation 1279 . 1280) (symbol 1265 . 1279) (punctuation 1249 . 1250) (symbol 1240 . 1249) (TYPENAME 1231 . 1239) (punctuation 1229 . 1230) (symbol 1216 . 1229) (punctuation 1215 . 1216) (punctuation 1214 . 1215) (symbol 1211 . 1214) (punctuation 1209 . 1210) (symbol 1146 . 1151) (STRUCT 1139 . 1145) (punctuation 1137 . 1138) (symbol 1132 . 1136) (TYPENAME 1123 . 1131) (punctuation 1121 . 1122) (symbol 1116 . 1121) (TYPENAME 1107 . 1115) (punctuation 1105 . 1106) (TEMPLATE 1097 . 1105))
      :lexical-table 
        '(("BOOST_MPL_DISTANCE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_BIND_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [106 137])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [583 618])
            ("boost/mpl/aux_/config/bind.hpp" include (:system-flag t) nil [627 668])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [669 722])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [836 865])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [879 932]))          
      :file "bind_fwd.hpp"
      :pointmax 2601
      :fsize 2600
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 793 . 823) (symbol 786 . 793) (punctuation 785 . 786) (punctuation 783 . 784) (punctuation 782 . 783))
      :lexical-table 
        '(("BOOST_MPL_BIND_FWD_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "bind_fwd" 866 . 874) (punctuation "." 874 . 875) (symbol "hpp" 875 . 878)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_NEXT_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/next_prior.hpp" include (:system-flag t) nil [467 502]))          
      :file "next.hpp"
      :pointmax 542
      :fsize 541
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_NEXT_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_QUOTE_HPP_INCLUDED" variable (:constant-flag t) nil [103 131])
            ("boost/mpl/void.hpp" include (:system-flag t) nil [574 606])
            ("boost/mpl/aux_/has_type.hpp" include (:system-flag t) nil [607 648])
            ("boost/mpl/aux_/config/bcc.hpp" include (:system-flag t) nil [657 697])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [698 738])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1058 1111])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1222 1251])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1262 1315]))          
      :file "quote.hpp"
      :pointmax 3739
      :fsize 3738
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1179 . 1209) (symbol 1172 . 1179) (punctuation 1171 . 1172) (punctuation 1169 . 1170) (punctuation 1168 . 1169))
      :lexical-table 
        '(("BOOST_MPL_QUOTE_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "quote" 1252 . 1257) (punctuation "." 1257 . 1258) (symbol "hpp" 1258 . 1261)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_TIMES_HPP_INCLUDED" variable (:constant-flag t) nil [47 75])
            ("AUX778076_OP_NAME" variable (:constant-flag t) nil [483 500])
            ("AUX778076_OP_TOKEN" variable (:constant-flag t) nil [515 533])
            ("boost/mpl/aux_/arithmetic_op.hpp" include (:system-flag t) nil [536 579]))          
      :file "times.hpp"
      :pointmax 620
      :fsize 619
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("AUX778076_OP_NAME" . ((symbol "times" 501 . 506)))
          ("BOOST_MPL_TIMES_HPP_INCLUDED")
          ("AUX778076_OP_TOKEN" . ((punctuation "*" 534 . 535)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_BEGIN_END_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("begin_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [534 577])
                            ("end_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [578 619])
                            ("begin" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [621 664])
                            ("end" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [665 706]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [517 709]))                  
                :type "namespace")
                nil [499 710]))          
      :file "begin_end_fwd.hpp"
      :pointmax 759
      :fsize 758
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_BEGIN_END_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_SAME_AS_HPP_INCLUDED" variable (:constant-flag t) nil [49 79])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [481 509])
            ("boost/mpl/aux_/lambda_spec.hpp" include (:system-flag t) nil [510 551])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [552 599])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [601 641])
            ("boost" type
               (:members 
                  ( ("mpl" type (:type "namespace") (reparse-symbol namespacesubparts) [661 1231]))                  
                :type "namespace")
                nil [643 1231]))          
      :file "same_as.hpp"
      :pointmax 1231
      :fsize 1230
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 717 . 1188) (symbol 709 . 716) (STRUCT 702 . 708) (semantic-list 965 . 1187) (symbol 953 . 964) (STRUCT 946 . 952) (punctuation 1180 . 1181) (punctuation 1180 . 1181) (punctuation 944 . 945) (symbol 941 . 943) (TYPENAME 932 . 940) (punctuation 930 . 931) (TEMPLATE 922 . 930) (punctuation 1180 . 1181) (punctuation 1180 . 1181) (punctuation 916 . 917) (semantic-list 965 . 1187) (symbol 953 . 964) (STRUCT 946 . 952) (punctuation 1180 . 1181) (punctuation 1180 . 1181) (punctuation 944 . 945) (symbol 941 . 943) (TYPENAME 932 . 940) (punctuation 930 . 931) (TEMPLATE 922 . 930) (punctuation 1180 . 1181) (punctuation 1180 . 1181) (punctuation 916 . 917) (punctuation 700 . 701) (symbol 697 . 699) (TYPENAME 688 . 696) (punctuation 686 . 687) (TEMPLATE 678 . 686) (semantic-list 965 . 1187) (symbol 953 . 964) (STRUCT 946 . 952) (punctuation 1180 . 1181) (punctuation 1180 . 1181) (punctuation 944 . 945) (symbol 941 . 943) (TYPENAME 932 . 940) (punctuation 930 . 931) (TEMPLATE 922 . 930) (punctuation 1180 . 1181) (punctuation 1180 . 1181) (punctuation 916 . 917) (semantic-list 965 . 1187) (symbol 953 . 964) (STRUCT 946 . 952) (punctuation 1180 . 1181) (punctuation 1180 . 1181) (punctuation 944 . 945) (symbol 941 . 943) (TYPENAME 932 . 940) (punctuation 930 . 931) (TEMPLATE 922 . 930) (punctuation 1180 . 1181) (punctuation 1180 . 1181) (punctuation 916 . 917))
      :lexical-table 
        '(("BOOST_MPL_SAME_AS_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_VOID_HPP_INCLUDED" variable (:constant-flag t) nil [46 73])
            ("boost/mpl/void_fwd.hpp" include (:system-flag t) nil [472 505])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [506 535])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [536 573])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [574 615])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [616 663])
            ("void_" type
               (:members 
                  ( ("type" type
                       (:typedef ("void_" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [975 994]))                  
                :type "struct")
                nil [960 997])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("is_void_" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1077 1206])
                            ("is_void_" type
                               (:type "struct"
                                :superclasses 
                                  ( ("true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("void_" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1208 1330])
                            ("is_not_void_" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1332 1463])
                            ("is_not_void_" type
                               (:type "struct"
                                :superclasses 
                                  ( ("false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("void_" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1465 1593]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1060 1671]))                  
                :type "namespace")
                nil [1042 1672]))          
      :file "void.hpp"
      :pointmax 1712
      :fsize 1711
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1651 . 1668) (symbol 1630 . 1651) (number 1652 . 1653) (semantic-list 1616 . 1629) (symbol 1595 . 1616) (number 1617 . 1618) (symbol 999 . 1040) (symbol 665 . 705))
      :lexical-table 
        '(("BOOST_MPL_VOID_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_O1_SIZE_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [53 87])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("O1_size_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [528 573])
                            ("O1_size" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [574 619]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [511 622]))                  
                :type "namespace")
                nil [493 623]))          
      :file "O1_size_fwd.hpp"
      :pointmax 670
      :fsize 669
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_O1_SIZE_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_NEXT_PRIOR_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/aux_/common_name_wknd.hpp" include (:system-flag t) nil [490 536])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [537 574])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [575 619])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("next" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("T::next" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [807 837]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [789 885])
                            ("prior" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("T::prior" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [963 994]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [944 1043]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [639 1110]))                  
                :type "namespace")
                nil [621 1111]))          
      :file "next_prior.hpp"
      :pointmax 1157
      :fsize 1156
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1097 . 1107) (symbol 1076 . 1097) (number 1098 . 1099) (semantic-list 1066 . 1075) (symbol 1045 . 1066) (number 1067 . 1068) (semantic-list 1027 . 1040) (symbol 999 . 1027) (semantic-list 1036 . 1039) (number 1028 . 1029) (punctuation 942 . 943) (semantic-list 934 . 937) (symbol 912 . 934) (TYPENAME 903 . 911) (punctuation 895 . 896) (TEMPLATE 887 . 895) (semantic-list 870 . 882) (symbol 842 . 870) (semantic-list 878 . 881) (number 871 . 872) (punctuation 787 . 788) (semantic-list 779 . 782) (symbol 757 . 779) (TYPENAME 748 . 756) (punctuation 740 . 741) (TEMPLATE 732 . 740) (semantic-list 723 . 730) (symbol 693 . 723) (semantic-list 686 . 692) (symbol 656 . 686))
      :lexical-table 
        '(("BOOST_MPL_NEXT_PRIOR_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_INSERTER_HPP_INCLUDED" variable (:constant-flag t) nil [50 81])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("inserter" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("Operation" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("state" type
                                       (:typedef ("Sequence" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [644 670])
                                    ("operation" type
                                       (:typedef ("Operation" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [675 705]))                                  )
                                (reparse-symbol namespacesubparts) [557 708]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [540 711]))                  
                :type "namespace")
                nil [522 712]))          
      :file "inserter.hpp"
      :pointmax 756
      :fsize 755
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_INSERTER_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_PUSH_FRONT_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("push_front_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [537 585])
                            ("push_front" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [586 646]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [520 649]))                  
                :type "namespace")
                nil [502 650]))          
      :file "push_front_fwd.hpp"
      :pointmax 700
      :fsize 699
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_PUSH_FRONT_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_CLEAR_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("clear_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [522 565])
                            ("clear" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [566 609]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [505 612]))                  
                :type "namespace")
                nil [487 613]))          
      :file "clear_fwd.hpp"
      :pointmax 658
      :fsize 657
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_CLEAR_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_ADVANCE_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [53 87])
            ("boost/mpl/aux_/common_name_wknd.hpp" include (:system-flag t) nil [493 539])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("advance_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [617 662])
                            ("advance" type
                               (:template 
                                  ( ("Iterator" type (:type "class") nil nil)
                                    ("N" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [663 720]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [559 723]))                  
                :type "namespace")
                nil [541 724]))          
      :file "advance_fwd.hpp"
      :pointmax 771
      :fsize 770
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 606 . 615) (symbol 576 . 606))
      :lexical-table 
        '(("BOOST_MPL_ADVANCE_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_NEGATE_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/integral_c.hpp" include (:system-flag t) nil [478 513])
            ("boost/mpl/aux_/msvc_eti_base.hpp" include (:system-flag t) nil [514 557])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [558 595])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [596 640])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [641 681])
            ("boost/mpl/aux_/config/integral.hpp" include (:system-flag t) nil [682 727])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [728 780])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("negate_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [817 861])
                            ("negate_tag" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T::tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [910 939]))                                  )
                                (reparse-symbol namespacesubparts) [863 942])
                            ("apply::type" variable (:type "int") (reparse-symbol namespacesubparts) [1134 1353])
                            ("negate_impl" type
                               (:type "struct"
                                :template-specifier 
                                  ( ("integral_c_tag" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1602 1939]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [800 1942]))                  
                :type "namespace")
                nil [782 1943]))          
      :file "negate.hpp"
      :pointmax 1985
      :fsize 1984
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((punctuation 1935 . 1936) (semantic-list 1928 . 1935) (punctuation 1911 . 1912) (semantic-list 1899 . 1910) (punctuation 1897 . 1898) (symbol 1887 . 1897) (punctuation 1886 . 1887) (punctuation 1885 . 1886) (symbol 1884 . 1885) (TYPENAME 1875 . 1883) (punctuation 1873 . 1874) (symbol 1863 . 1873) (punctuation 1861 . 1862) (symbol 1847 . 1852) (STRUCT 1840 . 1846) (punctuation 1838 . 1839) (symbol 1836 . 1837) (TYPENAME 1827 . 1835) (punctuation 1825 . 1826) (TEMPLATE 1817 . 1825) (semantic-list 1376 . 1387) (symbol 1355 . 1376) (number 1377 . 1378) (TEMPLATE 1125 . 1133) (punctuation 1124 . 1125) (punctuation 1123 . 1124) (punctuation 1122 . 1123) (symbol 1109 . 1113) (punctuation 1108 . 1109) (punctuation 1107 . 1108) (punctuation 1106 . 1107) (symbol 1105 . 1106) (punctuation 1104 . 1105) (symbol 1094 . 1104) (TYPENAME 1085 . 1093) (punctuation 1073 . 1074) (symbol 1062 . 1073) (punctuation 1060 . 1061) (symbol 1008 . 1014) (STRUCT 1001 . 1007) (punctuation 999 . 1000) (semantic-list 991 . 994) (symbol 969 . 991) (TYPENAME 960 . 968) (punctuation 952 . 953) (TEMPLATE 944 . 952))
      :lexical-table 
        '(("BOOST_MPL_NEGATE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_TAG_HPP_INCLUDED" variable (:constant-flag t) nil [45 71])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [464 496])
            ("boost/mpl/void.hpp" include (:system-flag t) nil [497 526])
            ("boost/mpl/aux_/has_tag.hpp" include (:system-flag t) nil [527 564])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [565 605])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("tag_impl" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T::tag" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [703 732]))                                          )
                                        (reparse-symbol namespacesubparts) [658 735]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [642 737]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [625 1087]))                  
                :type "namespace")
                nil [607 1126]))          
      :file "tag.hpp"
      :pointmax 1126
      :fsize 1125
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 939 . 1086) (symbol 934 . 938) (punctuation 933 . 934) (punctuation 932 . 933) (punctuation 931 . 932) (symbol 915 . 922) (punctuation 913 . 914) (punctuation 903 . 904) (symbol 902 . 903) (punctuation 901 . 902) (symbol 893 . 901) (punctuation 892 . 893) (punctuation 891 . 892) (symbol 888 . 891) (punctuation 886 . 887) (punctuation 876 . 877) (symbol 875 . 876) (punctuation 874 . 875) (symbol 867 . 874) (punctuation 866 . 867) (punctuation 865 . 866) (symbol 862 . 865) (punctuation 849 . 850) (symbol 846 . 849) (punctuation 844 . 845) (symbol 795 . 798) (STRUCT 788 . 794) (punctuation 1082 . 1083) (punctuation 1082 . 1083) (punctuation 786 . 787) (symbol 780 . 785) (punctuation 778 . 779) (symbol 770 . 777) (TYPENAME 761 . 769) (punctuation 759 . 760) (symbol 758 . 759) (TYPENAME 749 . 757) (punctuation 747 . 748) (TEMPLATE 739 . 747) (punctuation 1082 . 1083) (punctuation 1082 . 1083))
      :lexical-table 
        '(("BOOST_MPL_TAG_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_DISTANCE_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/aux_/common_name_wknd.hpp" include (:system-flag t) nil [496 542])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("distance_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [621 667])
                            ("distance" type
                               (:template 
                                  ( ("First" type (:type "class") nil nil)
                                    ("Last" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [668 726]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [562 729]))                  
                :type "namespace")
                nil [544 730]))          
      :file "distance_fwd.hpp"
      :pointmax 778
      :fsize 777
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 609 . 619) (symbol 579 . 609))
      :lexical-table 
        '(("BOOST_MPL_DISTANCE_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_ITER_FOLD_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [525 559])
            ("boost/mpl/O1_size.hpp" include (:system-flag t) nil [560 592])
            ("boost/mpl/lambda.hpp" include (:system-flag t) nil [593 624])
            ("boost/mpl/aux_/iter_fold_impl.hpp" include (:system-flag t) nil [625 669])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [670 707])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [708 752])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("iter_fold" type
                               (:members 
                                  ( ("type" variable (:type ("state" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1207 1218]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [947 1295]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [772 1335]))                  
                :type "namespace")
                nil [754 1336]))          
      :file "iter_fold.hpp"
      :pointmax 1381
      :fsize 1380
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 1318 . 1332) (symbol 1297 . 1318) (number 1319 . 1320) (semantic-list 1252 . 1292) (symbol 1224 . 1252) (semantic-list 1265 . 1291) (number 1253 . 1254) (punctuation 1206 . 1207) (punctuation 1205 . 1206) (punctuation 1204 . 1205) (symbol 1191 . 1195) (punctuation 1190 . 1191) (punctuation 1189 . 1190) (punctuation 1188 . 1189) (symbol 1179 . 1188) (punctuation 1178 . 1179) (symbol 1172 . 1178) (TYPENAME 1163 . 1171) (punctuation 1161 . 1162) (symbol 1147 . 1152) (punctuation 1145 . 1146) (symbol 1132 . 1136) (punctuation 1131 . 1132) (punctuation 1130 . 1131) (punctuation 1129 . 1130) (symbol 1121 . 1129) (punctuation 1120 . 1121) (symbol 1117 . 1120) (TYPENAME 1108 . 1116) (punctuation 1106 . 1107) (symbol 1093 . 1097) (punctuation 1092 . 1093) (punctuation 1091 . 1092) (punctuation 1090 . 1091) (symbol 1082 . 1090) (punctuation 1081 . 1082) (symbol 1076 . 1081) (TYPENAME 1067 . 1075) (punctuation 1065 . 1066) (symbol 1051 . 1056) (punctuation 1050 . 1051) (punctuation 1049 . 1050) (punctuation 1048 . 1049) (symbol 1040 . 1048) (punctuation 1039 . 1040) (symbol 1032 . 1039) (punctuation 1031 . 1032) (punctuation 1030 . 1031) (symbol 1027 . 1030) (punctuation 1026 . 1027) (punctuation 1025 . 1026) (symbol 1020 . 1025) (punctuation 1019 . 1020) (punctuation 1018 . 1019) (punctuation 1006 . 1007) (symbol 992 . 1006) (punctuation 991 . 992) (punctuation 990 . 991) (symbol 987 . 990) (TYPENAME 978 . 986) (TYPEDEF 970 . 977) (punctuation 945 . 946) (semantic-list 929 . 940) (symbol 907 . 929) (TYPENAME 898 . 906) (punctuation 896 . 897) (semantic-list 884 . 891) (symbol 862 . 884) (TYPENAME 853 . 861) (punctuation 851 . 852) (semantic-list 836 . 846) (symbol 814 . 836) (TYPENAME 805 . 813) (punctuation 797 . 798) (TEMPLATE 789 . 797))
      :lexical-table 
        '(("BOOST_MPL_ITER_FOLD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_ITERATOR_RANGE_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [502 539])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [540 584])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("iterator_range_tag" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [621 647])
                            ("iterator_range" type
                               (:members 
                                  ( ("tag" type
                                       (:typedef ("iterator_range_tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [782 813])
                                    ("type" type
                                       (:typedef ("iterator_range" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [818 846])
                                    ("begin" type
                                       (:typedef ("First" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [851 871])
                                    ("end" type
                                       (:typedef ("Last" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [876 893]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [754 961]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [604 1006]))                  
                :type "namespace")
                nil [586 1007]))          
      :file "iterator_range.hpp"
      :pointmax 1057
      :fsize 1056
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 984 . 1003) (symbol 963 . 984) (number 985 . 986) (semantic-list 927 . 958) (symbol 899 . 927) (semantic-list 945 . 957) (number 928 . 929) (punctuation 752 . 753) (semantic-list 741 . 747) (symbol 719 . 741) (TYPENAME 710 . 718) (punctuation 708 . 709) (semantic-list 696 . 703) (symbol 674 . 696) (TYPENAME 665 . 673) (punctuation 657 . 658) (TEMPLATE 649 . 657))
      :lexical-table 
        '(("BOOST_MPL_ITERATOR_RANGE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_NUMERIC_CAST_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [494 535])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [536 583])
            ("BOOST_MPL_AUX_NUMERIC_CAST" variable (:constant-flag t) nil [991 1017])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("numeric_cast" type
                               (:template 
                                  ( ("SourceTag" type (:type "class") nil nil)
                                    ("TargetTag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("N" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol classsubparts) [1240 1276]))                                  )
                                (reparse-symbol namespacesubparts) [1149 1279]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1057 1282]))                  
                :type "namespace")
                nil [1039 1283]))          
      :file "numeric_cast.hpp"
      :pointmax 1331
      :fsize 1330
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_NUMERIC_CAST" . ((symbol "numeric_cast" 1018 . 1030)))
          ("BOOST_MPL_NUMERIC_CAST_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_SIZE_T_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/size_t_fwd.hpp" include (:system-flag t) nil [478 513])
            ("AUX_WRAPPER_VALUE_TYPE" variable (:constant-flag t) nil [523 545])
            ("AUX_WRAPPER_NAME" variable (:constant-flag t) nil [566 582])
            ("AUX_WRAPPER_PARAMS" variable (:constant-flag t) nil [598 616])
            ("boost/mpl/aux_/integral_wrapper.hpp" include (:system-flag t) nil [635 681]))          
      :file "size_t.hpp"
      :pointmax 723
      :fsize 722
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("AUX_WRAPPER_VALUE_TYPE" . 
              ((symbol "std" 546 . 549) (punctuation ":" 549 . 550) (punctuation ":" 550 . 551) (symbol "size_t" 551 . 557)))
          ("AUX_WRAPPER_PARAMS" (spp-arg-list ("N") 616 . 619) . 
              ((symbol "std" 620 . 623) (punctuation ":" 623 . 624) (punctuation ":" 624 . 625) (symbol "size_t" 625 . 631) (symbol "N" 632 . 633)))
          ("BOOST_MPL_SIZE_T_HPP_INCLUDED")
          ("AUX_WRAPPER_NAME" . ((symbol "size_t" 583 . 589)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_PRIOR_HPP_INCLUDED" variable (:constant-flag t) nil [47 75])
            ("boost/mpl/next_prior.hpp" include (:system-flag t) nil [470 505]))          
      :file "prior.hpp"
      :pointmax 546
      :fsize 545
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_PRIOR_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_SIZE_T_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [490 531])
            ("boost/config.hpp" include (:system-flag t) nil [532 559])
            ("cstddef" include (:system-flag t) nil [603 621])
            ("size_t" type
               (:template 
                  ( ("std::size_t" type (:typevar "N") nil nil))                  
                :type "struct"
                :prototype t)
                nil [665 705]))          
      :file "size_t_fwd.hpp"
      :pointmax 833
      :fsize 832
      :lastmodtime '(21413 1115 0 0)
      :unmatched-syntax '((semantic-list 779 . 787) (symbol 749 . 779) (symbol 707 . 748) (symbol 623 . 663))
      :lexical-table 
        '(("BOOST_MPL_SIZE_T_FWD_HPP_INCLUDED")
          )
))
  :file "!usr!include!boost!mpl!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
