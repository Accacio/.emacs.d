;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_VALUE_WKND_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/aux_/static_cast.hpp" include (:system-flag t) nil [498 539])
            ("boost/mpl/aux_/config/integral.hpp" include (:system-flag t) nil [540 585])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [586 626])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [627 674])
            ("BOOST_MPL_AUX_VALUE_WKND" variable (:constant-flag t) nil [1484 1508])
            ("BOOST_MPL_AUX_MSVC_VALUE_WKND" variable (:constant-flag t) nil [1525 1554])
            ("BOOST_MPL_AUX_NESTED_VALUE_WKND" variable (:constant-flag t) nil [1733 1764])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("value_type_wknd" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T::value_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1931 1967]))                                          )
                                        (reparse-symbol namespacesubparts) [1879 1970]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1862 2087]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1846 2088]))                  
                :type "namespace")
                nil [1828 2089]))          
      :file "value_wknd.hpp"
      :pointmax 2139
      :fsize 2138
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_MSVC_VALUE_WKND" (spp-arg-list ("C") 1554 . 1557) . ((symbol "C" 1558 . 1559)))
          ("BOOST_MPL_AUX_NESTED_VALUE_WKND" (spp-arg-list ("T" "C") 1764 . 1770) . 
              ((symbol "BOOST_MPL_AUX_VALUE_WKND" 1777 . 1801) (semantic-list "(C)" 1801 . 1804) (punctuation ":" 1804 . 1805) (punctuation ":" 1805 . 1806) (symbol "value" 1806 . 1811)))
          ("BOOST_MPL_AUX_VALUE_WKND_HPP_INCLUDED")
          ("BOOST_MPL_AUX_VALUE_WKND" (spp-arg-list ("C") 1508 . 1511) . ((symbol "C" 1512 . 1513)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_STATIC_CAST_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [501 548])
            ("BOOST_MPL_AUX_STATIC_CAST" variable (:constant-flag t) nil [766 791]))          
      :file "static_cast.hpp"
      :pointmax 879
      :fsize 878
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_STATIC_CAST" (spp-arg-list ("T" "expr") 791 . 800) . 
              ((symbol "static_cast" 801 . 812) (punctuation "<" 812 . 813) (symbol "T" 813 . 814) (punctuation ">" 814 . 815) (semantic-list "(expr)" 815 . 821)))
          ("BOOST_MPL_AUX_STATIC_CAST_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_NA_SPEC_HPP_INCLUDED" variable (:constant-flag t) nil [53 87])
            ("boost/mpl/lambda_fwd.hpp" include (:system-flag t) nil [532 570])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [571 602])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [603 635])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [636 671])
            ("boost/mpl/aux_/arity.hpp" include (:system-flag t) nil [672 710])
            ("boost/mpl/aux_/template_arity_fwd.hpp" include (:system-flag t) nil [711 762])
            ("boost/mpl/aux_/preprocessor/params.hpp" include (:system-flag t) nil [771 820])
            ("boost/mpl/aux_/preprocessor/enum.hpp" include (:system-flag t) nil [821 868])
            ("boost/mpl/aux_/preprocessor/def_params_tail.hpp" include (:system-flag t) nil [869 927])
            ("boost/mpl/aux_/lambda_arity_param.hpp" include (:system-flag t) nil [928 976])
            ("boost/mpl/aux_/config/dtp.hpp" include (:system-flag t) nil [977 1017])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [1018 1058])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [1059 1098])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [1099 1139])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [1140 1183])
            ("boost/mpl/aux_/config/overload_resolution.hpp" include (:system-flag t) nil [1184 1240])
            ("BOOST_MPL_AUX_NA_PARAMS" variable (:constant-flag t) nil [1251 1274])
            ("BOOST_MPL_AUX_NA_SPEC_ARITY" variable (:constant-flag t) nil [1679 1706])
            ("BOOST_MPL_AUX_NA_SPEC_MAIN" variable (:constant-flag t) nil [1737 1763])
            ("BOOST_MPL_AUX_NA_SPEC_LAMBDA" variable (:constant-flag t) nil [2595 2623])
            ("BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY" variable (:constant-flag t) nil [3523 3559])
            ("BOOST_MPL_AUX_NA_SPEC_ETI" variable (:constant-flag t) nil [3810 3835])
            ("BOOST_MPL_AUX_NA_PARAM" variable (:constant-flag t) nil [3866 3888])
            ("BOOST_MPL_AUX_NA_SPEC_NO_ETI" variable (:constant-flag t) nil [3916 3944])
            ("BOOST_MPL_AUX_NA_SPEC" variable (:constant-flag t) nil [4138 4159])
            ("BOOST_MPL_AUX_NA_SPEC2" variable (:constant-flag t) nil [4262 4284]))          
      :file "na_spec.hpp"
      :pointmax 4556
      :fsize 4555
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_NA_SPEC_ARITY" (spp-arg-list ("i" "name") 1706 . 1715))
          ("BOOST_MPL_AUX_NA_SPEC_MAIN" (spp-arg-list ("i" "name") 1763 . 1772) . 
              ((TEMPLATE "template" 1775 . 1783) (punctuation "<" 1783 . 1784) (punctuation ">" 1784 . 1785) (STRUCT "struct" 1788 . 1794) (symbol "name" 1795 . 1799) (punctuation "<" 1799 . 1800) (symbol "BOOST_MPL_AUX_NA_PARAMS" 1801 . 1824) (semantic-list "(i)" 1824 . 1827) (punctuation ">" 1828 . 1829) (semantic-list "{ \\
    template< \\
          BOOST_MPL_PP_PARAMS(i, typename T) \\
        BOOST_MPL_PP_NESTED_DEF_PARAMS_TAIL(i, typename T, na) \\
        > \\
    struct apply \\
        : name< BOOST_MPL_PP_PARAMS(i, T) > \\
    { \\
    }; \\
}" 1832 . 2059) (punctuation ";" 2059 . 2060)))
          ("BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY" (spp-arg-list ("i" "j" "name") 3559 . 3571))
          ("BOOST_MPL_AUX_NA_SPEC_LAMBDA" (spp-arg-list ("i" "name") 2623 . 2632) . 
              ((TEMPLATE "template" 2635 . 2643) (punctuation "<" 2643 . 2644) (TYPENAME "typename" 2645 . 2653) (symbol "Tag" 2654 . 2657) (punctuation ">" 2658 . 2659) (STRUCT "struct" 2662 . 2668) (symbol "lambda" 2669 . 2675) (punctuation "<" 2675 . 2676) (symbol "name" 2685 . 2689) (punctuation "<" 2689 . 2690) (symbol "BOOST_MPL_AUX_NA_PARAMS" 2691 . 2714) (semantic-list "(i)" 2714 . 2717) (punctuation ">" 2718 . 2719) (punctuation "," 2726 . 2727) (symbol "Tag" 2728 . 2731) (symbol "BOOST_MPL_AUX_LAMBDA_ARITY_PARAM" 2738 . 2770) (semantic-list "(int_<-1>)" 2770 . 2780) (punctuation ">" 2787 . 2788) (semantic-list "{ \\
    typedef false_ is_le; \\
    typedef name< BOOST_MPL_AUX_NA_PARAMS(i) > result_; \\
    typedef name< BOOST_MPL_AUX_NA_PARAMS(i) > type; \\
}" 2791 . 2937) (punctuation ";" 2937 . 2938)))
          ("BOOST_MPL_AUX_NA_SPEC_HPP_INCLUDED")
          ("BOOST_MPL_AUX_NA_SPEC" (spp-arg-list ("i" "name") 4159 . 4168) . 
              ((symbol "BOOST_MPL_AUX_NA_SPEC_NO_ETI" 4171 . 4199) (semantic-list "(i, name)" 4199 . 4208) (symbol "BOOST_MPL_AUX_NA_SPEC_ETI" 4211 . 4236) (semantic-list "(i, name)" 4236 . 4245)))
          ("BOOST_MPL_AUX_NA_PARAM" (spp-arg-list ("param") 3888 . 3895) . 
              ((symbol "param" 3896 . 3901) (punctuation "=" 3902 . 3903) (symbol "na" 3904 . 3906)))
          ("BOOST_MPL_AUX_NA_SPEC_ETI" (spp-arg-list ("i" "name") 3835 . 3844))
          ("BOOST_MPL_AUX_NA_SPEC_NO_ETI" (spp-arg-list ("i" "name") 3944 . 3953) . 
              ((symbol "BOOST_MPL_AUX_NA_SPEC_MAIN" 3956 . 3982) (semantic-list "(i, name)" 3982 . 3991) (symbol "BOOST_MPL_AUX_NA_SPEC_LAMBDA" 3994 . 4022) (semantic-list "(i, name)" 4022 . 4031) (symbol "BOOST_MPL_AUX_NA_SPEC_ARITY" 4034 . 4061) (semantic-list "(i, name)" 4061 . 4070) (symbol "BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY" 4073 . 4109) (semantic-list "(i, i, name)" 4109 . 4121)))
          ("BOOST_MPL_AUX_NA_SPEC2" (spp-arg-list ("i" "j" "name") 4284 . 4296) . 
              ((symbol "BOOST_MPL_AUX_NA_SPEC_MAIN" 4299 . 4325) (semantic-list "(i, name)" 4325 . 4334) (symbol "BOOST_MPL_AUX_NA_SPEC_ETI" 4337 . 4362) (semantic-list "(i, name)" 4362 . 4371) (symbol "BOOST_MPL_AUX_NA_SPEC_LAMBDA" 4374 . 4402) (semantic-list "(i, name)" 4402 . 4411) (symbol "BOOST_MPL_AUX_NA_SPEC_ARITY" 4414 . 4441) (semantic-list "(i, name)" 4441 . 4450) (symbol "BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY" 4453 . 4489) (semantic-list "(i, j, name)" 4489 . 4501)))
          ("BOOST_MPL_AUX_NA_PARAMS" (spp-arg-list ("i") 1274 . 1277) . ((symbol "BOOST_MPL_PP_ENUM" 1284 . 1301) (semantic-list "(i, na)" 1301 . 1308)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_LAMBDA_SUPPORT_HPP_INCLUDED" variable (:constant-flag t) nil [60 101])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [510 553])
            ("BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC" variable (:constant-flag t) nil [618 651])
            ("BOOST_MPL_AUX_LAMBDA_SUPPORT" variable (:constant-flag t) nil [685 713]))          
      :file "lambda_support.hpp"
      :pointmax 5474
      :fsize 5473
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_LAMBDA_SUPPORT" (spp-arg-list ("i" "name" "params") 713 . 728))
          ("BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC" (spp-arg-list ("i" "name" "params") 651 . 668))
          ("BOOST_MPL_AUX_LAMBDA_SUPPORT_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_NESTED_TYPE_WKND_HPP_INCLUDED" variable (:constant-flag t) nil [62 105])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [516 556])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [557 604])
            ("BOOST_MPL_AUX_NESTED_TYPE_WKND" variable (:constant-flag t) nil [1274 1304]))          
      :file "nested_type_wknd.hpp"
      :pointmax 1380
      :fsize 1379
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_NESTED_TYPE_WKND" (spp-arg-list ("T") 1304 . 1307) . 
              ((symbol "T" 1308 . 1309) (punctuation ":" 1309 . 1310) (punctuation ":" 1310 . 1311) (symbol "type" 1311 . 1315)))
          ("BOOST_MPL_AUX_NESTED_TYPE_WKND_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_YES_NO_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [486 525])
            ("boost/mpl/aux_/config/arrays.hpp" include (:system-flag t) nil [526 569])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [570 611])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [612 659])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("yes_no_tag" type
                                       (:template 
                                          ( ("bool" type (:typevar "C_") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("no_tag" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [813 833]))                                          )
                                        (reparse-symbol namespacesubparts) [769 836])
                                    ("yes_no_tag" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("yes_tag" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [879 900]))                                          
                                        :template-specifier 
                                          ( ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [838 903])
                                    ("weighted_tag" type (:type "struct") (reparse-symbol namespacesubparts) [951 1107]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [696 1238]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [680 1239]))                  
                :type "namespace")
                nil [662 1240]))          
      :file "yes_no.hpp"
      :pointmax 1286
      :fsize 1285
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((punctuation 1042 . 1043) (semantic-list 1039 . 1042) (semantic-list 1032 . 1039) (CHAR 1027 . 1031) (TYPEDEF 1019 . 1026) (punctuation 949 . 950) (semantic-list 939 . 948) (symbol 916 . 939) (punctuation 914 . 915) (TEMPLATE 906 . 914) (punctuation 766 . 767) (semantic-list 763 . 766) (semantic-list 753 . 763) (CHAR 748 . 752) (TYPEDEF 740 . 747) (punctuation 738 . 739) (semantic-list 735 . 738) (semantic-list 726 . 735) (CHAR 721 . 725) (TYPEDEF 713 . 720))
      :lexical-table 
        '(("BOOST_MPL_AUX_YES_NO_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_NA_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [474 503])
            ("boost/mpl/aux_/na_fwd.hpp" include (:system-flag t) nil [504 540])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [541 582])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [583 624])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("is_na" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [661 787])
                            ("is_na" type
                               (:type "struct"
                                :superclasses 
                                  ( ("true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("na" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [789 905])
                            ("is_not_na" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [907 1035])
                            ("is_not_na" type
                               (:type "struct"
                                :superclasses 
                                  ( ("false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("na" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1037 1159])
                            ("if_na" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1270 1285]))                                  )
                                (reparse-symbol namespacesubparts) [1216 1288])
                            ("if_na" type
                               (:template 
                                  ( ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1338 1353]))                                  
                                :template-specifier 
                                  ( ("na" type nil nil nil)
                                    ("U" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1290 1356]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [644 1704]))                  
                :type "namespace")
                nil [626 1705]))          
      :file "na.hpp"
      :pointmax 1747
      :fsize 1746
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_NA_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_ADL_BARRIER_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/mpl/aux_/config/adl.hpp" include (:system-flag t) nil [501 541])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [542 582])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [583 630])
            ("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE" variable (:constant-flag t) nil [697 732])
            ("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN" variable (:constant-flag t) nil [749 789])
            ("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE" variable (:constant-flag t) nil [818 859])
            ("BOOST_MPL_AUX_ADL_BARRIER_DECL" variable (:constant-flag t) nil [873 903])
            ("mpl_" type
               (:members 
                  ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [1116 1132]))                  
                :type "namespace")
                nil [1068 1134])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("mpl_" using (:type ("mpl_" type
                                 (:prototype t
                                  :type "namespace")
                                  nil nil)) (reparse-symbol namespacesubparts) [1169 1221])
                            ("aux" type
                               (:members 
                                  ( ("mpl_::aux" using (:type ("mpl_::aux" type
                                         (:prototype t
                                          :type "namespace")
                                          nil nil)) (reparse-symbol namespacesubparts) [1239 1296]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1223 1298]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1153 1300]))                  
                :type "namespace")
                nil [1135 1301]))          
      :file "adl_barrier.hpp"
      :pointmax 1670
      :fsize 1669
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE" . ((symbol "mpl_" 733 . 737)))
          ("BOOST_MPL_AUX_ADL_BARRIER_HPP_INCLUDED")
          ("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE" . ((close-paren "}" 860 . 861)))
          ("BOOST_MPL_AUX_ADL_BARRIER_DECL" (spp-arg-list ("type") 903 . 909) . 
              ((NAMESPACE "namespace" 916 . 925) (symbol "boost" 926 . 931) (semantic-list "{ namespace mpl { \\
    using ::BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE::type; \\
    } }" 932 . 1016)))
          ("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN" . 
              ((NAMESPACE "namespace" 790 . 799) (symbol "mpl_" 800 . 804) (open-paren "{" 805 . 806)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_ARITY_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost/mpl/aux_/config/dtp.hpp" include (:system-flag t) nil [483 523]))          
      :file "arity.hpp"
      :pointmax 1200
      :fsize 1199
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_ARITY_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_TEMPLATE_ARITY_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [64 109])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("template_arity" type
                                       (:template 
                                          ( ("F" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [573 618]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [556 621]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [540 622]))                  
                :type "namespace")
                nil [522 623]))          
      :file "template_arity_fwd.hpp"
      :pointmax 681
      :fsize 680
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_TEMPLATE_ARITY_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_LAMBDA_ARITY_PARAM_HPP_INCLUDED" variable (:constant-flag t) nil [64 109])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [522 562])
            ("BOOST_MPL_AUX_LAMBDA_ARITY_PARAM" variable (:constant-flag t) nil [641 673]))          
      :file "lambda_arity_param.hpp"
      :pointmax 814
      :fsize 813
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_LAMBDA_ARITY_PARAM" (spp-arg-list ("param") 673 . 680))
          ("BOOST_MPL_AUX_LAMBDA_ARITY_PARAM_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_NTTP_DECL_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/aux_/config/nttp.hpp" include (:system-flag t) nil [495 536])
            ("BOOST_MPL_AUX_NTTP_DECL" variable (:constant-flag t) nil [858 881]))          
      :file "nttp_decl.hpp"
      :pointmax 953
      :fsize 952
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_NTTP_DECL" (spp-arg-list ("T" "x") 881 . 887) . ((symbol "T" 888 . 889) (symbol "x" 890 . 891)))
          ("BOOST_MPL_AUX_NTTP_DECL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_NA_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [486 527])
            ("na" type
               (:members 
                  ( ("type" type
                       (:typedef ("na" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [612 628])
                    ("" type
                       (:members 
                          ( ("value" variable
                               (:constant-flag t
                                :default-value (648 649)
                                :type "int")
                                (reparse-symbol enumsubparts) [640 649]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [633 652]))                  
                :type "struct")
                nil [596 655]))          
      :file "na_fwd.hpp"
      :pointmax 779
      :fsize 778
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 729 . 733) (symbol 699 . 729) (symbol 657 . 698) (symbol 529 . 569))
      :lexical-table 
        '(("BOOST_MPL_AUX_NA_FWD_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("boost/mpl/aux_/config/compiler.hpp" include (:system-flag t) nil [484 529])
            ("boost/mpl/aux_/config/preprocessor.hpp" include (:system-flag t) nil [530 579])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [580 627])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [628 665])
            ("boost/preprocessor/stringize.hpp" include (:system-flag t) nil [666 709])
            ("AUX778076_PREPROCESSED_HEADER" variable (:constant-flag t) nil [788 817]))          
      :file "include_preprocessed.hpp"
      :pointmax 1453
      :fsize 1452
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 1307 . 1366) (symbol 1289 . 1307) (punctuation 1335 . 1336) (punctuation 1322 . 1323) (punctuation 1317 . 1318) (punctuation 1313 . 1314) (symbol 1281 . 1288) (punctuation 1335 . 1336) (punctuation 1322 . 1323) (punctuation 1317 . 1318) (punctuation 1313 . 1314) (punctuation 1277 . 1278)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("boost/mpl/integral_c_tag.hpp" include (:system-flag t) nil [481 520])
            ("boost/mpl/aux_/static_cast.hpp" include (:system-flag t) nil [521 562])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [563 602])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [603 655])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [656 703])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [705 742])
            ("AUX_WRAPPER_NAME" variable (:constant-flag t) nil [786 802])
            ("AUX_WRAPPER_PARAMS" variable (:constant-flag t) nil [894 912])
            ("AUX_WRAPPER_INST" variable (:constant-flag t) nil [1143 1159])
            ("BOOST_PP_CAT" function
               (:arguments 
                  ( ("" variable (:type ("AUX_WRAPPER_VALUE_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                    ("" variable (:type ("_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                  
                :type "int")
                nil [1331 3317])
            ("value" variable (:type "int") nil [3457 3463]))          
      :file "integral_wrapper.hpp"
      :pointmax 3619
      :fsize 3618
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((symbol 3472 . 3513) (punctuation 3456 . 3457) (punctuation 3455 . 3456) (punctuation ">" 3436 . 3455) (symbol "N" 3436 . 3455) (punctuation "<" 3436 . 3455) (semantic-list "(AUX_WRAPPER_VALUE_TYPE,_)" 3436 . 3455) (symbol "BOOST_PP_CAT" 3436 . 3455) (punctuation ":" 3436 . 3455) (punctuation ":" 3436 . 3455) (symbol "BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE" 3436 . 3455) (CONST 3430 . 3435) (symbol 3407 . 3429) (punctuation 3405 . 3406) (semantic-list #("(AUX_WRAPPER_VALUE_TYPE, N)" 0 1 (macros (("N" symbol "N" 3402 . 3403)))) 3383 . 3404) (symbol "BOOST_MPL_AUX_NTTP_DECL" 3383 . 3404) (punctuation 3381 . 3382) (TEMPLATE 3373 . 3381) (punctuation 3317 . 3318) (STRUCT 1324 . 1330) (punctuation 1322 . 1323) (semantic-list #("(AUX_WRAPPER_VALUE_TYPE, N)" 0 1 (macros (("N" symbol "N" 1319 . 1320)))) 1300 . 1321) (symbol "BOOST_MPL_AUX_NTTP_DECL" 1300 . 1321) (punctuation 1298 . 1299) (TEMPLATE 1290 . 1298) (symbol 1248 . 1288)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_ARITY_SPEC_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [498 526])
            ("boost/mpl/limits/arity.hpp" include (:system-flag t) nil [527 564])
            ("boost/mpl/aux_/config/dtp.hpp" include (:system-flag t) nil [565 605])
            ("boost/mpl/aux_/preprocessor/params.hpp" include (:system-flag t) nil [606 655])
            ("boost/mpl/aux_/arity.hpp" include (:system-flag t) nil [656 691])
            ("boost/mpl/aux_/template_arity_fwd.hpp" include (:system-flag t) nil [692 740])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [741 781])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [782 825])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [826 878])
            ("BOOST_MPL_AUX_NONTYPE_ARITY_SPEC" variable (:constant-flag t) nil [1317 1349])
            ("BOOST_MPL_AUX_ARITY_SPEC" variable (:constant-flag t) nil [1387 1411])
            ("BOOST_MPL_AUX_TEMPLATE_ARITY_SPEC" variable (:constant-flag t) nil [1837 1870]))          
      :file "arity_spec.hpp"
      :pointmax 1942
      :fsize 1941
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_ARITY_SPEC" (spp-arg-list ("i" "name") 1411 . 1419) . ((symbol "BOOST_MPL_AUX_NONTYPE_ARITY_SPEC" 1426 . 1458) (semantic-list "(i,typename,name)" 1458 . 1475)))
          ("BOOST_MPL_AUX_TEMPLATE_ARITY_SPEC" (spp-arg-list ("i" "name") 1870 . 1879))
          ("BOOST_MPL_AUX_ARITY_SPEC_HPP_INCLUDED")
          ("BOOST_MPL_AUX_NONTYPE_ARITY_SPEC" (spp-arg-list ("i" "type" "name") 1349 . 1362))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_TYPE_WRAPPER_HPP_INCLUDED" variable (:constant-flag t) nil [58 97])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [539 580])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("type_wrapper" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [682 697]))                                          )
                                        (reparse-symbol namespacesubparts) [633 700])
                                    ("wrapped_type" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1009 1052])
                                    ("wrapped_type" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1122 1137]))                                          
                                        :template-specifier 
                                          ( ("type_wrapper" type (:template-specifier 
                                              ( ("T" type nil nil nil))                                              ) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1054 1140]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [616 1239]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [600 1240]))                  
                :type "namespace")
                nil [582 1241]))          
      :file "type_wrapper.hpp"
      :pointmax 1293
      :fsize 1292
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_TYPE_WRAPPER_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_CONTAINS_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [59 99])
            ("boost/mpl/contains_fwd.hpp" include (:system-flag t) nil [534 571])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [572 606])
            ("boost/mpl/find.hpp" include (:system-flag t) nil [607 636])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [637 665])
            ("boost/mpl/aux_/traits_lambda_spec.hpp" include (:system-flag t) nil [666 714])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [715 762])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [763 815])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [817 857])
            ("boost" type
               (:members 
                  ( ("mpl" type (:type "namespace") (reparse-symbol namespacesubparts) [877 1632]))                  
                :type "namespace")
                nil [859 1685]))          
      :file "contains_impl.hpp"
      :pointmax 1685
      :fsize 1684
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 940 . 1631) (symbol 926 . 939) (STRUCT 919 . 925) (semantic-list 1611 . 1628) (symbol 1574 . 1611) (number 1612 . 1613) (punctuation 1571 . 1572) (semantic-list 1184 . 1571) (punctuation 1178 . 1179) (punctuation 1176 . 1177) (symbol 1159 . 1163) (punctuation 1158 . 1159) (punctuation 1157 . 1158) (punctuation 1156 . 1157) (symbol 1148 . 1156) (punctuation 1147 . 1148) (symbol 1144 . 1147) (TYPENAME 1135 . 1143) (punctuation 1133 . 1134) (symbol 1116 . 1120) (punctuation 1115 . 1116) (punctuation 1114 . 1115) (punctuation 1113 . 1114) (symbol 1112 . 1113) (punctuation 1111 . 1112) (symbol 1103 . 1111) (punctuation 1102 . 1103) (symbol 1098 . 1102) (TYPENAME 1089 . 1097) (punctuation 1073 . 1074) (symbol 1066 . 1073) (punctuation 1064 . 1065) (symbol 1060 . 1064) (punctuation 1058 . 1059) (symbol 995 . 1000) (STRUCT 988 . 994) (punctuation 986 . 987) (symbol 984 . 985) (TYPENAME 975 . 983) (punctuation 973 . 974) (symbol 965 . 973) (TYPENAME 956 . 964) (punctuation 954 . 955) (TEMPLATE 946 . 954) (semantic-list 1611 . 1628) (symbol 1574 . 1611) (number 1612 . 1613) (punctuation 1571 . 1572) (semantic-list 1184 . 1571) (punctuation 1178 . 1179) (punctuation 1176 . 1177) (symbol 1159 . 1163) (punctuation 1158 . 1159) (punctuation 1157 . 1158) (punctuation 1156 . 1157) (symbol 1148 . 1156) (punctuation 1147 . 1148) (symbol 1144 . 1147) (TYPENAME 1135 . 1143) (punctuation 1133 . 1134) (symbol 1116 . 1120) (punctuation 1115 . 1116) (punctuation 1114 . 1115) (punctuation 1113 . 1114) (symbol 1112 . 1113) (punctuation 1111 . 1112) (symbol 1103 . 1111) (punctuation 1102 . 1103) (symbol 1098 . 1102) (TYPENAME 1089 . 1097) (punctuation 1073 . 1074) (symbol 1066 . 1073) (punctuation 1064 . 1065) (symbol 1060 . 1064) (punctuation 1058 . 1059) (symbol 995 . 1000) (STRUCT 988 . 994) (punctuation 986 . 987) (symbol 984 . 985) (TYPENAME 975 . 983) (punctuation 973 . 974) (symbol 965 . 973) (TYPENAME 956 . 964) (punctuation 954 . 955) (TEMPLATE 946 . 954) (punctuation 917 . 918) (symbol 913 . 916) (TYPENAME 904 . 912) (punctuation 902 . 903) (TEMPLATE 894 . 902) (semantic-list 1611 . 1628) (symbol 1574 . 1611) (number 1612 . 1613) (punctuation 1571 . 1572) (semantic-list 1184 . 1571) (punctuation 1178 . 1179) (punctuation 1176 . 1177) (symbol 1159 . 1163) (punctuation 1158 . 1159) (punctuation 1157 . 1158) (punctuation 1156 . 1157) (symbol 1148 . 1156) (punctuation 1147 . 1148) (symbol 1144 . 1147) (TYPENAME 1135 . 1143) (punctuation 1133 . 1134) (symbol 1116 . 1120) (punctuation 1115 . 1116) (punctuation 1114 . 1115) (punctuation 1113 . 1114) (symbol 1112 . 1113) (punctuation 1111 . 1112) (symbol 1103 . 1111) (punctuation 1102 . 1103) (symbol 1098 . 1102) (TYPENAME 1089 . 1097) (punctuation 1073 . 1074) (symbol 1066 . 1073) (punctuation 1064 . 1065) (symbol 1060 . 1064) (punctuation 1058 . 1059) (symbol 995 . 1000) (STRUCT 988 . 994) (punctuation 986 . 987) (symbol 984 . 985) (TYPENAME 975 . 983) (punctuation 973 . 974) (symbol 965 . 973) (TYPENAME 956 . 964) (punctuation 954 . 955) (TEMPLATE 946 . 954) (semantic-list 1611 . 1628) (symbol 1574 . 1611) (number 1612 . 1613) (punctuation 1571 . 1572) (semantic-list 1184 . 1571) (punctuation 1178 . 1179) (punctuation 1176 . 1177) (symbol 1159 . 1163) (punctuation 1158 . 1159) (punctuation 1157 . 1158) (punctuation 1156 . 1157) (symbol 1148 . 1156) (punctuation 1147 . 1148) (symbol 1144 . 1147) (TYPENAME 1135 . 1143) (punctuation 1133 . 1134) (symbol 1116 . 1120) (punctuation 1115 . 1116) (punctuation 1114 . 1115) (punctuation 1113 . 1114) (symbol 1112 . 1113) (punctuation 1111 . 1112) (symbol 1103 . 1111) (punctuation 1102 . 1103) (symbol 1098 . 1102) (TYPENAME 1089 . 1097) (punctuation 1073 . 1074) (symbol 1066 . 1073) (punctuation 1064 . 1065) (symbol 1060 . 1064) (punctuation 1058 . 1059) (symbol 995 . 1000) (STRUCT 988 . 994) (punctuation 986 . 987) (symbol 984 . 985) (TYPENAME 975 . 983) (punctuation 973 . 974) (symbol 965 . 973) (TYPENAME 956 . 964) (punctuation 954 . 955) (TEMPLATE 946 . 954))
      :lexical-table 
        '(("BOOST_MPL_AUX_CONTAINS_IMPL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_FIND_IF_PRED_HPP_INCLUDED" variable (:constant-flag t) nil [58 97])
            ("boost/mpl/aux_/iter_apply.hpp" include (:system-flag t) nil [392 432])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [433 461])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("find_if_pred" type
                                       (:template 
                                          ( ("Predicate" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Iterator" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("not_" type
                                                             (:template-specifier 
                                                                ( ("aux::iter_apply1" type (:template-specifier 
                                                                    ( ("Predicate" type nil nil nil)
                                                                      ("Iterator" type nil nil nil))                                                                    ) nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [632 690]))                                                  )
                                                (reparse-symbol classsubparts) [571 697]))                                          )
                                        (reparse-symbol namespacesubparts) [514 700]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [497 703]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [481 704]))                  
                :type "namespace")
                nil [463 705]))          
      :file "find_if_pred.hpp"
      :pointmax 757
      :fsize 756
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_FIND_IF_PRED_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_COMMON_NAME_WKND_HPP_INCLUDED" variable (:constant-flag t) nil [62 105])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [516 563])
            ("BOOST_MPL_AUX_COMMON_NAME_WKND" variable (:constant-flag t) nil [868 898]))          
      :file "common_name_wknd.hpp"
      :pointmax 989
      :fsize 988
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_COMMON_NAME_WKND_HPP_INCLUDED")
          ("BOOST_MPL_AUX_COMMON_NAME_WKND" (spp-arg-list ("name") 898 . 904))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_INSERTER_ALGORITHM_HPP_INCLUDED" variable (:constant-flag t) nil [64 109])
            ("boost/mpl/back_inserter.hpp" include (:system-flag t) nil [560 598])
            ("boost/mpl/front_inserter.hpp" include (:system-flag t) nil [599 638])
            ("boost/mpl/push_back.hpp" include (:system-flag t) nil [639 673])
            ("boost/mpl/push_front.hpp" include (:system-flag t) nil [674 709])
            ("boost/mpl/back_inserter.hpp" include (:system-flag t) nil [710 748])
            ("boost/mpl/front_inserter.hpp" include (:system-flag t) nil [749 788])
            ("boost/mpl/clear.hpp" include (:system-flag t) nil [789 819])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [820 852])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [853 880])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [881 913])
            ("boost/mpl/aux_/common_name_wknd.hpp" include (:system-flag t) nil [914 960])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [961 998])
            ("boost/mpl/aux_/preprocessor/params.hpp" include (:system-flag t) nil [999 1048])
            ("boost/mpl/aux_/preprocessor/default_params.hpp" include (:system-flag t) nil [1049 1106])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [1107 1148])
            ("boost/preprocessor/arithmetic/dec.hpp" include (:system-flag t) nil [1150 1198])
            ("BOOST_MPL_AUX_INSERTER_ALGORITHM_DEF" variable (:constant-flag t) nil [1267 1303]))          
      :file "inserter_algorithm.hpp"
      :pointmax 4934
      :fsize 4933
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_INSERTER_ALGORITHM_HPP_INCLUDED")
          ("BOOST_MPL_AUX_INSERTER_ALGORITHM_DEF" (spp-arg-list ("arity" "name") 1303 . 1316) . 
              ((symbol "BOOST_MPL_AUX_COMMON_NAME_WKND" 1319 . 1349) (semantic-list "(name)" 1349 . 1355) (TEMPLATE "template" 1358 . 1366) (punctuation "<" 1366 . 1367) (symbol "BOOST_MPL_PP_DEFAULT_PARAMS" 1376 . 1403) (semantic-list "(arity, typename P, na)" 1403 . 1426) (punctuation ">" 1433 . 1434) (STRUCT "struct" 1437 . 1443) (symbol "name" 1444 . 1448) (punctuation ":" 1455 . 1456) (symbol "aux" 1457 . 1460) (punctuation ":" 1460 . 1461) (punctuation ":" 1461 . 1462) (spp-symbol-merge ((symbol "name" 1462 . 1466) (symbol "_impl" 1468 . 1473)) 1462 . 1473) (punctuation "<" 1473 . 1474) (symbol "BOOST_MPL_PP_PARAMS" 1474 . 1493) (semantic-list "(arity, P)" 1493 . 1503) (punctuation ">" 1503 . 1504) (semantic-list "{ \\
}" 1507 . 1512) (punctuation ";" 1512 . 1513) (TEMPLATE "template" 1518 . 1526) (punctuation "<" 1526 . 1527) (symbol "BOOST_MPL_PP_PARAMS" 1536 . 1555) (semantic-list "(BOOST_PP_DEC(arity), typename P)" 1555 . 1588) (punctuation ">" 1595 . 1596) (STRUCT "struct" 1599 . 1605) (symbol "name" 1606 . 1610) (punctuation "<" 1610 . 1611) (symbol "BOOST_MPL_PP_PARAMS" 1612 . 1631) (semantic-list "(BOOST_PP_DEC(arity), P)" 1631 . 1655) (punctuation "," 1655 . 1656) (symbol "na" 1656 . 1658) (punctuation ">" 1659 . 1660) (punctuation ":" 1667 . 1668) (symbol "if_" 1669 . 1672) (punctuation "<" 1672 . 1673) (symbol "has_push_back" 1674 . 1687) (punctuation "<" 1687 . 1688) (TYPENAME "typename" 1689 . 1697) (symbol "clear" 1698 . 1703) (punctuation "<" 1703 . 1704) (symbol "P1" 1704 . 1706) (punctuation ">" 1706 . 1707) (punctuation ":" 1707 . 1708) (punctuation ":" 1708 . 1709) (symbol "type" 1709 . 1713) (punctuation ">" 1713 . 1714) (punctuation "," 1725 . 1726) (symbol "aux" 1727 . 1730) (punctuation ":" 1730 . 1731) (punctuation ":" 1731 . 1732) (spp-symbol-merge ((symbol "name" 1732 . 1736) (symbol "_impl" 1738 . 1743)) 1732 . 1743) (punctuation "<" 1743 . 1744) (symbol "BOOST_MPL_PP_PARAMS" 1761 . 1780) (semantic-list "(BOOST_PP_DEC(arity), P)" 1780 . 1804) (punctuation "," 1819 . 1820) (symbol "back_inserter" 1821 . 1834) (punctuation "<" 1834 . 1835) (TYPENAME "typename" 1836 . 1844) (symbol "clear" 1845 . 1850) (punctuation "<" 1850 . 1851) (symbol "P1" 1851 . 1853) (punctuation ">" 1853 . 1854) (punctuation ":" 1854 . 1855) (punctuation ":" 1855 . 1856) (symbol "type" 1856 . 1860) (punctuation ">" 1861 . 1862) (punctuation ">" 1877 . 1878) (punctuation "," 1889 . 1890) (symbol "aux" 1891 . 1894) (punctuation ":" 1894 . 1895) (punctuation ":" 1895 . 1896) (spp-symbol-merge ((spp-symbol-merge ((symbol "reverse_" 1896 . 1904) (symbol "name" 1906 . 1910)) 1896 . 1910) (symbol "_impl" 1912 . 1917)) 1896 . 1917) (punctuation "<" 1917 . 1918) (symbol "BOOST_MPL_PP_PARAMS" 1935 . 1954) (semantic-list "(BOOST_PP_DEC(arity), P)" 1954 . 1978) (punctuation "," 1993 . 1994) (symbol "front_inserter" 1995 . 2009) (punctuation "<" 2009 . 2010) (TYPENAME "typename" 2011 . 2019) (symbol "clear" 2020 . 2025) (punctuation "<" 2025 . 2026) (symbol "P1" 2026 . 2028) (punctuation ">" 2028 . 2029) (punctuation ":" 2029 . 2030) (punctuation ":" 2030 . 2031) (symbol "type" 2031 . 2035) (punctuation ">" 2036 . 2037) (punctuation ">" 2052 . 2053) (punctuation ">" 2064 . 2065) (punctuation ":" 2065 . 2066) (punctuation ":" 2066 . 2067) (symbol "type" 2067 . 2071) (semantic-list "{ \\
}" 2074 . 2079) (punctuation ";" 2079 . 2080) (TEMPLATE "template" 2085 . 2093) (punctuation "<" 2093 . 2094) (symbol "BOOST_MPL_PP_DEFAULT_PARAMS" 2103 . 2130) (semantic-list "(arity, typename P, na)" 2130 . 2153) (punctuation ">" 2160 . 2161) (STRUCT "struct" 2164 . 2170) (spp-symbol-merge ((symbol "reverse_" 2171 . 2179) (symbol "name" 2181 . 2185)) 2171 . 2185) (punctuation ":" 2192 . 2193) (symbol "aux" 2194 . 2197) (punctuation ":" 2197 . 2198) (punctuation ":" 2198 . 2199) (spp-symbol-merge ((spp-symbol-merge ((symbol "reverse_" 2199 . 2207) (symbol "name" 2209 . 2213)) 2199 . 2213) (symbol "_impl" 2215 . 2220)) 2199 . 2220) (punctuation "<" 2220 . 2221) (symbol "BOOST_MPL_PP_PARAMS" 2221 . 2240) (semantic-list "(arity, P)" 2240 . 2250) (punctuation ">" 2250 . 2251) (semantic-list "{ \\
}" 2254 . 2259) (punctuation ";" 2259 . 2260) (TEMPLATE "template" 2265 . 2273) (punctuation "<" 2273 . 2274) (symbol "BOOST_MPL_PP_PARAMS" 2283 . 2302) (semantic-list "(BOOST_PP_DEC(arity), typename P)" 2302 . 2335) (punctuation ">" 2342 . 2343) (STRUCT "struct" 2346 . 2352) (spp-symbol-merge ((symbol "reverse_" 2353 . 2361) (symbol "name" 2363 . 2367)) 2353 . 2367) (punctuation "<" 2367 . 2368) (symbol "BOOST_MPL_PP_PARAMS" 2369 . 2388) (semantic-list "(BOOST_PP_DEC(arity), P)" 2388 . 2412) (punctuation "," 2412 . 2413) (symbol "na" 2413 . 2415) (punctuation ">" 2416 . 2417) (punctuation ":" 2424 . 2425) (symbol "if_" 2426 . 2429) (punctuation "<" 2429 . 2430) (symbol "has_push_back" 2431 . 2444) (punctuation "<" 2444 . 2445) (symbol "P1" 2445 . 2447) (punctuation ">" 2447 . 2448) (punctuation "," 2459 . 2460) (symbol "aux" 2461 . 2464) (punctuation ":" 2464 . 2465) (punctuation ":" 2465 . 2466) (spp-symbol-merge ((spp-symbol-merge ((symbol "reverse_" 2466 . 2474) (symbol "name" 2476 . 2480)) 2466 . 2480) (symbol "_impl" 2482 . 2487)) 2466 . 2487) (punctuation "<" 2487 . 2488) (symbol "BOOST_MPL_PP_PARAMS" 2505 . 2524) (semantic-list "(BOOST_PP_DEC(arity), P)" 2524 . 2548) (punctuation "," 2563 . 2564) (symbol "back_inserter" 2565 . 2578) (punctuation "<" 2578 . 2579) (TYPENAME "typename" 2580 . 2588) (symbol "clear" 2589 . 2594) (punctuation "<" 2594 . 2595) (symbol "P1" 2595 . 2597) (punctuation ">" 2597 . 2598) (punctuation ":" 2598 . 2599) (punctuation ":" 2599 . 2600) (symbol "type" 2600 . 2604) (punctuation ">" 2605 . 2606) (punctuation ">" 2621 . 2622) (punctuation "," 2633 . 2634) (symbol "aux" 2635 . 2638) (punctuation ":" 2638 . 2639) (punctuation ":" 2639 . 2640) (spp-symbol-merge ((symbol "name" 2640 . 2644) (symbol "_impl" 2646 . 2651)) 2640 . 2651) (punctuation "<" 2651 . 2652) (symbol "BOOST_MPL_PP_PARAMS" 2669 . 2688) (semantic-list "(BOOST_PP_DEC(arity), P)" 2688 . 2712) (punctuation "," 2727 . 2728) (symbol "front_inserter" 2729 . 2743) (punctuation "<" 2743 . 2744) (TYPENAME "typename" 2745 . 2753) (symbol "clear" 2754 . 2759) (punctuation "<" 2759 . 2760) (symbol "P1" 2760 . 2762) (punctuation ">" 2762 . 2763) (punctuation ":" 2763 . 2764) (punctuation ":" 2764 . 2765) (symbol "type" 2765 . 2769) (punctuation ">" 2770 . 2771) (punctuation ">" 2786 . 2787) (punctuation ">" 2798 . 2799) (punctuation ":" 2799 . 2800) (punctuation ":" 2800 . 2801) (symbol "type" 2801 . 2805) (semantic-list "{ \\
}" 2808 . 2813) (punctuation ";" 2813 . 2814) (symbol "BOOST_MPL_AUX_NA_SPEC" 2817 . 2838) (semantic-list "(arity, name)" 2838 . 2851) (symbol "BOOST_MPL_AUX_NA_SPEC" 2854 . 2875) (semantic-list "(arity, reverse_##name)" 2875 . 2898)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_PUSH_BACK_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [60 101])
            ("boost/mpl/push_back_fwd.hpp" include (:system-flag t) nil [510 548])
            ("boost/mpl/assert.hpp" include (:system-flag t) nil [549 580])
            ("boost/mpl/aux_/has_type.hpp" include (:system-flag t) nil [581 619])
            ("boost/mpl/aux_/traits_lambda_spec.hpp" include (:system-flag t) nil [620 668])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [669 716])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [717 769])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [771 811])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("has_push_back_arg" type (:type "struct") (reparse-symbol namespacesubparts) [848 876])
                            ("push_back_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil)
                                            ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_MPL_ASSERT_MSG" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("REQUESTED_PUSH_BACK_SPECIALIZATION_FOR_SEQUENCE_DOES_NOT_EXIST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1440 1516]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [1340 1544]))                                          )
                                        (reparse-symbol classsubparts) [1071 1551]))                                  )
                                (reparse-symbol namespacesubparts) [1018 1554]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [831 2131]))                  
                :type "namespace")
                nil [813 2185]))          
      :file "push_back_impl.hpp"
      :pointmax 2185
      :fsize 2184
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 1607 . 2130) (symbol 1588 . 1606) (STRUCT 1581 . 1587) (semantic-list 2104 . 2127) (symbol 2067 . 2104) (number 2105 . 2106) (semantic-list 2047 . 2066) (symbol 2010 . 2047) (number 2048 . 2049) (punctuation 2004 . 2005) (semantic-list 2104 . 2127) (symbol 2067 . 2104) (number 2105 . 2106) (semantic-list 2047 . 2066) (symbol 2010 . 2047) (number 2048 . 2049) (punctuation 2004 . 2005) (punctuation 1579 . 1580) (symbol 1575 . 1578) (TYPENAME 1566 . 1574) (punctuation 1564 . 1565) (TEMPLATE 1556 . 1564) (semantic-list 2104 . 2127) (symbol 2067 . 2104) (number 2105 . 2106) (semantic-list 2047 . 2066) (symbol 2010 . 2047) (number 2048 . 2049) (punctuation 2004 . 2005) (semantic-list 2104 . 2127) (symbol 2067 . 2104) (number 2105 . 2106) (semantic-list 2047 . 2066) (symbol 2010 . 2047) (number 2048 . 2049) (punctuation 2004 . 2005) (semantic-list 1517 . 1529) (semantic-list 1376 . 1425))
      :lexical-table 
        '(("BOOST_MPL_AUX_PUSH_BACK_IMPL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_AT_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [53 87])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [489 523])
            ("boost/mpl/advance.hpp" include (:system-flag t) nil [524 556])
            ("boost/mpl/deref.hpp" include (:system-flag t) nil [557 587])
            ("boost/mpl/aux_/traits_lambda_spec.hpp" include (:system-flag t) nil [588 636])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("at_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil)
                                            ("N" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("iter_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1024 1035])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1076 1086]))                                          )
                                        (reparse-symbol classsubparts) [853 1093]))                                  )
                                (reparse-symbol namespacesubparts) [807 1096]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [656 1150]))                  
                :type "namespace")
                nil [638 1151]))          
      :file "at_impl.hpp"
      :pointmax 1198
      :fsize 1197
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 1135 . 1147) (symbol 1098 . 1135) (number 1136 . 1137) (punctuation 1075 . 1076) (punctuation 1074 . 1075) (punctuation 1073 . 1074) (symbol 1068 . 1073) (punctuation 1067 . 1068) (symbol 1062 . 1067) (TYPENAME 1053 . 1061) (TYPEDEF 1045 . 1052) (punctuation 1023 . 1024) (punctuation 1022 . 1023) (punctuation 1021 . 1022) (symbol 1007 . 1008) (punctuation 1005 . 1006) (symbol 988 . 992) (punctuation 987 . 988) (punctuation 986 . 987) (punctuation 985 . 986) (symbol 977 . 985) (punctuation 976 . 977) (symbol 971 . 976) (TYPENAME 962 . 970) (punctuation 946 . 947) (symbol 939 . 946) (TYPENAME 930 . 938) (TYPEDEF 922 . 929))
      :lexical-table 
        '(("BOOST_MPL_AUX_AT_IMPL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_SIZE_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/size_fwd.hpp" include (:system-flag t) nil [495 528])
            ("boost/mpl/begin_end.hpp" include (:system-flag t) nil [529 563])
            ("boost/mpl/distance.hpp" include (:system-flag t) nil [564 597])
            ("boost/mpl/aux_/traits_lambda_spec.hpp" include (:system-flag t) nil [598 646])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [647 694])
            ("boost" type
               (:members 
                  ( ("mpl" type (:type "namespace") (reparse-symbol namespacesubparts) [714 1382]))                  
                :type "namespace")
                nil [696 1431]))          
      :file "size_impl.hpp"
      :pointmax 1431
      :fsize 1430
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 911 . 1381) (symbol 901 . 910) (STRUCT 894 . 900) (semantic-list 1364 . 1378) (symbol 1327 . 1364) (number 1365 . 1366) (punctuation 1324 . 1325) (semantic-list 1146 . 1324) (punctuation 1140 . 1141) (symbol 1123 . 1127) (punctuation 1122 . 1123) (punctuation 1121 . 1122) (punctuation 1120 . 1121) (symbol 1112 . 1120) (punctuation 1111 . 1112) (symbol 1108 . 1111) (TYPENAME 1099 . 1107) (punctuation 1097 . 1098) (symbol 1080 . 1084) (punctuation 1079 . 1080) (punctuation 1078 . 1079) (punctuation 1077 . 1078) (symbol 1069 . 1077) (punctuation 1068 . 1069) (symbol 1063 . 1068) (TYPENAME 1054 . 1062) (punctuation 1038 . 1039) (symbol 1030 . 1038) (punctuation 1028 . 1029) (symbol 954 . 959) (STRUCT 947 . 953) (punctuation 945 . 946) (symbol 936 . 944) (TYPENAME 927 . 935) (punctuation 925 . 926) (TEMPLATE 917 . 925) (semantic-list 1364 . 1378) (symbol 1327 . 1364) (number 1365 . 1366) (punctuation 1324 . 1325) (semantic-list 1146 . 1324) (punctuation 1140 . 1141) (symbol 1123 . 1127) (punctuation 1122 . 1123) (punctuation 1121 . 1122) (punctuation 1120 . 1121) (symbol 1112 . 1120) (punctuation 1111 . 1112) (symbol 1108 . 1111) (TYPENAME 1099 . 1107) (punctuation 1097 . 1098) (symbol 1080 . 1084) (punctuation 1079 . 1080) (punctuation 1078 . 1079) (punctuation 1077 . 1078) (symbol 1069 . 1077) (punctuation 1068 . 1069) (symbol 1063 . 1068) (TYPENAME 1054 . 1062) (punctuation 1038 . 1039) (symbol 1030 . 1038) (punctuation 1028 . 1029) (symbol 954 . 959) (STRUCT 947 . 953) (punctuation 945 . 946) (symbol 936 . 944) (TYPENAME 927 . 935) (punctuation 925 . 926) (TEMPLATE 917 . 925) (punctuation 892 . 893) (symbol 888 . 891) (TYPENAME 879 . 887) (punctuation 877 . 878) (TEMPLATE 869 . 877) (semantic-list 1364 . 1378) (symbol 1327 . 1364) (number 1365 . 1366) (punctuation 1324 . 1325) (semantic-list 1146 . 1324) (punctuation 1140 . 1141) (symbol 1123 . 1127) (punctuation 1122 . 1123) (punctuation 1121 . 1122) (punctuation 1120 . 1121) (symbol 1112 . 1120) (punctuation 1111 . 1112) (symbol 1108 . 1111) (TYPENAME 1099 . 1107) (punctuation 1097 . 1098) (symbol 1080 . 1084) (punctuation 1079 . 1080) (punctuation 1078 . 1079) (punctuation 1077 . 1078) (symbol 1069 . 1077) (punctuation 1068 . 1069) (symbol 1063 . 1068) (TYPENAME 1054 . 1062) (punctuation 1038 . 1039) (symbol 1030 . 1038) (punctuation 1028 . 1029) (symbol 954 . 959) (STRUCT 947 . 953) (punctuation 945 . 946) (symbol 936 . 944) (TYPENAME 927 . 935) (punctuation 925 . 926) (TEMPLATE 917 . 925) (semantic-list 1364 . 1378) (symbol 1327 . 1364) (number 1365 . 1366) (punctuation 1324 . 1325) (semantic-list 1146 . 1324) (punctuation 1140 . 1141) (symbol 1123 . 1127) (punctuation 1122 . 1123) (punctuation 1121 . 1122) (punctuation 1120 . 1121) (symbol 1112 . 1120) (punctuation 1111 . 1112) (symbol 1108 . 1111) (TYPENAME 1099 . 1107) (punctuation 1097 . 1098) (symbol 1080 . 1084) (punctuation 1079 . 1080) (punctuation 1078 . 1079) (punctuation 1077 . 1078) (symbol 1069 . 1077) (punctuation 1068 . 1069) (symbol 1063 . 1068) (TYPENAME 1054 . 1062) (punctuation 1038 . 1039) (symbol 1030 . 1038) (punctuation 1028 . 1029) (symbol 954 . 959) (STRUCT 947 . 953) (punctuation 945 . 946) (symbol 936 . 944) (TYPENAME 927 . 935) (punctuation 925 . 926) (TEMPLATE 917 . 925))
      :lexical-table 
        '(("BOOST_MPL_AUX_SIZE_IMPL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_MSVC_ETI_BASE_HPP_INCLUDED" variable (:constant-flag t) nil [59 99])
            ("boost/mpl/aux_/is_msvc_eti_arg.hpp" include (:system-flag t) nil [507 552])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [553 593])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [594 634])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [635 682])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("msvc_eti_base" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1499 1514]))                                          
                                        :superclasses 
                                          ( ("T" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1348 1517])
                                    ("msvc_eti_base" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("msvc_eti_base" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1571 1598])
                                            ("first" type
                                               (:typedef ("msvc_eti_base" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1603 1631])
                                            ("second" type
                                               (:typedef ("msvc_eti_base" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1636 1665])
                                            ("tag" type
                                               (:typedef ("msvc_eti_base" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1670 1696])
                                            ("" type
                                               (:members 
                                                  ( ("value" variable
                                                       (:constant-flag t
                                                        :default-value (1716 1717)
                                                        :type "int")
                                                        (reparse-symbol enumsubparts) [1708 1717]))                                                  
                                                :type "enum")
                                                (reparse-symbol classsubparts) [1701 1720]))                                          
                                        :template-specifier 
                                          ( ("int" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1528 1723]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [718 1726]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [702 1727]))                  
                :type "namespace")
                nil [684 1728]))          
      :file "msvc_eti_base.hpp"
      :pointmax 1781
      :fsize 1780
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_MSVC_ETI_BASE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("boost/mpl/bool.hpp" include (:system-flag t) nil [520 552])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [553 596])
            ("AUX778076_OP_PREFIX" variable (:constant-flag t) nil [650 669])
            ("AUX778076_OP_ARITY" variable (:constant-flag t) nil [704 722])
            ("boost/mpl/aux_/numeric_op.hpp" include (:system-flag t) nil [726 766])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [767 819])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [820 873])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [987 1016])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1041 1094]))          
      :file "comparison_op.hpp"
      :pointmax 2266
      :fsize 2265
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 944 . 974) (symbol 937 . 944) (punctuation 936 . 937) (punctuation 934 . 935) (punctuation 933 . 934))
      :lexical-table 
        '(("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "AUX778076_OP_PREFIX" 1017 . 1036) (punctuation "." 1036 . 1037) (symbol "hpp" 1037 . 1040)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_HAS_APPLY_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/has_xxx.hpp" include (:system-flag t) nil [490 522])
            ("boost/mpl/aux_/config/has_apply.hpp" include (:system-flag t) nil [523 569])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [605 825]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [589 826]))                  
                :type "namespace")
                nil [571 827]))          
      :file "has_apply.hpp"
      :pointmax 876
      :fsize 875
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 695 . 720) (symbol 662 . 695))
      :lexical-table 
        '(("BOOST_MPL_AUX_HAS_APPLY_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_MSVC_NEVER_TRUE_HPP_INCLUDED" variable (:constant-flag t) nil [61 103])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [513 554])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [555 602]))          
      :file "msvc_never_true.hpp"
      :pointmax 858
      :fsize 857
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_MSVC_NEVER_TRUE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_FULL_LAMBDA_HPP_INCLUDED" variable (:constant-flag t) nil [113 151])
            ("boost/mpl/lambda_fwd.hpp" include (:system-flag t) nil [600 638])
            ("boost/mpl/bind_fwd.hpp" include (:system-flag t) nil [639 675])
            ("boost/mpl/protect.hpp" include (:system-flag t) nil [676 711])
            ("boost/mpl/quote.hpp" include (:system-flag t) nil [712 745])
            ("boost/mpl/arg.hpp" include (:system-flag t) nil [746 777])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [778 810])
            ("boost/mpl/int_fwd.hpp" include (:system-flag t) nil [811 846])
            ("boost/mpl/aux_/template_arity.hpp" include (:system-flag t) nil [847 894])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [895 935])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [936 979])
            ("boost/mpl/aux_/lambda_arity_param.hpp" include (:system-flag t) nil [1101 1149])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1150 1203])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1317 1346])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1363 1416]))          
      :file "full_lambda.hpp"
      :pointmax 8907
      :fsize 8906
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 1274 . 1304) (symbol 1267 . 1274) (punctuation 1266 . 1267) (punctuation 1264 . 1265) (punctuation 1263 . 1264))
      :lexical-table 
        '(("BOOST_MPL_AUX_FULL_LAMBDA_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "full_lambda" 1347 . 1358) (punctuation "." 1358 . 1359) (symbol "hpp" 1359 . 1362)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_HAS_TAG_HPP_INCLUDED" variable (:constant-flag t) nil [53 87])
            ("boost/mpl/has_xxx.hpp" include (:system-flag t) nil [489 521])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [557 629]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [541 630]))                  
                :type "namespace")
                nil [523 631]))          
      :file "has_tag.hpp"
      :pointmax 678
      :fsize 677
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 606 . 627) (symbol 573 . 606))
      :lexical-table 
        '(("BOOST_MPL_AUX_HAS_TAG_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_HAS_BEGIN_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/has_xxx.hpp" include (:system-flag t) nil [495 527])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [563 638]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [547 639]))                  
                :type "namespace")
                nil [529 640]))          
      :file "has_begin.hpp"
      :pointmax 689
      :fsize 688
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 612 . 636) (symbol 579 . 612))
      :lexical-table 
        '(("BOOST_MPL_AUX_HAS_BEGIN_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_IS_MSVC_ETI_ARG_HPP_INCLUDED" variable (:constant-flag t) nil [61 103])
            ("boost/mpl/aux_/yes_no.hpp" include (:system-flag t) nil [513 549])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [550 590])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [591 643])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [679 1376]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [663 1377]))                  
                :type "namespace")
                nil [645 1378]))          
      :file "is_msvc_eti_arg.hpp"
      :pointmax 1433
      :fsize 1432
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_IS_MSVC_ETI_ARG_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_TRAITS_LAMBDA_SPEC_HPP_INCLUDED" variable (:constant-flag t) nil [64 109])
            ("boost/mpl/sequence_tag_fwd.hpp" include (:system-flag t) nil [522 563])
            ("boost/mpl/void.hpp" include (:system-flag t) nil [564 593])
            ("boost/mpl/aux_/preprocessor/params.hpp" include (:system-flag t) nil [594 643])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [644 687])
            ("BOOST_MPL_ALGORITM_TRAITS_LAMBDA_SPEC_IMPL" variable (:constant-flag t) nil [752 794])
            ("BOOST_MPL_ALGORITM_TRAITS_LAMBDA_SPEC_IMPL" variable (:constant-flag t) nil [866 908])
            ("BOOST_MPL_ALGORITM_TRAITS_LAMBDA_SPEC" variable (:constant-flag t) nil [1464 1501]))          
      :file "traits_lambda_spec.hpp"
      :pointmax 1687
      :fsize 1686
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_ALGORITM_TRAITS_LAMBDA_SPEC" (spp-arg-list ("i" "trait") 1501 . 1511) . 
              ((symbol "BOOST_MPL_ALGORITM_TRAITS_LAMBDA_SPEC_IMPL" 1518 . 1560) (semantic-list "(i, trait)" 1560 . 1570) (TEMPLATE "template" 1577 . 1585) (punctuation "<" 1585 . 1586) (punctuation ">" 1586 . 1587) (STRUCT "struct" 1588 . 1594) (symbol "trait" 1595 . 1600) (punctuation "<" 1600 . 1601) (symbol "non_sequence_tag" 1601 . 1617) (punctuation ">" 1617 . 1618) (semantic-list "{}" 1619 . 1621) (punctuation ";" 1621 . 1622)))
          ("BOOST_MPL_AUX_TRAITS_LAMBDA_SPEC_HPP_INCLUDED")
          ("BOOST_MPL_ALGORITM_TRAITS_LAMBDA_SPEC_IMPL" (spp-arg-list ("i" "trait") 908 . 918) . 
              ((TEMPLATE "template" 921 . 929) (punctuation "<" 929 . 930) (punctuation ">" 930 . 931) (STRUCT "struct" 932 . 938) (symbol "trait" 939 . 944) (punctuation "<" 944 . 945) (symbol "void_" 945 . 950) (punctuation ">" 950 . 951) (semantic-list "{ \\
    template< BOOST_MPL_PP_PARAMS(i, typename T) > struct apply \\
    { \\
    }; \\
}" 954 . 1042) (punctuation ";" 1042 . 1043)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_ITER_APPLY_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [490 520])
            ("boost/mpl/deref.hpp" include (:system-flag t) nil [521 551])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [587 964]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [571 965]))                  
                :type "namespace")
                nil [553 966]))          
      :file "iter_apply.hpp"
      :pointmax 1012
      :fsize 1011
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((punctuation 960 . 961) (semantic-list 957 . 960) (punctuation 955 . 956) (symbol 942 . 946) (punctuation 941 . 942) (punctuation 940 . 941) (punctuation 939 . 940) (symbol 930 . 939) (punctuation 929 . 930) (symbol 924 . 929) (TYPENAME 915 . 923) (punctuation 913 . 914) (symbol 900 . 904) (punctuation 899 . 900) (punctuation 898 . 899) (punctuation 897 . 898) (symbol 888 . 897) (punctuation 887 . 888) (symbol 882 . 887) (TYPENAME 873 . 881) (punctuation 871 . 872) (symbol 861 . 862) (punctuation 849 . 850) (symbol 843 . 849) (punctuation 841 . 842) (symbol 825 . 836) (STRUCT 818 . 824) (punctuation 816 . 817) (symbol 802 . 811) (TYPENAME 793 . 801) (punctuation 791 . 792) (symbol 777 . 786) (TYPENAME 768 . 776) (punctuation 766 . 767) (symbol 760 . 761) (TYPENAME 751 . 759) (punctuation 743 . 744) (TEMPLATE 735 . 743) (punctuation 732 . 733) (semantic-list 729 . 732) (punctuation 727 . 728) (symbol 722 . 726) (punctuation 721 . 722) (punctuation 720 . 721) (punctuation 719 . 720) (symbol 711 . 719) (punctuation 710 . 711) (symbol 705 . 710) (TYPENAME 696 . 704) (punctuation 695 . 696) (symbol 694 . 695) (punctuation 692 . 693) (symbol 686 . 692) (punctuation 684 . 685) (symbol 668 . 679) (STRUCT 661 . 667) (punctuation 659 . 660) (symbol 646 . 654) (TYPENAME 637 . 645) (punctuation 635 . 636) (symbol 629 . 630) (TYPENAME 620 . 628) (punctuation 612 . 613) (TEMPLATE 604 . 612))
      :lexical-table 
        '(("BOOST_MPL_ITER_APPLY_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_NA_ASSERT_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [495 527])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [528 569])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [570 617])
            ("boost/mpl/assert.hpp" include (:system-flag t) nil [725 759])
            ("BOOST_MPL_AUX_ASSERT_NOT_NA" variable (:constant-flag t) nil [771 798]))          
      :file "na_assert.hpp"
      :pointmax 1067
      :fsize 1066
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 699 . 724) (symbol 683 . 699) (number 720 . 723) (punctuation 718 . 719) (punctuation 717 . 718) (punctuation 682 . 683) (punctuation 680 . 681) (punctuation 679 . 680))
      :lexical-table 
        '(("BOOST_MPL_AUX_ASSERT_NOT_NA" (spp-arg-list ("x") 798 . 801) . ((symbol "BOOST_MPL_ASSERT_NOT" 808 . 828) (semantic-list "((boost::mpl::is_na<type>))" 828 . 855)))
          ("BOOST_MPL_AUX_NA_ASSERT_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_ARG_TYPEDEF_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [501 544])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [545 592])
            ("BOOST_MPL_AUX_ARG_TYPEDEF" variable (:constant-flag t) nil [789 814]))          
      :file "arg_typedef.hpp"
      :pointmax 887
      :fsize 886
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_ARG_TYPEDEF_HPP_INCLUDED")
          ("BOOST_MPL_AUX_ARG_TYPEDEF" (spp-arg-list ("T" "name") 814 . 823))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_ITER_FOLD_IF_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [63 107])
            ("boost/mpl/identity.hpp" include (:system-flag t) nil [600 636])
            ("boost/mpl/next.hpp" include (:system-flag t) nil [637 669])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [670 700])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [701 734])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [735 778])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [787 840])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [954 983])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1006 1059]))          
      :file "iter_fold_if_impl.hpp"
      :pointmax 5965
      :fsize 5964
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 911 . 941) (symbol 904 . 911) (punctuation 903 . 904) (punctuation 901 . 902) (punctuation 900 . 901))
      :lexical-table 
        '(("BOOST_MPL_AUX_ITER_FOLD_IF_IMPL_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "iter_fold_if_impl" 984 . 1001) (punctuation "." 1001 . 1002) (symbol "hpp" 1002 . 1005)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_FOLD_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/next_prior.hpp" include (:system-flag t) nil [538 576])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [577 610])
            ("boost/mpl/deref.hpp" include (:system-flag t) nil [611 644])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [645 689])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [848 901])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1015 1044])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1059 1112]))          
      :file "fold_impl.hpp"
      :pointmax 1380
      :fsize 1379
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 972 . 1002) (symbol 965 . 972) (punctuation 964 . 965) (punctuation 962 . 963) (punctuation 961 . 962))
      :lexical-table 
        '(("BOOST_MPL_AUX_FOLD_IMPL_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "fold_impl" 1045 . 1054) (punctuation "." 1054 . 1055) (symbol "hpp" 1055 . 1058)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_REVERSE_FOLD_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [63 107])
            ("boost/mpl/next_prior.hpp" include (:system-flag t) nil [562 600])
            ("boost/mpl/deref.hpp" include (:system-flag t) nil [601 634])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [635 668])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [669 713])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [937 990])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1104 1133])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1156 1209]))          
      :file "reverse_fold_impl.hpp"
      :pointmax 1501
      :fsize 1500
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 1061 . 1091) (symbol 1054 . 1061) (punctuation 1053 . 1054) (punctuation 1051 . 1052) (punctuation 1050 . 1051))
      :lexical-table 
        '(("BOOST_MPL_AUX_REVERSE_FOLD_IMPL_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "reverse_fold_impl" 1134 . 1151) (punctuation "." 1151 . 1152) (symbol "hpp" 1152 . 1155)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_HAS_TYPE_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/has_xxx.hpp" include (:system-flag t) nil [492 524])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [560 633]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [544 634]))                  
                :type "namespace")
                nil [526 635]))          
      :file "has_type.hpp"
      :pointmax 683
      :fsize 682
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 609 . 631) (symbol 576 . 609))
      :lexical-table 
        '(("BOOST_MPL_AUX_HAS_TYPE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("boost/mpl/numeric_cast.hpp" include (:system-flag t) nil [574 614])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [615 653])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [654 684])
            ("boost/mpl/tag.hpp" include (:system-flag t) nil [685 716])
            ("boost/mpl/aux_/numeric_cast_utils.hpp" include (:system-flag t) nil [717 768])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [769 804])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [805 845])
            ("boost/mpl/aux_/lambda_support.hpp" include (:system-flag t) nil [846 893])
            ("boost/mpl/aux_/msvc_eti_base.hpp" include (:system-flag t) nil [894 940])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [941 984])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [985 1028])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [1029 1071])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [1080 1132]))          
      :file "numeric_op.hpp"
      :pointmax 8599
      :fsize 8598
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_TEMPLATE_ARITY_HPP_INCLUDED" variable (:constant-flag t) nil [116 157])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [566 606])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [607 650])
            ("boost/mpl/aux_/template_arity_fwd.hpp" include (:system-flag t) nil [695 746])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [747 778])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [1036 1088])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1089 1142])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1256 1285])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1305 1358]))          
      :file "template_arity.hpp"
      :pointmax 4849
      :fsize 4848
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 1213 . 1243) (symbol 1206 . 1213) (punctuation 1205 . 1206) (punctuation 1203 . 1204) (punctuation 1202 . 1203))
      :lexical-table 
        '(("BOOST_MPL_AUX_TEMPLATE_ARITY_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "template_arity" 1286 . 1300) (punctuation "." 1300 . 1301) (symbol "hpp" 1301 . 1304)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_BEGIN_END_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [60 101])
            ("boost/mpl/begin_end_fwd.hpp" include (:system-flag t) nil [509 547])
            ("boost/mpl/sequence_tag_fwd.hpp" include (:system-flag t) nil [548 589])
            ("boost/mpl/void.hpp" include (:system-flag t) nil [590 619])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [620 652])
            ("boost/mpl/aux_/has_begin.hpp" include (:system-flag t) nil [653 692])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [693 725])
            ("boost/mpl/aux_/traits_lambda_spec.hpp" include (:system-flag t) nil [726 774])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [775 815])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("begin_type" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("Sequence::begin" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [928 966]))                                          )
                                        (reparse-symbol namespacesubparts) [871 970])
                                    ("end_type" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("Sequence::end" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1025 1061]))                                          )
                                        (reparse-symbol namespacesubparts) [971 1065]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [853 1068])
                            ("begin_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1460 1470]))                                          )
                                        (reparse-symbol classsubparts) [1277 1477]))                                  )
                                (reparse-symbol namespacesubparts) [1228 1480])
                            ("end_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1710 1720]))                                          )
                                        (reparse-symbol classsubparts) [1529 1727]))                                  )
                                (reparse-symbol namespacesubparts) [1482 1730])
                            ("AUX778076_IMPL_SPEC" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1807 1826])
                            ("begin_impl" type
                               (:type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable
                                               (:typemodifiers ("typename")
                                                :type "int")
                                                (reparse-symbol classsubparts) nil))                                          )
                                        (reparse-symbol classsubparts) nil))                                  
                                :template-specifier 
                                  ( ("nested_begin_end_tag" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2063 2137])
                            ("end_impl" type
                               (:type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable
                                               (:typemodifiers ("typename")
                                                :type "int")
                                                (reparse-symbol classsubparts) nil))                                          )
                                        (reparse-symbol classsubparts) nil))                                  
                                :template-specifier 
                                  ( ("nested_begin_end_tag" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2138 2208])
                            ("begin_impl" type
                               (:type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("void_" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) nil))                                          )
                                        (reparse-symbol classsubparts) nil))                                  
                                :template-specifier 
                                  ( ("non_sequence_tag" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2379 2430])
                            ("end_impl" type
                               (:type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("void_" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) nil))                                          )
                                        (reparse-symbol classsubparts) nil))                                  
                                :template-specifier 
                                  ( ("non_sequence_tag" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2431 2480])
                            ("begin_impl" type
                               (:type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("void_" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) nil))                                          )
                                        (reparse-symbol classsubparts) nil))                                  
                                :template-specifier 
                                  ( ("na" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2481 2518])
                            ("end_impl" type
                               (:type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("void_" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) nil))                                          )
                                        (reparse-symbol classsubparts) nil))                                  
                                :template-specifier 
                                  ( ("na" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2519 2554]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [835 2702]))                  
                :type "namespace")
                nil [817 2703]))          
      :file "begin_end_impl.hpp"
      :pointmax 2757
      :fsize 2756
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 2687 . 2699) (symbol 2645 . 2687) (number 2688 . 2689) (semantic-list 2630 . 2644) (symbol 2588 . 2630) (number 2631 . 2632) (punctuation 1709 . 1710) (punctuation 1708 . 1709) (punctuation 1707 . 1708) (symbol 1702 . 1707) (punctuation 1700 . 1701) (punctuation 1699 . 1700) (symbol 1691 . 1699) (punctuation 1690 . 1691) (symbol 1682 . 1690) (punctuation 1681 . 1682) (punctuation 1680 . 1681) (symbol 1677 . 1680) (punctuation 1642 . 1643) (punctuation 1641 . 1642) (symbol 1636 . 1641) (punctuation 1634 . 1635) (symbol 1626 . 1634) (punctuation 1625 . 1626) (symbol 1616 . 1625) (punctuation 1615 . 1616) (punctuation 1614 . 1615) (symbol 1611 . 1614) (punctuation 1610 . 1611) (symbol 1603 . 1610) (TYPENAME 1594 . 1602) (TYPEDEF 1586 . 1593) (punctuation 1459 . 1460) (punctuation 1458 . 1459) (punctuation 1457 . 1458) (symbol 1452 . 1457) (punctuation 1450 . 1451) (punctuation 1449 . 1450) (symbol 1441 . 1449) (punctuation 1440 . 1441) (symbol 1430 . 1440) (punctuation 1429 . 1430) (punctuation 1428 . 1429) (symbol 1425 . 1428) (punctuation 1390 . 1391) (punctuation 1389 . 1390) (symbol 1384 . 1389) (punctuation 1382 . 1383) (symbol 1374 . 1382) (punctuation 1373 . 1374) (symbol 1364 . 1373) (punctuation 1363 . 1364) (punctuation 1362 . 1363) (symbol 1359 . 1362) (punctuation 1358 . 1359) (symbol 1351 . 1358) (TYPENAME 1342 . 1350) (TYPEDEF 1334 . 1341))
      :lexical-table 
        '(("BOOST_MPL_AUX_BEGIN_END_IMPL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_O1_SIZE_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/O1_size_fwd.hpp" include (:system-flag t) nil [496 532])
            ("boost/mpl/long.hpp" include (:system-flag t) nil [533 562])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [563 590])
            ("boost/mpl/aux_/has_size.hpp" include (:system-flag t) nil [591 629])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [630 677])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [678 730])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [731 772])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [773 820])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("O1_size_impl" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("Sequence::size" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1207 1282]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1191 1284]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [840 2168]))                  
                :type "namespace")
                nil [822 2216]))          
      :file "O1_size_impl.hpp"
      :pointmax 2216
      :fsize 2215
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 1331 . 2167) (symbol 1318 . 1330) (STRUCT 1311 . 1317) (punctuation 1562 . 1563) (punctuation 1561 . 1562) (punctuation 1560 . 1561) (punctuation 1546 . 1547) (number 1545 . 1546) (punctuation 1544 . 1545) (punctuation 1543 . 1544) (symbol 1538 . 1543) (punctuation 1536 . 1537) (punctuation 1522 . 1523) (symbol 1514 . 1522) (punctuation 1513 . 1514) (symbol 1501 . 1513) (punctuation 1500 . 1501) (punctuation 1499 . 1500) (symbol 1496 . 1499) (punctuation 1494 . 1495) (punctuation 1480 . 1481) (symbol 1472 . 1480) (punctuation 1471 . 1472) (symbol 1463 . 1471) (punctuation 1462 . 1463) (punctuation 1461 . 1462) (symbol 1458 . 1461) (punctuation 1442 . 1443) (symbol 1439 . 1442) (punctuation 1437 . 1438) (symbol 1374 . 1379) (STRUCT 1367 . 1373) (punctuation 1365 . 1366) (symbol 1356 . 1364) (TYPENAME 1347 . 1355) (punctuation 1345 . 1346) (TEMPLATE 1337 . 1345) (punctuation 1562 . 1563) (punctuation 1561 . 1562) (punctuation 1560 . 1561) (punctuation 1546 . 1547) (number 1545 . 1546) (punctuation 1544 . 1545) (punctuation 1543 . 1544) (symbol 1538 . 1543) (punctuation 1536 . 1537) (punctuation 1522 . 1523) (symbol 1514 . 1522) (punctuation 1513 . 1514) (symbol 1501 . 1513) (punctuation 1500 . 1501) (punctuation 1499 . 1500) (symbol 1496 . 1499) (punctuation 1494 . 1495) (punctuation 1480 . 1481) (symbol 1472 . 1480) (punctuation 1471 . 1472) (symbol 1463 . 1471) (punctuation 1462 . 1463) (punctuation 1461 . 1462) (symbol 1458 . 1461) (punctuation 1442 . 1443) (symbol 1439 . 1442) (punctuation 1437 . 1438) (symbol 1374 . 1379) (STRUCT 1367 . 1373) (punctuation 1365 . 1366) (symbol 1356 . 1364) (TYPENAME 1347 . 1355) (punctuation 1345 . 1346) (TEMPLATE 1337 . 1345) (punctuation 1309 . 1310) (symbol 1305 . 1308) (TYPENAME 1296 . 1304) (punctuation 1294 . 1295) (TEMPLATE 1286 . 1294) (punctuation 1562 . 1563) (punctuation 1561 . 1562) (punctuation 1560 . 1561) (punctuation 1546 . 1547) (number 1545 . 1546) (punctuation 1544 . 1545) (punctuation 1543 . 1544) (symbol 1538 . 1543) (punctuation 1536 . 1537) (punctuation 1522 . 1523) (symbol 1514 . 1522) (punctuation 1513 . 1514) (symbol 1501 . 1513) (punctuation 1500 . 1501) (punctuation 1499 . 1500) (symbol 1496 . 1499) (punctuation 1494 . 1495) (punctuation 1480 . 1481) (symbol 1472 . 1480) (punctuation 1471 . 1472) (symbol 1463 . 1471) (punctuation 1462 . 1463) (punctuation 1461 . 1462) (symbol 1458 . 1461) (punctuation 1442 . 1443) (symbol 1439 . 1442) (punctuation 1437 . 1438) (symbol 1374 . 1379) (STRUCT 1367 . 1373) (punctuation 1365 . 1366) (symbol 1356 . 1364) (TYPENAME 1347 . 1355) (punctuation 1345 . 1346) (TEMPLATE 1337 . 1345) (punctuation 1562 . 1563) (punctuation 1561 . 1562) (punctuation 1560 . 1561) (punctuation 1546 . 1547) (number 1545 . 1546) (punctuation 1544 . 1545) (punctuation 1543 . 1544) (symbol 1538 . 1543) (punctuation 1536 . 1537) (punctuation 1522 . 1523) (symbol 1514 . 1522) (punctuation 1513 . 1514) (symbol 1501 . 1513) (punctuation 1500 . 1501) (punctuation 1499 . 1500) (symbol 1496 . 1499) (punctuation 1494 . 1495) (punctuation 1480 . 1481) (symbol 1472 . 1480) (punctuation 1471 . 1472) (symbol 1463 . 1471) (punctuation 1462 . 1463) (punctuation 1461 . 1462) (symbol 1458 . 1461) (punctuation 1442 . 1443) (symbol 1439 . 1442) (punctuation 1437 . 1438) (symbol 1374 . 1379) (STRUCT 1367 . 1373) (punctuation 1365 . 1366) (symbol 1356 . 1364) (TYPENAME 1347 . 1355) (punctuation 1345 . 1346) (TEMPLATE 1337 . 1345) (semantic-list 1152 . 1189) (symbol 1136 . 1152) (semantic-list 1180 . 1188) (punctuation 1135 . 1136) (punctuation 1133 . 1134) (punctuation 1132 . 1133))
      :lexical-table 
        '(("BOOST_MPL_O1_SIZE_IMPL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_PUSH_FRONT_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [61 103])
            ("boost/mpl/push_front_fwd.hpp" include (:system-flag t) nil [513 552])
            ("boost/mpl/assert.hpp" include (:system-flag t) nil [553 584])
            ("boost/mpl/aux_/has_type.hpp" include (:system-flag t) nil [585 623])
            ("boost/mpl/aux_/traits_lambda_spec.hpp" include (:system-flag t) nil [624 672])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [673 720])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [721 773])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [775 815])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("has_push_front_arg" type (:type "struct") (reparse-symbol namespacesubparts) [852 881])
                            ("push_front_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil)
                                            ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_MPL_ASSERT_MSG" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("REQUESTED_PUSH_FRONT_SPECIALIZATION_FOR_SEQUENCE_DOES_NOT_EXIST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1451 1528]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [1350 1556]))                                          )
                                        (reparse-symbol classsubparts) [1079 1563]))                                  )
                                (reparse-symbol namespacesubparts) [1025 1566]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [835 2152]))                  
                :type "namespace")
                nil [817 2207]))          
      :file "push_front_impl.hpp"
      :pointmax 2207
      :fsize 2206
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 1620 . 2151) (symbol 1600 . 1619) (STRUCT 1593 . 1599) (semantic-list 2124 . 2148) (symbol 2087 . 2124) (number 2125 . 2126) (semantic-list 2066 . 2086) (symbol 2029 . 2066) (number 2067 . 2068) (punctuation 2023 . 2024) (semantic-list 2124 . 2148) (symbol 2087 . 2124) (number 2125 . 2126) (semantic-list 2066 . 2086) (symbol 2029 . 2066) (number 2067 . 2068) (punctuation 2023 . 2024) (punctuation 1591 . 1592) (symbol 1587 . 1590) (TYPENAME 1578 . 1586) (punctuation 1576 . 1577) (TEMPLATE 1568 . 1576) (semantic-list 2124 . 2148) (symbol 2087 . 2124) (number 2125 . 2126) (semantic-list 2066 . 2086) (symbol 2029 . 2066) (number 2067 . 2068) (punctuation 2023 . 2024) (semantic-list 2124 . 2148) (symbol 2087 . 2124) (number 2125 . 2126) (semantic-list 2066 . 2086) (symbol 2029 . 2066) (number 2067 . 2068) (punctuation 2023 . 2024) (semantic-list 1529 . 1541) (semantic-list 1386 . 1436))
      :lexical-table 
        '(("BOOST_MPL_AUX_PUSH_FRONT_IMPL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_CLEAR_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/clear_fwd.hpp" include (:system-flag t) nil [498 532])
            ("boost/mpl/aux_/traits_lambda_spec.hpp" include (:system-flag t) nil [533 581])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [582 622])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("clear_impl" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("apply" type
                                       (:template 
                                          ( ("Sequence" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol classsubparts) [783 826]))                                  )
                                (reparse-symbol namespacesubparts) [734 829]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [642 886]))                  
                :type "namespace")
                nil [624 887]))          
      :file "clear_impl.hpp"
      :pointmax 937
      :fsize 936
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 868 . 883) (symbol 831 . 868) (number 869 . 870))
      :lexical-table 
        '(("BOOST_MPL_AUX_CLEAR_IMPL_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_ADVANCE_FORWARD_HPP_INCLUDED" variable (:constant-flag t) nil [117 159])
            ("boost/mpl/next.hpp" include (:system-flag t) nil [612 644])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [645 683])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [692 745])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [862 891])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [912 965]))          
      :file "advance_forward.hpp"
      :pointmax 3453
      :fsize 3452
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 819 . 849) (symbol 812 . 819) (punctuation 811 . 812) (punctuation 809 . 810) (punctuation 808 . 809))
      :lexical-table 
        '(("BOOST_MPL_AUX_ADVANCE_FORWARD_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "advance_forward" 892 . 907) (punctuation "." 907 . 908) (symbol "hpp" 908 . 911)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX778076_ADVANCE_BACKWARD_HPP_INCLUDED" variable (:constant-flag t) nil [124 173])
            ("boost/mpl/prior.hpp" include (:system-flag t) nil [627 660])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [661 699])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [708 761])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [878 907])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [929 982]))          
      :file "advance_backward.hpp"
      :pointmax 3535
      :fsize 3534
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 835 . 865) (symbol 828 . 835) (punctuation 827 . 828) (punctuation 825 . 826) (punctuation 824 . 825))
      :lexical-table 
        '(("BOOST_MPL_AUX778076_ADVANCE_BACKWARD_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "advance_backward" 908 . 924) (punctuation "." 924 . 925) (symbol "hpp" 925 . 928)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_MSVC_TYPE_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [495 535])
            ("boost/mpl/aux_/is_msvc_eti_arg.hpp" include (:system-flag t) nil [536 581])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("msvc_type" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1160 1190]))                                          )
                                        (reparse-symbol namespacesubparts) [1113 1193])
                                    ("msvc_type" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("int")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1234 1251]))                                          
                                        :template-specifier 
                                          ( ("int" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1195 1254]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [617 1265]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [601 1266]))                  
                :type "namespace")
                nil [583 1267]))          
      :file "msvc_type.hpp"
      :pointmax 1316
      :fsize 1315
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_MSVC_TYPE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_NUMERIC_CAST_HPP_INCLUDED" variable (:constant-flag t) nil [58 97])
            ("boost/mpl/numeric_cast.hpp" include (:system-flag t) nil [510 547])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [548 583])
            ("boost/mpl/aux_/config/forwarding.hpp" include (:system-flag t) nil [584 631])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [667 1829]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [651 1881]))                  
                :type "namespace")
                nil [633 1881]))          
      :file "numeric_cast_utils.hpp"
      :pointmax 1881
      :fsize 1880
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 777 . 1828) (symbol 764 . 776) (STRUCT 757 . 763) (semantic-list 1346 . 1827) (symbol 1333 . 1345) (STRUCT 1326 . 1332) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1324 . 1325) (symbol 1315 . 1319) (TYPENAME 1306 . 1314) (punctuation 1304 . 1305) (symbol 1295 . 1299) (TYPENAME 1286 . 1294) (punctuation 1284 . 1285) (symbol 1278 . 1279) (TYPENAME 1269 . 1277) (punctuation 1261 . 1262) (TEMPLATE 1253 . 1261) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1250 . 1251) (semantic-list 1042 . 1250) (punctuation 1036 . 1037) (symbol 1021 . 1023) (punctuation 1019 . 1020) (symbol 1002 . 1006) (punctuation 1001 . 1002) (punctuation 1000 . 1001) (punctuation 999 . 1000) (symbol 996 . 998) (punctuation 995 . 996) (punctuation 994 . 995) (symbol 990 . 994) (punctuation 989 . 990) (symbol 985 . 989) (punctuation 984 . 985) (symbol 958 . 984) (punctuation 956 . 957) (symbol 945 . 956) (TYPENAME 936 . 944) (punctuation 934 . 935) (symbol 920 . 921) (punctuation 903 . 904) (symbol 892 . 903) (punctuation 890 . 891) (symbol 827 . 832) (STRUCT 820 . 826) (punctuation 818 . 819) (symbol 815 . 817) (TYPENAME 806 . 814) (punctuation 804 . 805) (symbol 802 . 804) (TYPENAME 793 . 801) (punctuation 791 . 792) (TEMPLATE 783 . 791) (semantic-list 1346 . 1827) (symbol 1333 . 1345) (STRUCT 1326 . 1332) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1324 . 1325) (symbol 1315 . 1319) (TYPENAME 1306 . 1314) (punctuation 1304 . 1305) (symbol 1295 . 1299) (TYPENAME 1286 . 1294) (punctuation 1284 . 1285) (symbol 1278 . 1279) (TYPENAME 1269 . 1277) (punctuation 1261 . 1262) (TEMPLATE 1253 . 1261) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1250 . 1251) (semantic-list 1042 . 1250) (punctuation 1036 . 1037) (symbol 1021 . 1023) (punctuation 1019 . 1020) (symbol 1002 . 1006) (punctuation 1001 . 1002) (punctuation 1000 . 1001) (punctuation 999 . 1000) (symbol 996 . 998) (punctuation 995 . 996) (punctuation 994 . 995) (symbol 990 . 994) (punctuation 989 . 990) (symbol 985 . 989) (punctuation 984 . 985) (symbol 958 . 984) (punctuation 956 . 957) (symbol 945 . 956) (TYPENAME 936 . 944) (punctuation 934 . 935) (symbol 920 . 921) (punctuation 903 . 904) (symbol 892 . 903) (punctuation 890 . 891) (symbol 827 . 832) (STRUCT 820 . 826) (punctuation 818 . 819) (symbol 815 . 817) (TYPENAME 806 . 814) (punctuation 804 . 805) (symbol 802 . 804) (TYPENAME 793 . 801) (punctuation 791 . 792) (TEMPLATE 783 . 791) (punctuation 755 . 756) (symbol 746 . 750) (TYPENAME 737 . 745) (punctuation 735 . 736) (symbol 726 . 730) (TYPENAME 717 . 725) (punctuation 715 . 716) (symbol 709 . 710) (TYPENAME 700 . 708) (punctuation 692 . 693) (TEMPLATE 684 . 692) (semantic-list 1346 . 1827) (symbol 1333 . 1345) (STRUCT 1326 . 1332) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1324 . 1325) (symbol 1315 . 1319) (TYPENAME 1306 . 1314) (punctuation 1304 . 1305) (symbol 1295 . 1299) (TYPENAME 1286 . 1294) (punctuation 1284 . 1285) (symbol 1278 . 1279) (TYPENAME 1269 . 1277) (punctuation 1261 . 1262) (TEMPLATE 1253 . 1261) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1250 . 1251) (semantic-list 1042 . 1250) (punctuation 1036 . 1037) (symbol 1021 . 1023) (punctuation 1019 . 1020) (symbol 1002 . 1006) (punctuation 1001 . 1002) (punctuation 1000 . 1001) (punctuation 999 . 1000) (symbol 996 . 998) (punctuation 995 . 996) (punctuation 994 . 995) (symbol 990 . 994) (punctuation 989 . 990) (symbol 985 . 989) (punctuation 984 . 985) (symbol 958 . 984) (punctuation 956 . 957) (symbol 945 . 956) (TYPENAME 936 . 944) (punctuation 934 . 935) (symbol 920 . 921) (punctuation 903 . 904) (symbol 892 . 903) (punctuation 890 . 891) (symbol 827 . 832) (STRUCT 820 . 826) (punctuation 818 . 819) (symbol 815 . 817) (TYPENAME 806 . 814) (punctuation 804 . 805) (symbol 802 . 804) (TYPENAME 793 . 801) (punctuation 791 . 792) (TEMPLATE 783 . 791) (semantic-list 1346 . 1827) (symbol 1333 . 1345) (STRUCT 1326 . 1332) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1324 . 1325) (symbol 1315 . 1319) (TYPENAME 1306 . 1314) (punctuation 1304 . 1305) (symbol 1295 . 1299) (TYPENAME 1286 . 1294) (punctuation 1284 . 1285) (symbol 1278 . 1279) (TYPENAME 1269 . 1277) (punctuation 1261 . 1262) (TEMPLATE 1253 . 1261) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1823 . 1824) (semantic-list 1611 . 1823) (punctuation 1605 . 1606) (symbol 1588 . 1592) (punctuation 1587 . 1588) (punctuation 1586 . 1587) (punctuation 1585 . 1586) (symbol 1582 . 1584) (punctuation 1581 . 1582) (punctuation 1580 . 1581) (symbol 1576 . 1580) (punctuation 1575 . 1576) (symbol 1571 . 1575) (punctuation 1570 . 1571) (symbol 1544 . 1570) (punctuation 1542 . 1543) (symbol 1531 . 1542) (TYPENAME 1522 . 1530) (punctuation 1520 . 1521) (symbol 1505 . 1507) (punctuation 1503 . 1504) (symbol 1489 . 1490) (punctuation 1472 . 1473) (symbol 1461 . 1472) (punctuation 1459 . 1460) (symbol 1396 . 1401) (STRUCT 1389 . 1395) (punctuation 1387 . 1388) (symbol 1384 . 1386) (TYPENAME 1375 . 1383) (punctuation 1373 . 1374) (symbol 1371 . 1373) (TYPENAME 1362 . 1370) (punctuation 1360 . 1361) (TEMPLATE 1352 . 1360) (punctuation 1250 . 1251) (semantic-list 1042 . 1250) (punctuation 1036 . 1037) (symbol 1021 . 1023) (punctuation 1019 . 1020) (symbol 1002 . 1006) (punctuation 1001 . 1002) (punctuation 1000 . 1001) (punctuation 999 . 1000) (symbol 996 . 998) (punctuation 995 . 996) (punctuation 994 . 995) (symbol 990 . 994) (punctuation 989 . 990) (symbol 985 . 989) (punctuation 984 . 985) (symbol 958 . 984) (punctuation 956 . 957) (symbol 945 . 956) (TYPENAME 936 . 944) (punctuation 934 . 935) (symbol 920 . 921) (punctuation 903 . 904) (symbol 892 . 903) (punctuation 890 . 891) (symbol 827 . 832) (STRUCT 820 . 826) (punctuation 818 . 819) (symbol 815 . 817) (TYPENAME 806 . 814) (punctuation 804 . 805) (symbol 802 . 804) (TYPENAME 793 . 801) (punctuation 791 . 792) (TEMPLATE 783 . 791))
      :lexical-table 
        '(("BOOST_MPL_AUX_NUMERIC_CAST_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("boost/mpl/integral_c.hpp" include (:system-flag t) nil [520 558])
            ("boost/mpl/aux_/largest_int.hpp" include (:system-flag t) nil [559 603])
            ("boost/mpl/aux_/value_wknd.hpp" include (:system-flag t) nil [604 647])
            ("AUX778076_OP_PREFIX" variable (:constant-flag t) nil [701 720])
            ("boost/mpl/aux_/numeric_op.hpp" include (:system-flag t) nil [747 787])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [788 840])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [841 894])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1008 1037])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1062 1115]))          
      :file "arithmetic_op.hpp"
      :pointmax 2554
      :fsize 2553
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 965 . 995) (symbol 958 . 965) (punctuation 957 . 958) (punctuation 955 . 956) (punctuation 954 . 955))
      :lexical-table 
        '(("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "AUX778076_OP_PREFIX" 1038 . 1057) (punctuation "." 1057 . 1058) (symbol "hpp" 1058 . 1061)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_LAMBDA_SPEC_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/mpl/void.hpp" include (:system-flag t) nil [501 530])
            ("boost/mpl/lambda_fwd.hpp" include (:system-flag t) nil [531 566])
            ("boost/mpl/int_fwd.hpp" include (:system-flag t) nil [567 599])
            ("boost/mpl/aux_/preprocessor/params.hpp" include (:system-flag t) nil [600 649])
            ("boost/mpl/aux_/lambda_arity_param.hpp" include (:system-flag t) nil [650 698])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [699 742])
            ("BOOST_MPL_AUX_PASS_THROUGH_LAMBDA_SPEC" variable (:constant-flag t) nil [807 845]))          
      :file "lambda_spec.hpp"
      :pointmax 1325
      :fsize 1324
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_MPL_AUX_LAMBDA_SPEC_HPP_INCLUDED")
          ("BOOST_MPL_AUX_PASS_THROUGH_LAMBDA_SPEC" (spp-arg-list ("i" "name") 845 . 854) . 
              ((TEMPLATE "template" 857 . 865) (punctuation "<" 865 . 866) (symbol "BOOST_MPL_PP_PARAMS" 875 . 894) (semantic-list "(i, typename T)" 894 . 909) (punctuation "," 916 . 917) (TYPENAME "typename" 918 . 926) (symbol "Tag" 927 . 930) (punctuation ">" 937 . 938) (STRUCT "struct" 941 . 947) (symbol "lambda" 948 . 954) (punctuation "<" 954 . 955) (symbol "name" 964 . 968) (punctuation "<" 968 . 969) (symbol "BOOST_MPL_PP_PARAMS" 970 . 989) (semantic-list "(i, T)" 989 . 995) (punctuation ">" 996 . 997) (punctuation "," 1004 . 1005) (symbol "Tag" 1006 . 1009) (symbol "BOOST_MPL_AUX_LAMBDA_ARITY_PARAM" 1016 . 1048) (semantic-list "(int_<i>)" 1048 . 1057) (punctuation ">" 1064 . 1065) (semantic-list "{ \\
    typedef false_ is_le; \\
    typedef name< BOOST_MPL_PP_PARAMS(i, T) > result_; \\
    typedef result_ type; \\
}" 1068 . 1186) (punctuation ";" 1186 . 1187)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_HAS_SIZE_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/has_xxx.hpp" include (:system-flag t) nil [492 524])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [560 611]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [544 612]))                  
                :type "namespace")
                nil [526 613]))          
      :file "has_size.hpp"
      :pointmax 661
      :fsize 660
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 603 . 609) (symbol 576 . 603))
      :lexical-table 
        '(("BOOST_MPL_AUX_HAS_SIZE_HPP_INCLUDED")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_ITER_FOLD_IMPL_HPP_INCLUDED" variable (:constant-flag t) nil [60 101])
            ("boost/mpl/next_prior.hpp" include (:system-flag t) nil [553 591])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [592 625])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [626 670])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [829 882])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [996 1025])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1045 1098]))          
      :file "iter_fold_impl.hpp"
      :pointmax 1354
      :fsize 1353
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 953 . 983) (symbol 946 . 953) (punctuation 945 . 946) (punctuation 943 . 944) (punctuation 942 . 943))
      :lexical-table 
        '(("BOOST_MPL_AUX_ITER_FOLD_IMPL_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "iter_fold_impl" 1026 . 1040) (punctuation "." 1040 . 1041) (symbol "hpp" 1041 . 1044)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_MPL_AUX_LARGEST_INT_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [501 528])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [529 557])
            ("boost/mpl/aux_/config/integral.hpp" include (:system-flag t) nil [558 603])
            ("boost/config.hpp" include (:system-flag t) nil [604 631])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("integral_rank" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [684 728])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("bool" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [730 791])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("signed char" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [792 853])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("char" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [854 915])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("unsigned char" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [916 977])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("wchar_t" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1019 1080])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("short" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1088 1149])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("unsigned short" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1150 1211])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("int" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1212 1273])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("unsigned int" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1274 1335])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("long" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1336 1398])
                                    ("integral_rank" type
                                       (:type "struct"
                                        :superclasses 
                                          ( ("int_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("unsigned long" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1399 1461]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [667 2038]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [651 2039]))                  
                :type "namespace")
                nil [633 2090]))          
      :file "largest_int.hpp"
      :pointmax 2090
      :fsize 2089
      :lastmodtime '(21413 1117 0 0)
      :unmatched-syntax '((semantic-list 1857 . 2037) (punctuation 1855 . 1856) (symbol 1844 . 1846) (punctuation 1842 . 1843) (symbol 1831 . 1833) (punctuation 1829 . 1830) (semantic-list 1764 . 1820) (punctuation 1751 . 1752) (symbol 1747 . 1751) (punctuation 1745 . 1746) (symbol 1674 . 1685) (STRUCT 1667 . 1673) (punctuation 2033 . 2034) (punctuation 2033 . 2034) (punctuation 1665 . 1666) (symbol 1662 . 1664) (TYPENAME 1653 . 1661) (punctuation 1651 . 1652) (symbol 1649 . 1651) (TYPENAME 1640 . 1648) (punctuation 1638 . 1639) (TEMPLATE 1630 . 1638) (punctuation 2033 . 2034) (punctuation 2033 . 2034))
      :lexical-table 
        '(("BOOST_MPL_AUX_LARGEST_INT_HPP_INCLUDED")
          )
))
  :file "!usr!include!boost!mpl!aux_!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
